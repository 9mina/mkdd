# File For PAL Symbols, this has to be done manually until i make a tool that can port symbols from debug
global:
  # .init
  0x80003100: __check_pad3
  0x80003140: __set_debug_bba
  0x8000314c: __get_debug_bba
  0x80003154: __start
  0x800032b0: __init_registers
  0x80003340: __init_data
  0x80003400: __init_hardware
  0x80003424: __flush_cache
  0x80003458: memset
  0x80003488: __fill_mem
  0x80003540: memcpy
  0x80003590: TRK_memset
  0x800035c0: TRK_memcpy
  0x80005518: __TRK_reset
  # .text
  # kartLocale.cpp
  0x800056c0: localize__10KartLocaleFv
  0x80346c20: mscpaLanguageName__10KartLocale
  0x803d4980: msLanguage__10KartLocale
  0x803d4984: msSpeedUnit__10KartLocale
  0x803d3240: msCountry__10KartLocale
  0x803d3244: msRegion__10KartLocale
  0x803d3248: msVideoMode__10KartLocale # in .bss for debug(and perhaps other regions?)
  0x803d324c: msVideoFrameMode__10KartLocale
  0x803d3250: msDatingMode__10KartLocale

  # JSystem
  # J3D
  # J3DSys.cpp
  0x803b6db0: j3dSys
  # JKernel
  # JKRAram.cpp
  0x8000b35c: __dt__23JSUList<12JKRAMCommand>Fv
  0x80347ac8: sMessageBuffer__7JKRAram
  0x80347ad8: sMessageQueue__7JKRAram
  0x80347af8: __vt__7JKRAram
  0x803ae920: sAramCommandList__7JKRAram
  # JKRAramArchive.cpp
  0x8000b3b0: __ct__14JKRAramArchiveFlQ210JKRArchive15EMountDirection
  0x8000b454: __dt__14JKRAramArchiveFv
  0x8000b594: __dt__7JKRFileFv
  0x8000b5f4: open__14JKRAramArchiveFl
  0x8000b944: fetchResource__14JKRAramArchiveFPQ210JKRArchive12SDIFileEntryPUl
  0x8000ba5c: fetchResource__14JKRAramArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl
  0x8000bb5c: fetchResource_subroutine__14JKRAramArchiveFUlUlPUcUli
  0x8000bc1c: fetchResource_subroutine__14JKRAramArchiveFUlUlP7JKRHeapiPPUc
  0x8000bd74: getExpandedResSize__14JKRAramArchiveCFPCv
  0x80347b08: __vt__7JKRFile
  0x80347b28: __vt__14JKRAramArchive
  # JKRAramBock.cpp
  0x8000beac: __ct__12JKRAramBlockFUlUlUlUcb
  0x8000bf18: __dt__12JKRAramBlockFv
  0x8000bfd4: allocHead__12JKRAramBlockFUlUcP11JKRAramHeap
  0x8000c080: allocTail__12JKRAramBlockFUlUcP11JKRAramHeap
  0x80347b78: __vt__12JKRAramBlock
  # JKRAramHeap.cpp
  0x8000c138: __ct__11JKRAramHeapFUlUl
  0x8000c204: __dt__11JKRAramHeapFv
  0x8000c2a8: alloc__11JKRAramHeapFUlQ211JKRAramHeap10EAllocMode
  0x8000c318: allocFromHead__11JKRAramHeapFUl
  0x8000c3a4: allocFromTail__11JKRAramHeapFUl
  0x8000c460: __dt__23JSUList<12JKRAramBlock>Fv
  0x80347b88: __vt__11JKRAramHeap
  0x803ae92c: sAramList__11JKRAramHeap
  # JKRAramPiece.cpp
  0x8000c4b4: sendCommand__12JKRAramPieceFP12JKRAMCommand
  0x8000c4d4: orderSync__12JKRAramPieceFiUlUlUlP12JKRAramBlock
  0x8000c68c: startDMA__12JKRAramPieceFP12JKRAMCommand
  0x8000c704: doneDMA__12JKRAramPieceFUl
  0x8000c7ac: __ct__12JKRAMCommandFv
  0x8000c81c: __dt__12JKRAMCommandFv
  0x803ae938: sAramPieceCommandList__12JKRAramPiece
  0x803ae95c: mMutex__12JKRAramPiece
  # JKRAramStream.cpp
  0x8000c908: create__13JKRAramStreamFl
  0x8000c97c: __ct__13JKRAramStreamFl
  0x8000c9cc: __dt__13JKRAramStreamFv
  0x8000ca2c: run__13JKRAramStreamFv
  0x8000ca9c: readFromAram__13JKRAramStreamFv
  0x8000caa4: writeToAram__13JKRAramStreamFP20JKRAramStreamCommand
  0x8000cc9c: getAvailable__20JSURandomInputStreamCFv
  0x8000ccf0: write_StreamToAram_Async__13JKRAramStreamFP18JSUFileInputStreamUlUlUlPUl
  0x8000cdbc: sync__13JKRAramStreamFP20JKRAramStreamCommandi
  0x8000ce50: setTransBuffer__13JKRAramStreamFPUcUlP7JKRHeap
  0x000cea4: __ct__20JKRAramStreamCommandFv
  0x80347b98: sMessageBuffer__13JKRAramStream
  0x80347ba8: sMessageQueue__13JKRAramStream
  0x80347bc8: __vt__13JKRAramStream
  0x803d49d8: sAramStreamObject__13JKRAramStream
  0x803d49dc: transBuffer__13JKRAramStream
  0x803d49e0: transSize__13JKRAramStream
  0x803d49e4: transHeap__13JKRAramStream
  
  # JKRArchivePri.cpp
  0x8000ceb0: __ct__10JKRArchiveFlQ210JKRArchive10EMountMode
  0x8000cf4c: __dt__10JKRArchiveFv
  0x8000cfac: isSameName__10JKRArchiveCFRQ210JKRArchive8CArcNameUlUs
  0x8000cff8: findDirectory__10JKRArchiveCFPCcUl
  0x8000d334: __ct__Q210JKRArchive8CArcNameFPPCcc
  0x8000d370: getString__Q210JKRArchive8CArcNameCFv
  0x8000d378: getHash__Q210JKRArchive8CArcNameCFv
  0x8000d380: findTypeResource__10JKRArchiveCFUlPCc
  0x8000d47c: findFsResource__10JKRArchiveCFPCcUl
  0x8000d7dc: findIdxResource__10JKRArchiveCFUl
  0x8000d804: findNameResource__10JKRArchiveCFPCc
  0x8000d8ac: findPtrResource__10JKRArchiveCFPCv
  0x8000d8e0: findIdResource__10JKRArchiveCFUs
  0x8000d968: store__Q210JKRArchive8CArcNameFPCc
  0x8000da04: store__Q210JKRArchive8CArcNameFPCcc
  0x8000dac8: setExpandSize__10JKRArchiveFPQ210JKRArchive12SDIFileEntryUl
  0x8000db04: getExpandSize__10JKRArchiveCFPQ210JKRArchive12SDIFileEntry
  0x803d49e8: sCurrentDirID__10JKRArchive
  # JKRArchivePub.cpp
  0x8000db44: mount__10JKRArchiveFPCcQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection
  0x8000db98: mount__10JKRArchiveFPvP7JKRHeapQ210JKRArchive15EMountDirection
  0x8000dc7c: mount__10JKRArchiveFlQ210JKRArchive10EMountModeP7JKRHeapQ210JKRArchive15EMountDirection
  0x8000de64: becomeCurrent__10JKRArchiveFPCc
  0x8000defc: getDirEntry__10JKRArchiveCFPQ210JKRArchive9SDirEntryUl
  0x8000df6c: getGlbResource__10JKRArchiveFUlPCcP10JKRArchive
  0x8000e01c: getResource__10JKRArchiveFPCc
  0x8000e09c: getResource__10JKRArchiveFUlPCc
  0x8000e11c: readResource__10JKRArchiveFPvUlUlPCc
  0x8000e1b8: readResource__10JKRArchiveFPvUlPCc
  0x8000e250: readResource__10JKRArchiveFPvUlUs
  0x8000e2c0: removeResourceAll__10JKRArchiveFv
  0x8000e340: removeResource__10JKRArchiveFPv
  0x8000e398: detachResource__10JKRArchiveFPv
  0x8000e3d4: getResSize__10JKRArchiveCFPCv
  0x8000e408: countFile__10JKRArchiveCFPCc
  0x8000e474: getFirstFile__10JKRArchiveCFPCc
  0x8000e528: getExpandedResSize__10JKRArchiveCFPCv
  0x80347bd8: __vt__10JKRArchive
  # JKRCompArchive.cp
  0x8000e554: __ct__14JKRCompArchiveFlQ210JKRArchive15EMountDirection
  0x8000e5f8: __dt__14JKRCompArchiveFv
  0x8000e73c: open__14JKRCompArchiveFl
  0x8000ece4: fetchResource__14JKRCompArchiveFPQ210JKRArchive12SDIFileEntryPUl
  0x8000ee70: fetchResource__14JKRCompArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl
  0x8000f018: removeResourceAll__14JKRCompArchiveFv
  0x8000f0a8: removeResource__14JKRCompArchiveFPv
  0x8000f114: getExpandedResSize__14JKRCompArchiveCFPCv
  0x80347c28: __vt__14JKRCompArchive
  # JKRDecomp.cpp
  0x8000f2ec: create__9JKRDecompFl
  0x8000f350: __ct__9JKRDecompFl
  0x8000f3a0: __dt__9JKRDecompFv
  0x8000f400: run__9JKRDecompFv
  0x8000f4c4: sendCommand__9JKRDecompFP16JKRDecompCommand
  0x8000f4f4: orderSync__9JKRDecompFPUcPUcUlUl
  0x8000f598: decode__9JKRDecompFPUcPUcUlUl
  0x8000f60c: decodeSZP__9JKRDecompFPUcPUcUlUl
  0x8000f7f0: decodeSZS__9JKRDecompFPUcPUcUlUl
  0x8000f8f4: checkCompressed__9JKRDecompFPUc
  0x8000f96c: __ct__16JKRDecompCommandFv
  0x8000f9bc: __dt__16JKRDecompCommandFv
  0x80347cb8: __vt__9JKRDecomp
  0x80347c78: sMessageBuffer__9JKRDecomp
  0x80347c98: sMessageQueue__9JKRDecomp
  0x803d49f0: sDecompObject__9JKRDecomp
  # JKRDisposer.cpp
  0x8000fa00: __ct__11JKRDisposerFv
  0x8000fa68: __dt__11JKRDisposerFv
  # JKRDvdFile.cpp
  0x8000faec: __ct__10JKRDvdFileFv
  0x8000fb58: __ct__10JKRDvdFileFl
  0x8000fbf8: __dt__10JKRDvdFileFv
  0x8000fc94: initiate__10JKRDvdFileFv
  0x8000fd00: open__10JKRDvdFileFPCc
  0x8000fd78: open__10JKRDvdFileFl
  0x8000fdf0: close__10JKRDvdFileFv
  0x8000fe70: readData__10JKRDvdFileFPvll
  0x8000ff1c: writeData__10JKRDvdFileFPCvll
  0x8000ff24: sync__10JKRDvdFileFv
  0x8000ff78: doneProcess__10JKRDvdFileFlP11DVDFileInfo
  0x8000ffa8: getFileSize__10JKRDvdFileCFv
  0x8000fff4: __dt__21JSUList<10JKRDvdFile>Fv
  0x80347cd8: __vt__10JKRDvdFile
  0x803ae974: sDvdList__10JKRDvdFile
  # JKRDvdAramRipper.cpp
  0x8001059c: __dt__18JSUFileInputStreamFv
  # JKRDvdArchive.cpp
  0x80010e4c: __ct__13JKRDvdArchiveFlQ210JKRArchive15EMountDirection
  0x80010ef0: __dt__13JKRDvdArchiveFv
  0x8001100c: open__13JKRDvdArchiveFl
  0x800112b4: fetchResource__13JKRDvdArchiveFPQ210JKRArchive12SDIFileEntryPUl
  0x800113d0: fetchResource__13JKRDvdArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl
  0x800114d0: fetchResource_subroutine__13JKRDvdArchiveFlUlUlPUcUlii
  0x800116d8: fetchResource_subroutine__13JKRDvdArchiveFlUlUlP7JKRHeapiiPPUc
  0x80080d34: getExpandedResSize__13JKRDvdArchiveCFPCv
  0x800118fc: __vt__13JKRDvdArchive
  # JKRDvdRipper.cpp
  0x80011a44: loadToMainRAM__12JKRDvdRipperFPCcPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl
  0x80011afc: loadToMainRAM__12JKRDvdRipperFlPUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl
  0x80011bb4: loadToMainRAM__12JKRDvdRipperFP10JKRDvdFilePUc15JKRExpandSwitchUlP7JKRHeapQ212JKRDvdRipper15EAllocDirectionUlPiPUl
  0x8001209c: JKRDecompressFromDVD__FP10JKRDvdFilePvUlUlUlUlPUl
  0x80012688: isErrorRetry__12JKRDvdRipperFv
  0x800126d4: __dt__23JSUList<12JKRDMCommand>Fv
  0x803ae98c: sDvdAsyncList__12JKRDvdRipper
  # JKRExpHeap.cpp
  0x80012728: createRoot__10JKRExpHeapFib
  0x800127a8: create__10JKRExpHeapFUlP7JKRHeapb
  0x8001287c: create__10JKRExpHeapFPvUlP7JKRHeapb
  0x80012924: do_destroy__10JKRExpHeapFv
  0x800129a0: __ct__10JKRExpHeapFPvUlP7JKRHeapb
  0x80012a28: __dt__10JKRExpHeapFv
  0x80012a90: do_alloc__10JKRExpHeapFUli
  0x80012b94: allocFromHead__10JKRExpHeapFUli
  0x80012df0: allocFromHead__10JKRExpHeapFUl
  0x80012ed0: allocFromTail__10JKRExpHeapFUli
  0x80013028: allocFromTail__10JKRExpHeapFUl
  0x800130fc: do_free__10JKRExpHeapFPv
  0x80013168: do_freeAll__10JKRExpHeapFv
  0x800131e4: do_freeTail__10JKRExpHeapFv
  0x80013268: do_fillFreeArea__10JKRExpHeapFv
  0x8001326c: do_changeGroupID__10JKRExpHeapFUc
  0x800132b4: do_resize__10JKRExpHeapFPvUl
  0x80013464: do_getSize__10JKRExpHeapFPv
  0x800134e0: do_getFreeSize__10JKRExpHeapFv
  0x80013544: do_getMaxFreeBlock__10JKRExpHeapFv
  0x800135b0: do_getTotalFreeSize__10JKRExpHeapFv
  0x80082aa4: getUsedSize__10JKRExpHeapCFUc
  0x8001360c: appendUsedList__10JKRExpHeapFPQ210JKRExpHeap9CMemBlock
  0x800136a4: setFreeBlock__10JKRExpHeapFPQ210JKRExpHeap9CMemBlockPQ210JKRExpHeap9CMemBlockPQ210JKRExpHeap9CMemBlock
  0x800136f0: removeFreeBlock__10JKRExpHeapFPQ210JKRExpHeap9CMemBlock
  0x80013724: recycleFreeBlock__10JKRExpHeapFPQ210JKRExpHeap9CMemBlock
  0x800138fc: joinTwoBlocks__10JKRExpHeapFPQ210JKRExpHeap9CMemBlock
  0x80013a04: check__10JKRExpHeapFv
  0x80013bec: dump__10JKRExpHeapFv
  0x80013dbc: dump_sort__10JKRExpHeapFv
  0x80013fbc: initiate__Q210JKRExpHeap9CMemBlockFPQ210JKRExpHeap9CMemBlockPQ210JKRExpHeap9CMemBlockUlUcUc
  0x80013fdc: allocFore__Q210JKRExpHeap9CMemBlockFUlUcUcUcUc
  0x80014020: allocBack__Q210JKRExpHeap9CMemBlockFUlUcUcUcUc
  0x8001407c: free__Q210JKRExpHeap9CMemBlockFP10JKRExpHeap
  0x800140dc: getHeapBlock__Q210JKRExpHeap9CMemBlockFPv
  0x800140fc: state_register__10JKRExpHeapCFPQ27JKRHeap6TStateUl
  0x800141d8: state_compare__10JKRExpHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState
  0x80014208: getHeapType__10JKRExpHeapFv
  0x80014214: do_getCurrentGroupId__10JKRExpHeapFv
  0x803d4a80: DBfoundSize
  0x803d4a84: DBfoundOffset
  0x803d4a88: DBfoundBlock
  0x803d4a8C: DBnewFreeBlock
  0x803d4a90: DBnewUsedBlock
  0x80347d50: __vt__10JKRExpHeap
  # JKRFileCache.cpp
  0x8001421c: __dt__13JKRFileFinderFv
  0x80347db0: __vt__13JKRFileFinder
  # JKRFileFinder.cpp
  0x8001426c: __ct__12JKRArcFinderFP10JKRArchivell
  0x800142f8: findNextFile__12JKRArcFinderFv
  0x800143ac: __dt__12JKRArcFinderFv
  0x80347dc0: __vt__12JKRArcFinder
  # JKRFileLoader.cpp
  0x80014410: __ct__13JKRFileLoaderFv
  0x80014468: __dt__13JKRFileLoaderFv
  0x800144f4: unmount__13JKRFileLoaderFv
  0x80014548: getGlbResource__13JKRFileLoaderFPCc
  0x80014594: getGlbResource__13JKRFileLoaderFPCcP13JKRFileLoader
  0x80014628: findVolume__13JKRFileLoaderFPPCc
  0x800146bc: fetchVolumeName__13JKRFileLoaderFPclPCc
  0x800147d8: __dt__24JSUList<13JKRFileLoader>Fv
  0x80347dd0: __vt__13JKRFileLoader
  0x803d4a98: sCurrentVolume__13JKRFileLoader
  0x803ae998: sVolumeList__13JKRFileLoader

  # JKRHeap.cpp
  0x8001482c: __ct__7JKRHeapFPvUlP7JKRHeapb
  0x80014954: __dt__7JKRHeapFv
  0x80014a70: initArena__7JKRHeapFPPcPUli
  0x80014b18: becomeSystemHeap__7JKRHeapFv
  0x80014b28: becomeCurrentHeap__7JKRHeapFv
  0x80014b38: destroy__7JKRHeapFv
  0x80014b64: alloc__7JKRHeapFUliP7JKRHeap
  0x80014bc4: alloc__7JKRHeapFUli
  0x80014bf0: free__7JKRHeapFPvP7JKRHeap
  0x80014c3c: free__7JKRHeapFPv
  0x80014c68: callAllDisposer__7JKRHeapFv
  0x80014cb8: freeAll__7JKRHeapFv
  0x80014ce4: freeTail__7JKRHeapFv
  0x80014d10: resize__7JKRHeapFPvUl
  0x80014d3c: getFreeSize__7JKRHeapFv
  0x80014d68: getTotalFreeSize__7JKRHeapFv
  0x80014d94: do_changeGroupID__7JKRHeapFUc
  0x80014d9c: do_getCurrentGroupId__7JKRHeapFv
  0x80014da4: getMaxAllocatableSize__7JKRHeapFi
  0x80014e14: findFromRoot__7JKRHeapFPv
  0x80014e6c: find__7JKRHeapCFPv
  0x800150e0: getNextChild__17JSUTree
  0x800150f4: __ne__25JSUTreeIterator<7JKRHeap>CFPC17JSUTree<7JKRHeap>
  0x80015108: getEndChild__17JSUTree<7JKRHeap>CFv
  0x80015110: __pp__25JSUTreeIterator<7JKRHeap>Fv
  0x8001512c: __rf__25JSUTreeIterator<7JKRHeap>CFv
  0x80015138: __ct__25JSUTreeIterator<7JKRHeap>FP17JSUTree<7JKRHeap>
  0x80015140: getNumChildren__17JSUTree<7JKRHeap>CFv
  0x80015148: getFirstChild__17JSUTree<7JKRHeap>CFv
  0x8001515c: getFirstLink__10JSUPtrListCFv
  0x80015164: findAllHeap__7JKRHeapCFPv
  0x800153d8: dispose__7JKRHeapFPvUl
  0x80015468: dispose__7JKRHeapFPvPv
  0x800154f4: dispose__7JKRHeapFv
  0x80015544: copyMemory__7JKRHeapFPvPvUl
  0x80015570: JKRDefaultMemoryErrorRoutine__FPvUli  
  0x800155a8: __nw__FUl
  0x800155f0: __nw__FUli
  0x8001563c: __nw__FUlP7JKRHeapi
  0x800156a8: __nwa__FUl
  0x800156f0: __nwa__FUli
  0x8001573c: __nwa__FUlP7JKRHeapi
  0x800157a8: __dl__FPv
  0x800157cc: __dla__FPv
  0x800157f0: state_register__7JKRHeapCFPQ27JKRHeap6TStateUl
  0x800157f4: state_compare__7JKRHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState
  0x8001580c: state_dump__7JKRHeapCFRCQ27JKRHeap6TState
  0x80015810: dump_sort__7JKRHeapFv
  0x80347e10: __vt__7JKRHeap
  0x803d3278: sDefaultFillFlag__7JKRHeap
  0x803d4aa0: sSystemHeap__7JKRHeap
  0x803d4aa4: sCurrentHeap__7JKRHeap
  0x803d4aa8: sRootHeap__7JKRHeap
  0x803d4aac: mErrorHandler__7JKRHeap
  0x803d4ab0: sDefaultFillCheckFlag__7JKRHeap
  0x803d4ab4: mCodeStart__7JKRHeap
  0x803d4ab8: mCodeEnd__7JKRHeap
  0x803d4abc: mUserRamStart__7JKRHeap
  0x803d4ac0: mUserRamEnd__7JKRHeap
  0x803d4ac4: mMemorySize__7JKRHeap
  # JKRMemArchive.cpp
  0x80015818: __ct__13JKRMemArchiveFlQ210JKRArchive15EMountDirection
  0x800158c8: __ct__13JKRMemArchiveFPvUl15JKRMemBreakFlag
  0x8001597c: __dt__13JKRMemArchiveFv
  0x80015a24: open__13JKRMemArchiveFlQ210JKRArchive15EMountDirection
  0x80015b94: open__13JKRMemArchiveFPvUl15JKRMemBreakFlag
  0x80015c48: fetchResource__13JKRMemArchiveFPQ210JKRArchive12SDIFileEntryPUl
  0x80015c7c: fetchResource__13JKRMemArchiveFPvUlPQ210JKRArchive12SDIFileEntryPUl
  0x80015d3c: removeResourceAll__13JKRMemArchiveFv
  0x80015d8c: removeResource__13JKRMemArchiveFPv
  0x80015dc8: fetchResource_subroutine__13JKRMemArchiveFPUcUlPUcUli
  0x80015ea8: getExpandedResSize__13JKRMemArchiveCFPCv
  # JKRSolidHeap.cpp
  0x80015f40: create__12JKRSolidHeapFUlP7JKRHeapb
  0x80015fec: do_destroy__12JKRSolidHeapFv
  0x80016044: __ct__12JKRSolidHeapFPvUlP7JKRHeapb
  0x800160a0: __dt__12JKRSolidHeapFv
  0x80016108: adjustSize__12JKRSolidHeapFv
  0x800161bc: do_alloc__12JKRSolidHeapFUli
  0x8001625c: allocFromHead__12JKRSolidHeapFUli
  0x8001631c: allocFromTail__12JKRSolidHeapFUli
  0x800163d4: do_free__12JKRSolidHeapFPv
  0x800163d8: do_freeAll__12JKRSolidHeapFv
  0x80016438: do_freeTail__12JKRSolidHeapFv
  0x800164c4: do_fillFreeArea__12JKRSolidHeapFv
  0x800164c8: do_resize__12JKRSolidHeapFPvUl
  0x800164f8: do_getSize__12JKRSolidHeapFPv
  0x80016528: recordState__12JKRSolidHeapFUl
  0x800165a4: restoreState__12JKRSolidHeapFUl
  0x80016660: check__12JKRSolidHeapFv
  0x800166e4: dump__12JKRSolidHeapFv
  0x800167d0: state_register__12JKRSolidHeapCFPQ27JKRHeap6TStateUl
  0x80016824: state_compare__12JKRSolidHeapCFRCQ27JKRHeap6TStateRCQ27JKRHeap6TState
  0x80016854: getHeapType__12JKRSolidHeapFv
  0x80016860: do_getFreeSize__12JKRSolidHeapFv
  0x80016868: do_getMaxFreeBlock__12JKRSolidHeapFv
  0x80016870: do_getTotalFreeSize__12JKRSolidHeapFv
  0x80347ec0: __vt__12JKRSolidHeap
  # JKRThread.cpp
  0x80016890: __ct__9JKRThreadFUlii
  0x80016934: __ct__9JKRThreadFP7JKRHeapUlii
  0x800169d4: __ct__9JKRThreadFP8OSThreadi
  0x80016a6c: __dt__9JKRThreadFv
  0x80016b44: setCommon_mesgQueue__9JKRThreadFP7JKRHeapi
  0x80016bb4: setCommon_heapSpecified__9JKRThreadFP7JKRHeapUli
  0x80016c3c: start__9JKRThreadFPv
  0x80016c68: run__9JKRThreadFv
  0x80016c70: enter__15JKRThreadSwitchFP9JKRThreadi
  0x80016ce8: __dt__7JKRTaskFv
  0x80016df8: create__7JKRTaskFiiUlP7JKRHeap
  0x80017000: run__7JKRTaskFv
  0x80017094: request__7JKRTaskFPFPv_vPvPv
  0x800171ac: __dt__17JSUList<7JKRTask>Fv
  0x80017200: __dt__19JSUList<9JKRThread>Fv
  0x80347f20: __vt__7JKRTask
  0x80347f30: __vt__9JKRThread
  0x803ae9a4: sThreadList__9JKRThread
  0x803ae9dc: sTaskList__7JKRTask
  0x803d4ac8: sManager__15JKRThreadSwitch

  # JKRAssertHeap.cpp
  0x80017254: __dt__13JKRAssertHeapFv
  0x800172bc: create__13JKRAssertHeapFP7JKRHeap
  0x80017340: do_destroy__13JKRAssertHeapFv
  0x80017370: getHeapType__13JKRAssertHeapFv
  0x8001737c: check__13JKRAssertHeapFv
  0x80017384: dump__13JKRAssertHeapFv
  0x8001738c: dump_sort__13JKRAssertHeapFv
  0x80017394: do_changeGroupID__13JKRAssertHeapFUc
  0x8001739c: do_getCurrentGroupId__13JKRAssertHeapFv
  0x800173a4: do_alloc__13JKRAssertHeapFUli
  0x800173ac: do_free__13JKRAssertHeapFPv
  0x800173b0: do_freeAll__13JKRAssertHeapFv
  0x800173b4: do_freeTail__13JKRAssertHeapFv
  0x800173b8: do_fillFreeArea__13JKRAssertHeapFv
  0x800173bc: do_resize__13JKRAssertHeapFPvUl
  0x800173c4: do_getSize__13JKRAssertHeapFPv
  0x800173cc: do_getFreeSize__13JKRAssertHeapFv
  0x800173d4: do_getMaxFreeBlock__13JKRAssertHeapFv
  0x800173dc: do_getTotalFreeSize__13JKRAssertHeapFv 
  0x80347f40: __vt__13JKRAssertHeap
  # JSupport
  # JSUOutputStream.cpp
  0x800173e4: __dt__10JSUIosBaseFv
  # JSUInputStream.cpp
  0x80017434: __dt__14JSUInputStreamFv
  0x80017498: read__14JSUInputStreamFPvl
  0x800174ec: skip__14JSUInputStreamFl
  0x80017568: align__20JSURandomInputStreamFl
  0x800175f4: skip__20JSURandomInputStreamFl
  0x8001764c: peek__20JSURandomInputStreamFPvl
  0x800176f4: seek__20JSURandomInputStreamFl17JSUStreamSeekFrom
  0x8001773c: __dt__20JSURandomInputStreamFv
  0x80347fa0: __vt__10JSUIosBase
  0x80347fb0: __vt__20JSURandomInputStream
  0x80347fd4: __vt__14JSUInputStream
  # JSUList.cpp
  0x800177b0: __ct__10JSUPtrLinkFPv
  0x800177c8: __dt__10JSUPtrLinkFv 
  0x80017828: __ct__10JSUPtrListFb
  0x80017864: __dt__10JSUPtrListFv
  0x800178d4: initiate__10JSUPtrListFv
  0x800178e8: append__10JSUPtrListFP10JSUPtrLink
  0x800179a0: prepend__10JSUPtrListFP10JSUPtrLink
  0x80017a58: insert__10JSUPtrListFP10JSUPtrLinkP10JSUPtrLink
  0x80017c30: remove__10JSUPtrListFP10JSUPtrLink
  0x80017ce4: getNthLink__10JSUPtrListCFUl
  # JSUMemoryStream.cpp
  0x80017d14: setBuffer__20JSUMemoryInputStreamFPCvl
  0x80017d28: readData__20JSUMemoryInputStreamFPvl
  0x80017d98: seekPos__20JSUMemoryInputStreamFl17JSUStreamSeekFrom
  0x80017e14: __dt__20JSUMemoryInputStreamFv
  0x80017e84: getLength__20JSUMemoryInputStreamCFv
  0x80017e8c: getPosition__20JSUMemoryInputStreamCFv
  0x80347ff0: __vt__20JSUMemoryInputStream
  # JSUFileInputStream.cpp
  0x80017e94: __ct__18JSUFileInputStreamFP7JKRFile
  0x80017ed8: readData__18JSUFileInputStreamFPvl
  0x80017fa4: seekPos__18JSUFileInputStreamFl17JSUStreamSeekFrom
  0x8001807c: getLength__18JSUFileInputStreamCFv
  0x800180ac: getPosition__18JSUFileInputStreamCFv
  0x80348018: __vt__18JSUFileInputStream
  # JUtility
  # JUTConsole.cpp
  0x80018794: __dt__10JUTConsoleFv
  0x80019728: JUTReportConsole_f
  0x800197f0: JUTReportConsole
  0x8001981c: JUTWarningConsole_f
  0x800198e4: JUTWarningConsole
  0x80348040: __vt__10JUTConsole
  # JUTException.cpp
  0x8001ab48: panic_f__12JUTExceptionFPCciPCce
  # JUTGamePad.cpp
  0x8001dae0: __ct__10JUTGamePadFQ210JUTGamePad8EPadPort
  0x8001dbb0: __dt__10JUTGamePadFv
  0x8001e5cc: update__Q210JUTGamePad7CButtonFPC9PADStatusUl
  0x8001e9c8: update__Q210JUTGamePad6CStickFScScQ210JUTGamePad10EStickModeQ210JUTGamePad11EWhichStickUl
  0x8001ec90: update__Q210JUTGamePad6CStickFScUl
  0x8001ed14: getButton__Q210JUTGamePad6CStickFUl
  0x803d3290: sStickMode__10JUTGamePad
  # JUTProcBar.cpp
  0x8001fbdc: __ct__Q210JUTProcBar5CTimeFv
  0x8001fbf0: create__10JUTProcBarFv
  0x8001fd24: destroy__10JUTProcBarFv
  0x8001fd64: clear__10JUTProcBarFv
  0x8001fe34: draw__10JUTProcBarFv
  0x8001fe68: drawProcessBar__10JUTProcBarFv
  0x80021638: drawHeapBar__10JUTProcBarFv
  0x803d32a8: oneFrameRate
  0x803d32ac: oneFrameRateUser
  0x803d4b60: sManager__10JUTProcBar
  # JUTVideo.cpp
  0x803d4b78: sManager__8JUTVideo
  # JUTFontData_Ascfont_fix12.s
  0x8032db80: JUTResFONT_Ascfont_fix12
  # JMath
  0x80026880: JMAEulerToQuat__FsssP10Quaternion
  0x80026944: JMAQuatLerp__FPC10QuaternionPC10QuaternionfP10Quaternion
  0x80026a1c: JMAVECScaleAdd__FPC3VecPC3VecP3Vecf
  0x80026a44: JMAVECLerp__FPC3VecPC3VecP3Vecf
  0x80026a74: JMAMTXApplyScale__FPA4_CfPA4_ffff 
  # random.cpp
  0x80026ad8: __ct__Q25JMath13TRandom_fast_FUl
  # JMATrigonometric.cpp
  0x80026ae0: atan2___Q25JMath18TAtanTable<1024,f>CFff
  0x80026efc: __ct__Q23std9pair<f,f>Fv
  0x803aed20: sincosTable___5JMath
  0x803b4d60: atanTable___5JMath
  0x803b5d80: asinAcosTable___5JMath
  # J2D
  # J2DOrthoGraph.cpp
  0x80027274: J2DDrawLine__FffffQ28JUtility6TColori
  0x800273cc: J2DFillBox__FffffQ28JUtility6TColor
  0x80027414: J2DFillBox__FRCQ29JGeometry8TBox2<f>Q28JUtility6TColor
  0x800274d0: J2DDrawFrame__FffffQ28JUtility6TColorUc
  0x8002751c: J2DDrawFrame__FRCQ29JGeometry8TBox2<f>Q28JUtility6TColorUc
  # JAudio
  # JASReport.cpp
  0x80091270: JASReport__FPCce

  # Dolphin 
  # these have been ported by hand, there might be some errors in here
  # all local symbols are filtered out.
  0x800a9600: PPCMfmsr
  0x800a9608: PPCMtmsr
  0x800a9610: PPCMfhid0
  0x800a9618: PPCMthid0
  0x800a9620: PPCMfl2cr
  0x800a9628: PPCMtl2cr
  0x800a9630: PPCMtdec
  0x800a9638: PPCSync
  0x800a9640: PPCHalt
  0x800a9654: PPCMtmmcr0
  0x800a965c: PPCMtmmcr1
  0x800a9664: PPCMtpmc1
  0x800a966c: PPCMtpmc2
  0x800a9674: PPCMtpmc3
  0x800a967c: PPCMtpmc4
  0x800a9684: PPCMffpscr
  0x800a96a4: PPCMtfpscr
  0x800a96cc: PPCMfhid2
  0x800a96d4: PPCMthid2
  0x800a96dc: PPCMtwpar
  0x800a96e4: PPCDisableSpeculation
  0x800a970c: PPCSetFpNonIEEEMode
  0x800a9714: PSMTXIdentity
  0x800a9740: PSMTXCopy
  0x800a9774: PSMTXConcat
  0x800a9840: PSMTXTranspose
  0x800a9890: PSMTXInverse
  0x800a9988: PSMTXRotRad
  0x800a99f8: PSMTXRotTrig
  0x800a9b58: PSMTXRotAxisRad
  0x800a9bc8: PSMTXTrans
  0x800a9bfc: PSMTXTransApply
  0x800a9c48: PSMTXScale
  0x800a9c70: PSMTXScaleApply
  0x800a9cc8: PSMTXQuat
  0x800a9d6c: C_MTXLookAt
  0x800a9ef8: C_MTXLightPerspective
  0x800a9fc4: C_MTXLightOrtho
  0x800aa04c: PSMTXMultVec
  0x800aa0a0: PSMTXMultVecSR
  0x800aa0f4: PSMTXMultVecArraySR
  0x800aa17c: C_MTXFrustum
  0x800aa218: C_MTXPerspective
  0x800aa2e8: C_MTXOrtho
  0x800aa380: PSMTX44MultVec
  0x800aa3f8: PSVECAdd
  0x800aa41c: PSVECSubtract
  0x800aa440: PSVECScale
  0x800aa45c: PSVECNormalize
  0x800aa4a0: PSVECMag
  0x800aa4e4: PSVECDotProduct
  0x800aa504: PSVECCrossProduct
  0x800aa540: PSVECDistance
  0x800aa594: PSQUATMultiply
  0x800aa5f0: PSQUATScale
  0x800aa60c: PSQUATDotProduct
  0x800aa62c: C_QUATRotAxisRad
  0x800aa6b8: __DVDInitWA
  0x800aa6f8: __DVDInterruptHandler
  0x800aac5c: DVDLowRead
  0x800aaef4: DVDLowSeek
  0x800aaf88: DVDLowWaitCoverClose
  0x800aafb4: DVDLowReadDiskID
  0x800ab058: DVDLowStopMotor
  0x800ab0e4: DVDLowRequestError
  0x800ab170: DVDLowInquiry
  0x800ab20c: DVDLowAudioStream
  0x800ab2a4: DVDLowRequestAudioStatus
  0x800ab330: DVDLowAudioBufferConfig
  0x800ab3cc: DVDLowReset
  0x800ab488: DVDLowBreak
  0x800ab49c: DVDLowClearCallback
  0x800ab4b8: __DVDLowSetWAType
  0x800ab4fc: __DVDLowTestAlarm
  0x800ab534: __DVDFSInit
  0x800ab56c: DVDConvertPathToEntrynum
  0x800ab860: DVDFastOpen
  0x800ab8d4: DVDOpen
  0x800ab99c: DVDClose
  0x800abb20: DVDGetCurrentDir
  0x800abbe4: DVDReadAsyncPrio
  0x800abcd4: DVDReadPrio
  0x800abe14: DVDInit
  0x800ad9fc: DVDReadAbsAsyncPrio
  0x800adad8: DVDReadAbsAsyncForBS
  0x800adba8: DVDReadDiskID
  0x800adc7c: DVDCancelStreamAsync
  0x800add38: DVDInquiryAsync
  0x800ade08: DVDReset
  0x800ade4c: DVDGetCommandBlockStatus
  0x800ade98: DVDGetDriveStatus
  0x800adf44: DVDSetAutoInvalidation
  0x800adf54: DVDResume
  0x800adfa4: DVDCancelAsync
  0x800ae220: DVDCancel
  0x800ae2f0: DVDGetCurrentDiskID
  0x800ae2f8: DVDCheckDisk
  0x800ae3f0: __DVDPrepareResetAsync
  0x800ae50c: __DVDTestAlarm
  0x800ae544: __DVDClearWaitingQueue
  0x800ae57c: __DVDPushWaitingQueue
  0x800ae5e4: __DVDPopWaitingQueue
  0x800ae684: __DVDCheckWaitingQueue
  0x800ae6dc: __DVDDequeueWaitingQueue
  0x800ae858: __DVDStoreErrorCode
  0x800ae8d4: DVDCompareDiskID
  0x800ae9cc: __DVDPrintFatalMessage
  0x800ae9fc: fstload_cb
  0x800aead4: __fstLoad
  0x800aeeb0: VISetPreRetraceCallback
  0x800aeef4: VISetPostRetraceCallback
  0x800aefd8: __VIInit
  0x800af1d8: VIInit
  0x800af688: VIWaitForRetrace
  0x800afb50: VIConfigure
  0x800b0378: VIFlush
  0x800b04a8: VISetNextFrameBuffer
  0x800b0514: VIGetNextFrameBuffer
  0x800b051c: VIGetCurrentFrameBuffer
  0x800b0524: VISetBlack
  0x800b05a0: VIGetRetraceCount
  0x800b064c: VIGetNextField
  0x800b06e8: VIGetCurrentLine
  0x800b0780: VIGetTvFormat
  0x800b07e8: __VIDisplayPositionToXY
  0x800b0a04: __VIGetCurrentPosition
  0x800b0a64: AIRegisterDMACallback
  0x800b0aa8: AIInitDMA
  0x800b0b30: AIStartDMA
  0x800b0b48: AIStopDMA
  0x800b0b60: AISetStreamPlayState
  0x800b0c38: AIGetStreamPlayState
  0x800b0c48: AISetDSPSampleRate
  0x800b0d28: AIGetDSPSampleRate
  0x800b0e10: AIGetStreamSampleRate
  0x800b0e20: AISetStreamVolLeft
  0x800b0e3c: AIGetStreamVolLeft
  0x800b0e4c: AISetStreamVolRight
  0x800b0e68: AIGetStreamVolRight
  0x800b0e78: AIInit
  0x800b1348: ARRegisterDMACallback
  0x800b138c: ARStartDMA
  0x800b147c: ARAlloc
  0x800b14e4: ARInit
  0x800b15a8: ARGetSize
  0x800b2e1c: __ARQServiceQueueLo
  0x800b2f1c: __ARQCallbackHack
  0x800b2f20: __ARQInterruptServiceRoutine
  0x800b2fec: ARQInit
  0x800b305c: ARQPostRequest
  0x800b31b8: DSPCheckMailToDSP
  0x800b31c8: DSPCheckMailFromDSP
  0x800b31d8: DSPReadMailFromDSP
  0x800b31f0: DSPSendMailToDSP
  0x800b3204: DSPAssertInt
  0x800b3244: DSPInit
  0x800b3308: __DSP_debug_printf
  0x800b3358: __DSP_exec_task
  0x800b34f8: __DSP_boot_task
  0x800b3684: __DSP_insert_task
  0x800b3724: __DSP_remove_task
  0x800b37b8: __CARDDefaultApiCallback
  0x800b37bc: __CARDSyncCallback
  0x800b37f0: __CARDExtHandler
  0x800b38c8: __CARDExiHandler
  0x800b39e0: __CARDTxHandler
  0x800b3a88: __CARDUnlockedHandler
  0x800b3b0c: __CARDEnableInterrupt
  0x800b3bcc: __CARDReadStatus
  0x800b3cbc: __CARDClearStatus
  0x800b42fc: __CARDReadSegment
  0x800b4430: __CARDWritePage
  0x800b454c: __CARDEraseSector
  0x800b462c: CARDInit
  0x800b46d8: __CARDGetFontEncode
  0x800b46e0: __CARDSetDiskID
  0x800b4718: __CARDGetControlBlock
  0x800b47d0: __CARDPutControlBlock
  0x800b4834: CARDFreeBlocks
  0x800b4984: __CARDSync
  0x800b4de0: __CARDUnlock
  0x800b5da8: __CARDRead
  0x800b5ee8: __CARDWrite
  0x800b5f4c: __CARDGetFatBlock
  0x800b60f0: __CARDAllocBlock
  0x800b6208: __CARDFreeBlock
  0x800b62a4: __CARDUpdateFatBlock
  0x800b6350: __CARDGetDirBlock
  0x800b64f0: __CARDUpdateDir
  0x800b65b4: __CARDCheckSum
  0x800b6eac: __CARDVerify
  0x800b6f38: CARDCheckExAsync
  0x800b74c8: CARDCheck
  0x800b75e8: CARDProbeEx
  0x800b7b74: __CARDMountCallback
  0x800b7cac: CARDMountAsync
  0x800b7e4c: CARDMount
  0x800b7f30: CARDUnmount
  0x800b8120: __CARDFormatRegionAsync
  0x800b8778: CARDFormat
  0x800b87cc: __CARDCompareFileName
  0x800b8834: __CARDAccess
  0x800b88c8: __CARDIsWritable
  0x800b89fc: __CARDIsReadable
  0x800b8af0: __CARDGetFileNo
  0x800b8c40: CARDFastOpen
  0x800b8d44: CARDOpen
  0x800b8e60: CARDClose
  0x800b8eb4: __CARDIsOpened
  0x800b8fec: CARDCreateAsync
  0x800b920c: CARDCreate
  0x800b9254: __CARDSeek
  0x800b953c: CARDReadAsync
  0x800b9680: CARDRead
  0x800b98e8: CARDWriteAsync
  0x800b99fc: CARDWrite
  0x800b9ae8: CARDFastDeleteAsync
  0x800b9c14: CARDFastDelete
  0x800b9c5c: CARDDeleteAsync
  0x800b9d6c: CARDDelete
  0x800b9fac: CARDGetStatus
  0x800ba0c0: CARDSetStatusAsync
  0x800ba234: CARDSetStatus
  0x800ba27c: CARDRenameAsync
  0x800ba478: CARDRename
  0x800ba770: GXInit
  0x800baf08: __GXInitGX
  0x800bb974: GXInitFifoBase
  0x800bb9e0: GXInitFifoPtrs
  0x800bba50: GXInitFifoLimits
  0x800bba5c: GXSetCPUFifo
  0x800bbb84: GXSetGPFifo
  0x800bbcfc: GXSaveCPUFifo
  0x800bbd1c: __GXSaveCPUFifoAux
  0x800bbdf8: GXGetGPStatus
  0x800bbe48: GXSetBreakPtCallback
  0x800bbe8c: __GXFifoInit
  0x800bbfb4: __GXCleanGPFifo
  0x800bc0b4: GXGetCPUFifo
  0x800bc0bc: GXGetGPFifo
  0x800bc0c4: GXSetVtxDesc
  0x800bc330: GXSetVtxDescv
  0x800bc5b8: __GXSetVCD
  0x800bc674: __GXCalculateVLim
  0x800bc798: GXGetVtxDesc
  0x800bc94c: GXGetVtxDescv
  0x800bc9dc: GXClearVtxDesc
  0x800bca14: GXSetVtxAttrFmt
  0x800bcc70: GXSetVtxAttrFmtv
  0x800bcef0: __GXSetVAT
  0x800bcf8c: GXGetVtxAttrFmt
  0x800bd20c: GXGetVtxAttrFmtv
  0x800bd280: GXSetArray
  0x800bd30c: GXInvalidateVtxCache
  0x800bd31c: GXSetTexCoordGen2
  0x800bd59c: GXSetNumTexGens
  0x800bd5d8: GXSetMisc
  0x800bd66c: GXFlush
  0x800bd6c8: __GXAbort
  0x800bd834: GXAbortFrame
  0x800bd9a4: GXSetDrawDone
  0x800bda3c: GXDrawDone
  0x800bdabc: GXPixModeSync
  0x800bdae0: GXPokeAlphaMode
  0x800bdaf4: GXPokeAlphaRead
  0x800bdb14: GXPokeAlphaUpdate
  0x800bdb2c: GXPokeBlendMode
  0x800bdb90: GXPokeColorUpdate
  0x800bdba8: GXPokeDstAlpha
  0x800bdbcc: GXPokeDither
  0x800bdbe4: GXPokeZMode
  0x800bdc04: GXSetDrawSyncCallback
  0x800bdcd0: GXSetDrawDoneCallback
  0x800bdd94: __GXPEInit
  0x800bde08: __GXSetDirtyState
  0x800bde88: GXBegin
  0x800bdf58: __GXSendFlushPrim
  0x800bdfe0: GXSetLineWidth
  0x800be020: GXSetPointSize
  0x800be060: GXEnableTexOffsets
  0x800be0a8: GXSetCullMode
  0x800be0ec: GXSetCoPlanar
  0x800be120: __GXSetGenMode
  0x800be144: GXSetDispCopySrc
  0x800be1c0: GXSetTexCopySrc
  0x800be23c: GXSetDispCopyDst
  0x800be270: GXSetTexCopyDst
  0x800be3a0: GXSetDispCopyFrame2Field
  0x800be3c4: GXSetCopyClamp
  0x800be41c: GXGetNumXfbLines
  0x800be4ac: GXGetYScaleFactor
  0x800be6e4: GXSetDispCopyYScale
  0x800be7b0: GXSetCopyClear
  0x800be828: GXSetCopyFilter
  0x800bea30: GXSetDispCopyGamma
  0x800bea44: GXCopyDisp
  0x800bebac: GXCopyTex
  0x800bed38: GXClearBoundingBox
  0x800bed70: GXInitLightAttn
  0x800bed8c: GXInitLightPos
  0x800bed9c: GXInitLightColor
  0x800beda8: GXLoadLightObjImm
  0x800bee24: GXSetChanAmbColor
  0x800bef14: GXSetChanMatColor
  0x800bf004: GXSetNumChans
  0x800bf040: GXSetChanCtrl
  0x800bf0f8: GXGetTexBufferSize
  0x800bf254: __GetImageTileCount
  0x800bf31c: GXInitTexObj
  0x800bf568: GXInitTexObjCI
  0x800bf5b0: GXInitTexObjLOD
  0x800bf714: GXGetTexObjFmt
  0x800bf71c: GXGetTexObjMipMap
  0x800bf734: GXLoadTexObjPreLoaded
  0x800bf8b0: GXLoadTexObj
  0x800bf904: GXInitTlutObj
  0x800bf93c: GXLoadTlut
  0x800bf9d4: GXInitTexCacheRegion
  0x800bfac8: GXInitTlutRegion
  0x800bfb00: GXInvalidateTexAll
  0x800bfb48: GXSetTexRegionCallback
  0x800bfb5c: GXSetTlutRegionCallback
  0x800bfc10: __GXSetSUTexRegs
  0x800bfd8c: __GXSetTmemConfig
  0x800c00e0: GXSetTevIndirect
  0x800c014c: GXSetIndTexMtx
  0x800c02c4: GXSetIndTexCoordScale
  0x800c0408: GXSetIndTexOrder
  0x800c04f4: GXSetNumIndStages
  0x800c0518: GXSetTevDirect
  0x800c0560: GXSetTevIndWarp
  0x800c05c4: __GXUpdateBPMask
  0x800c05c8: __GXSetIndirectMask
  0x800c05f8: __GXFlushTextureState
  0x800c061c: GXSetTevOp
  0x800c06a8: GXSetTevColorIn
  0x800c06ec: GXSetTevAlphaIn
  0x800c0730: GXSetTevColorOp
  0x800c0798: GXSetTevAlphaOp
  0x800c0800: GXSetTevColor
  0x800c087c: GXSetTevColorS10
  0x800c08f8: GXSetTevKColor
  0x800c096c: GXSetTevKColorSel
  0x800c09c8: GXSetTevKAlphaSel
  0x800c0a24: GXSetTevSwapMode
  0x800c0a6c: GXSetTevSwapModeTable
  0x800c0aec: GXSetAlphaCompare
  0x800c0b30: GXSetZTexture
  0x800c0bbc: GXSetTevOrder
  0x800c0d58: GXSetNumTevStages
  0x800c0d80: GXSetFog
  0x800c0fa4: GXSetFogRangeAdj
  0x800c10c8: GXSetBlendMode
  0x800c111c: GXSetColorUpdate
  0x800c1148: GXSetAlphaUpdate
  0x800c1174: GXSetZMode
  0x800c11a8: GXSetZCompLoc
  0x800c11dc: GXSetPixelFmt
  0x800c12b0: GXSetDither
  0x800c12dc: GXSetDstAlpha
  0x800c1318: GXSetFieldMask
  0x800c1350: GXSetFieldMode
  0x800c13c8: GXDrawCylinder
  0x800c1cac: GXDrawCube
  0x800c1efc: GXCallDisplayList
  0x800c1f6c: GXSetProjection
  0x800c2010: GXSetProjectionv
  0x800c209c: GXLoadPosMtxImm
  0x800c20ec: GXLoadNrmMtxImm
  0x800c213c: GXSetCurrentMtx
  0x800c2170: GXLoadTexMtxImm
  0x800c2224: __GXSetViewport
  0x800c22b4: GXSetViewport
  0x800c22fc: GXSetScissor
  0x800c2374: GXGetScissor
  0x800c23bc: GXSetScissorBoxOffset
  0x800c23fc: GXSetClipMode
  0x800c2424: __GXSetMatrixIndex
  0x800c24a8: GXSetGPMetric
  0x800c2cf0: GXClearGPMetric
  0x800c2d00: GXReadXfRasMetric
  0x800c2dc4: EXI2_Init
  0x800c2dc8: EXI2_EnableInterrupts
  0x800c2dcc: EXI2_Poll
  0x800c2dd4: EXI2_ReadN
  0x800c2ddc: EXI2_WriteN
  0x800c2de4: EXI2_Reserve
  0x800c2de8: EXI2_Unreserve
  0x800c2dec: AMC_IsStub
  0x800c2df4: Hu_IsStub
  0x800c2dfc: DBClose
  0x800c2e00: DBOpen
  0x800c2e04: DBWrite
  0x800c3064: DBRead
  0x800c30f0: DBQueryData
  0x800c318c: DBInitInterrupts
  0x800c31e0: DBInitComm
  0x800c3970: EXIImm
  0x800c3bcc: EXIImmEx
  0x800c3c6c: EXIDma
  0x800c3d58: EXISync
  0x800c3fa4: EXIClearInterrupts
  0x800c3fec: EXISetExiCallback
  0x800c41dc: EXIProbe
  0x800c425c: EXIProbeEx
  0x800c4310: EXIAttach
  0x800c441c: EXIDetach
  0x800c44d8: EXISelect
  0x800c4604: EXIDeselect
  0x800c4ac4: EXIInit
  0x800c4c98: EXILock
  0x800c4d8c: EXIUnlock
  0x800c4e68: EXIGetState
  0x800c4ea8: EXIGetID
  0x800c5258: EXIGetType
  0x800c54fc: __OSEnableBarnacle
  0x800c56b8: InitializeUART
  0x800c5728: WriteUARTN
  0x800c5944: GDInitGDLObj
  0x800c595c: GDFlushCurrToMem
  0x800c5988: GDPadCurr32
  0x800c5a80: GDOverflowed
  0x800c5ab0: GDSetVtxDescv
  0x800c60ac: GDSetArray
  0x800c62b8: GDSetArrayRaw
  0x800c64c0: IPLookupInfo
  0x800c6674: __IPIsMember
  0x800c66d4: IPBind
  0x800c6830: IPGetAnonPort
  0x800c68e8: IPConnect
  0x800c6b74: IPGetRemoteSocket
  0x800c6ba8: IPGetSockOpt
  0x800c6ce0: IPSetSockOpt
  0x800c6f20: IPCheckSum
  0x800c6fc8: IPIn
  0x800c7284: IPOut
  0x800c74e4: IPCancel
  0x800c77c4: ARPInit
  0x800c7878: ARPLookup
  0x800c7a54: ARPRevalidate
  0x800c7c84: ARPHold
  0x800c7fc4: ARPOut
  0x800c8288: ARPGratuitous
  0x800c83c8: ARPClaim
  0x800c86c4: ARPIn
  0x800c87e4: ARPRefresh
  0x800c8ce4: ICMPIn
  0x800c9058: ICMPSendError
  0x800c943c: IPGetMacAddr
  0x800c94ac: IPGetNetmask
  0x800c951c: IPGetAddr
  0x800c958c: IPGetAlias
  0x800c95fc: IPGetMtu
  0x800c9654: IPGetLinkState
  0x800c96ac: IPSetBroadcastAddr
  0x800c972c: IPSetAlias
  0x800c97ac: IPSetMtu
  0x800c9814: IPIsBroadcastAddr
  0x800c9948: IPIsLoopbackAddr
  0x800c9964: IPIsLocalAddr
  0x800c9a20: IPGetRoute
  0x800ca160: IPRedirect
  0x800ca548: IPInitRoute
  0x800ca784: IPRefreshRoute
  0x800cacd0: IPRecoverGateway
  0x800cae94: IPGetConfigError
  0x800caeb0: IPSetConfigError
  0x800caf14: IPClearConfigError
  0x800caf98: UDPCheckSum
  0x800cb040: UDPBind
  0x800cb0d0: UDPConnect
  0x800cb14c: UDPGetRecvBuff
  0x800cb1d8: UDPSetRecvBuff
  0x800cb258: UDPGetSendBuff
  0x800cb2e4: UDPSetSendBuff
  0x800cb36c: UDPOpen
  0x800cb51c: UDPSendAsync
  0x800cb9b8: UDPSend
  0x800cba30: UDPReceiveExAsync
  0x800cbe30: UDPReceiveAsync
  0x800cbe5c: UDPReceiveEx
  0x800cbfd8: UDPCancel
  0x800cc05c: UDPClose
  0x800cc124: UDPSetSockOpt
  0x800cc204: __UDPPoll
  0x800cc250: UDPIn
  0x800cc4e0: UDPNotify
  0x800cc5e4: UDPOnReset
  0x800cc704: IPSetReassemblyBuffer
  0x800ccb34: IPReassemble
  0x800ccd98: ETHIn
  0x800cd494: ETHOut
  0x800cd764: IFInit
  0x800cd974: IFMute
  0x800cdaec: IFFifoInit
  0x800cdbb8: IFFifoAlloc
  0x800cdbd8: IFFifoFree
  0x800cdd88: IFRingIn
  0x800cde3c: IFRingOut
  0x800cded0: IFRingGet
  0x800cdf1c: IFRingPut
  0x800ce104: IFRingInEx
  0x800ce208: TCPCheckSum
  0x800ce40c: TCPRespond
  0x800ce7e8: TCPIn
  0x800cff28: TCPSendIn
  0x800d003c: TCPPeekOut
  0x800d0184: TCPRecvOut
  0x800d0204: TCPNotify
  0x800d0260: TCPSourceQuench
  0x800d02b4: TCPDeleteSackHoles
  0x800d03b8: TCPUpdateScoreboard
  0x800d090c: TCPMakeOption
  0x800d0fd4: TCPOutput
  0x800d1818: TCPStartRxmitTimer
  0x800d1920: TCPStopRxmitTimer
  0x800d1b8c: TCPCancelRxmitTimer
  0x800d1bc8: TCPUpdateRtt
  0x800d1d94: TCPInitRtt
  0x800d1f14: TCPLookupInfo
  0x800d1f4c: TCPGetStatus
  0x800d1f68: TCPGetRemoteSocket
  0x800d1fdc: TCPBind
  0x800d2098: TCPAbort
  0x800d2330: TCPSetSendBuff
  0x800d23ac: TCPSetRecvBuff
  0x800d2430: TCPGetSendBuff
  0x800d24bc: TCPGetRecvBuff
  0x800d2548: TCPOpen
  0x800d2790: TCPListen
  0x800d2874: TCPAcceptAsync
  0x800d2bb8: TCPSendNonblock
  0x800d2c10: TCPSendUrgNonblock
  0x800d2c68: TCPSend
  0x800d2ce4: TCPSendUrg
  0x800d2d60: TCPReceiveExAsync
  0x800d306c: TCPReceiveEx
  0x800d30e4: TCPCloseAsync
  0x800d3280: TCPClose
  0x800d32f8: TCPShutdown
  0x800d35c0: TCPCancel
  0x800d36a0: TCPReceiveUrgExAsync
  0x800d3934: TCPReceiveUrgEx
  0x800d39ac: TCPGetSockOpt
  0x800d3bf0: TCPSetSockOpt
  0x800d3dd4: TCPSetTimeout
  0x800d3e40: TCPOnReset
  0x800d3e8c: __TCPPoll
  0x800d3ff0: TCPSetTimeWaitBuffer
  0x800d405c: TCPLookupTimeWaitInfo
  0x800d41d4: TCPTestTimeWait
  0x800d4418: TCPStartTimeWait
  0x800d45a4: DNSOpen
  0x800d46f4: DNSClose
  0x800d48e8: DHCPProcessOptions
  0x800d6488: DHCPStartupEx
  0x800d6590: DHCPCleanup
  0x800d6668: DHCPReboot
  0x800d66f0: DHCPAuto
  0x800d67c0: DHCPGetStatus
  0x800d6a28: IPAutoConfig
  0x800d6bac: IPAutoStop
  0x800d6c2c: IPProcessSourceRoute
  0x800d6cf4: IPReverseSourceRoute
  0x800d6ea4: IPUpdateRecordRoute
  0x800d6fc0: SOInetNtoP
  0x800d75e0: SOSetResolver
  0x800d76cc: SOGetResolver
  0x800d79e8: SOInit
  0x800d7a68: SOStartup
  0x800d7f64: SOCleanup
  0x800d82ac: SOSocket
  0x800d8ddc: SOClose
  0x800d91f4: SOListen
  0x800d9320: SOAccept
  0x800d95e0: SOBind
  0x800d9704: SOShutdown
  0x800d9808: SORead
  0x800d9830: SORecvFrom
  0x800d9a68: SOWrite
  0x800d9a90: SOSendTo
  0x800da3c8: SOSetSockOpt
  0x800da3fc: SOFcntl
  0x800da540: SOGetHostID
  0x800da590: __IPWakeupPollingThreads
  0x800da5b4: SOPoll
  0x800da8ac: PPPLayerUp
  0x800da908: PPPLayerDown
  0x800da954: PPPLayerStarted
  0x800da9b0: PPPLayerFinished
  0x800daa0c: PPPInitializeRestartCount
  0x800daa60: PPPSetState
  0x800daad0: PPPGetState
  0x800dc9b0: PPPIn
  0x800dcb24: PPPOpen
  0x800dcd54: PPPUp
  0x800dceec: PPPDown
  0x800dd254: PPPClose
  0x800dd6ec: PPPTimeout
  0x800ddbd0: PPPDeleteOpt
  0x800ddc20: PPPInsertOpt
  0x800ddc98: PPPInit
  0x800de308: PPPoEInit
  0x800de40c: PPPoETerminate
  0x800de62c: PPPoEIn
  0x800df0cc: PPPInitLCP
  0x800df640: PPPInitIPCP
  0x800df8d8: PAPOpen
  0x800df970: PAPUp
  0x800df9f4: PAPDown
  0x800dfa94: PAPClose
  0x800dfb5c: PAPTimeout
  0x800dfc8c: PAPIn
  0x800dfd74: PAPInit
  0x800dfec8: CHAPOpen
  0x800dff44: CHAPUp
  0x800dffac: CHAPDown
  0x800e004c: CHAPClose
  0x800e0114: CHAPTimeout
  0x800e01cc: CHAPIn
  0x800e0364: CHAPInit
  0x800e03f4: IGMPCheckSum
  0x800e06fc: IGMPIn
  0x800e09cc: IGMPInit
  0x800e0a40: IGMPOnReset
  0x800e0ac0: IPMulticastLookup
  0x800e0b6c: IPMulticastJoin
  0x800e0e0c: IPMulticastLeave
  0x800e0f10: IPClose
  0x800e0f84: IPGetUuidString
  0x800e1028: IPScanUuid
  0x800e27f0: ETHInit
  0x800e3058: ETHSendAsync
  0x800e31ec: ETHGetMACAddr
  0x800e3214: ETHSetRecvCallback
  0x800e3278: ETHGetLinkStateAsync
  0x800e32fc: ETHSetProtoType
  0x800e34b4: ETHAddMulticastAddress
  0x800e3664: ETHClearMulticastAddresses
  0x800e3e18: __ETHFilter
  0x800e4380: __ETHPostSend
  0x800e4724: MD5Init
  0x800e4764: MD5Update
  0x800e4854: MD5Final
  0x800e5590: __IPEncodeToBase64
  0x800e57b8: __IPDecodeFromBase64
  0x800e589c: __OSFPRInit
  0x800e59c4: OSGetConsoleType
  0x800e5b50: OSInit
  0x800e61d0: __OSSetExceptionHandler
  0x800e61ec: __OSGetExceptionHandler
  0x800e6258: __DBVECTOR
  0x800e6278: __OSEVSetNumber
  0x800e6298: __OSEVEnd
  0x800e629c: OSDefaultExceptionHandler
  0x800e62f4: __OSPSInit
  0x800e6348: __OSGetDIConfig
  0x800e635c: OSRegisterVersion
  0x800e6388: OSInitAlarm
  0x800e63e0: OSCreateAlarm
  0x800e6640: OSSetAlarm
  0x800e66a8: OSSetPeriodicAlarm
  0x800e6724: OSCancelAlarm
  0x800e6c0c: OSFreeToHeap
  0x800e6c88: OSSetCurrentHeap
  0x800e6c98: OSInitAlloc
  0x800e6d08: OSCreateHeap
  0x800e6d74: OSGetArenaHi
  0x800e6d7c: OSGetArenaLo
  0x800e6d84: OSSetArenaHi
  0x800e6d8c: OSSetArenaLo
  0x800e6d94: __OSInitAudioSystem
  0x800e6f50: __OSStopAudioSystem
  0x800e7028: DCEnable
  0x800e703c: DCInvalidateRange
  0x800e7068: DCFlushRange
  0x800e7098: DCStoreRange
  0x800e70c8: DCFlushRangeNoSync
  0x800e70f4: DCStoreRangeNoSync
  0x800e7120: DCZeroRange
  0x800e714c: ICInvalidateRange
  0x800e7180: ICFlashInvalidate
  0x800e7190: ICEnable
  0x800e7270: LCEnable
  0x800e72a8: LCDisable
  0x800e72d0: LCStoreBlocks
  0x800e72f4: LCStoreData
  0x800e73a0: LCQueueWait
  0x800e73b4: L2GlobalInvalidate
  0x800e744c: DMAErrorHandler
  0x800e75ac: __OSCacheInit
  0x800e78ec: OSSaveFPUContext
  0x800e78f4: OSSetCurrentContext
  0x800e7950: OSGetCurrentContext
  0x800e795c: OSSaveContext
  0x800e79dc: OSLoadContext
  0x800e7ab4: OSGetStackPointer
  0x800e7abc: OSClearContext
  0x800e7ae0: OSInitContext
  0x800e7b9c: OSDumpContext
  0x800e7ec8: __OSContextInit
  0x800e7f10: OSFillFPUContext
  0x800e803c: OSReport
  0x800e80bc: OSPanic
  0x800e81e8: OSSetErrorHandler
  0x800e8400: __OSUnhandledException
  0x800e86e8: OSGetFontEncode
  0x800e8740: OSDisableInterrupts
  0x800e8754: OSEnableInterrupts
  0x800e8768: OSRestoreInterrupts
  0x800e878c: __OSSetInterruptHandler
  0x800e87a8: __OSGetInterruptHandler
  0x800e87bc: __OSInterruptInit
  0x800e8b08: __OSMaskInterrupts
  0x800e8b90: __OSUnmaskInterrupts
  0x800e8c18: __OSDispatchInterrupt
  0x800e8fac: __OSModuleInit
  0x800e8fc4: OSInitMessageQueue
  0x800e9024: OSSendMessage
  0x800e90ec: OSReceiveMessage
  0x800e91c8: OSJamMessage
  0x800e929c: OSGetPhysicalMemSize
  0x800e9350: OSProtectRange
  0x800e952c: __OSInitMemoryProtection
  0x800e9644: OSInitMutex
  0x800e967c: OSLockMutex
  0x800e9758: OSUnlockMutex
  0x800e9820: __OSUnlockAllMutex
  0x800e98ac: __OSReboot
  0x800e9bec: OSRegisterResetFunction
  0x800e9ce0: __OSDoHotReset
  0x800e9d28: OSResetSystem
  0x800e9fe0: OSGetResetCode
  0x800ea010: __OSResetSWInterruptHandler
  0x800ea104: OSGetResetButtonState
  0x800ea39c: OSGetResetSwitchState
  0x800ea534: __OSInitSram
  0x800ea670: __OSLockSram
  0x800ea6cc: __OSLockSramEx
  0x800eaa64: __OSUnlockSram
  0x800eaa88: __OSUnlockSramEx
  0x800eaaac: __OSSyncSram
  0x800eaabc: OSGetSoundMode
  0x800eab3c: OSSetSoundMode
  0x800eabe0: OSGetLanguage
  0x800eac4c: OSGetEuRgb60Mode
  0x800eacbc: OSSetEuRgb60Mode
  0x800ead60: OSGetWirelessID
  0x800eade4: OSSetWirelessID
  0x800eae90: OSGetGbsMode
  0x800eaf00: OSSetGbsMode
  0x800eafd8: __OSInitSystemCall
  0x800eb040: __OSThreadInit
  0x800eb198: OSInitThreadQueue
  0x800eb1a8: OSGetCurrentThread
  0x800eb1b4: OSIsThreadTerminated
  0x800eb1e8: OSDisableScheduler
  0x800eb228: OSEnableScheduler
  0x800eb2d0: __OSGetEffectivePriority
  0x800eb4cc: __OSPromoteThread
  0x800eb744: __OSReschedule
  0x800eb774: OSYieldThread
  0x800eb7b0: OSCreateThread
  0x800eb998: OSExitThread
  0x800eba7c: OSCancelThread
  0x800ebc38: OSDetachThread
  0x800ebcd8: OSResumeThread
  0x800ebf60: OSSuspendThread
  0x800ec0d0: OSSleepThread
  0x800ec1bc: OSWakeupThread
  0x800ec2c0: OSClearStack
  0x800ec36c: OSGetTime
  0x800ec384: OSGetTick
  0x800ec38c: __OSGetSystemTime
  0x800ec3f0: __OSTimeToSystemTime
  0x800ec5e4: OSTicksToCalendarTime
  0x800ec7e8: __init_user
  0x800ec85c: _ExitProcess
  0x800ecb54: PADClamp
  0x800ecc68: PADClampCircle
  0x800ed5ec: PADReset
  0x800ed6fc: PADRecalibrate
  0x800ed810: PADInit
  0x800ed960: PADRead
  0x800edc60: PADControlMotor
  0x800edd18: PADSetSpec
  0x800ee4d0: PADSetAnalogMode
  0x800ee660: PADSetSamplingCallback
  0x800ee6b4: __PADDisableRecalibration
  0x800ee730: SIBusy
  0x800ee750: SIIsChanBusy
  0x800eee64: SIRegisterPollingHandler
  0x800eef30: SIUnregisterPollingHandler
  0x800ef024: SIInit
  0x800ef2e4: SIGetStatus
  0x800ef360: SISetCommand
  0x800ef374: SITransferCommands
  0x800ef384: SISetXY
  0x800ef3f0: SIEnablePolling
  0x800ef48c: SIDisablePolling
  0x800ef5cc: SIGetResponse
  0x800ef71c: SITransfer
  0x800efb20: SIGetType
  0x800efce4: SIGetTypeAsync
  0x800efe20: SIDecodeType
  0x800eff6c: SIProbe
  0x800eff90: SISetSamplingRate
  0x800f0074: SIRefreshSamplingRate
  0x800f00e4: SIResetSteeringAsync
  0x800f03a4: __SISteeringTransfer
  0x800f0418: __SISteeringEnable
  0x800f0480: SIReadSteering
  0x800f0650: SISetSteeringSamplingCallback
  0x800f06a4: SIControlSteering
  0x800f0744: DBInit
  0x800f076c: __DBExceptionDestinationAux
  0x800f07b4: __DBExceptionDestination
  0x800f07c4: __DBIsExceptionMarked
  0x800f07e0: DBPrintf
  0x800f0830: THPVideoDecode
  0x800f7cf8: THPInit
  0x800f7d98: THPAudioDecode
  0x800f8a30: LGInit
  0x800f8acc: LGOpen
  0x800f8c28: LGClose
  0x800f8ca8: LGRead
  0x800f8d94: LGDownloadForceEffect
  0x800f8e60: LGUpdateForceEffect
  0x800f8f30: LGStartForceEffect
  0x800f8fec: LGStopForceEffect
  0x800f90a8: LGDestroyForceEffect
  0x800fa500: UPnPGetHostAddr
  0x800fa54c: UPnPGetNetmask
  0x800fa5bc: __HTTPGetHeader
  0x800fab04: __HTTPGetVersion
  0x800face4: __HTTPGetParameter
  0x800fb058: HTTPGetProtocol
  0x800fb290: HTTPGetMethod
  0x800fb380: HTTPGetRequestURI
  0x800fb514: HTTPGetHeader
  0x800fb6b4: HTTPGetParameter
  0x800fb8b8: HTTPGetStatus
  0x800fbaa4: HTTPAddHeader
  0x800fbb28: HTTPCreateRequest
  0x800fbbd4: HTTPCreateResponse
  0x800fcda4: SSDPInit
  0x800fce64: SSDPStart
  0x800fcf80: SSDPStop
  0x800fd10c: SSDPGetState
  0x800fd114: SSDPSearch
  0x800fd6fc: SSDPGetServerName
  0x800fd708: SSDPGetCacheControlMaxAge
  0x800fd7cc: UPnPGetUuidString
  0x800fd7ec: UPnPScanUuid
  0x800fd80c: UPnPCreateUuidFromName
  0x800fd8bc: UPnPReplaceEscaped
  0x800fd9a0: UPnPRemoveSemicolon
  0x800fdaa4: UPnPRemoveDots
  0x800feabc: UPnPHttpInit
  0x800feb3c: UPnPHttpStart
  0x800fec8c: SendResponseOK
  0x800fedf0: SendResponseStatus
  0x800fefd0: __va_arg
  0x800ff098: __destroy_global_chain
  0x800ff0e0: __register_global_object
  0x800ff0f8: __copy
  0x800ff128: __destroy_new_array
  0x800ff1a4: __destroy_arr
  0x800ff21c: __construct_array
  0x800ff318: __dt__26__partial_array_destructorFv
  0x800ff3d0: __construct_new_array
  0x800ff4d4: __ptmf_test
  0x800ff504: __ptmf_scall
  0x800ff52c: __ptmf_scall4
  0x800ff554: __cvt_fp2unsigned
  0x800ff5d8: _savefpr_24
  0x800ff5dc: _savefpr_25
  0x800ff5e4: _savefpr_27
  0x800ff5e8: _savefpr_28
  0x800ff5ec: _savefpr_29
  0x800ff624: _restfpr_24
  0x800ff628: _restfpr_25
  0x800ff630: _restfpr_27
  0x800ff634: _restfpr_28
  0x800ff638: _restfpr_29
  0x800ff678: __save_gpr26
  0x800ff6c4: _restgpr_26
  0x800ff6e0: __div2u
  0x800ff7cc: __div2i
  0x800ff904: __mod2u
  0x800ff9e8: __mod2i
  0x800ffaf4: __shl2i
  0x800ffb18: __shr2u
  0x800ffb3c: __shr2i
  0x800ffb64: __cvt_dbl_usll
  0x800ffc30: GetR2
  0x800ffc38: __fini_cpp_exceptions
  0x800ffc6c: __init_cpp_exceptions
  0x800ffcac: __unregister_fragment
  0x800ffce0: __register_fragment
  0x800ffd14: __sys_free
  0x800ffdcc: __exit
  0x800ffe58: exit
  0x800ffef0: abort
  0x800fff24: free
  0x800fff60: __pool_free
  0x800ffffc: deallocate_from_fixed_pools
  0x801001c4: __init_pool_obj
  0x8010059c: __flush_all
  0x80100608: __close_all
  0x801006b8: __dec2num
  0x80101028: __num2dec
  0x80102200: abs
  0x80102210: bsearch
  0x8010230c: __flush_buffer
  0x801023d8: __prep_buffer
  0x8010240c: __convert_from_newlines
  0x80102410: __end_critical_region
  0x80102414: __begin_critical_region
  0x80102418: __kill_critical_regions
  0x8010241c: toupper
  0x80102458: tolower
  0x80352e90: __lower_map
  0x80102494: isxdigit
  0x801024b0: isupper
  0x801024cc: isspace
  0x801024e8: isdigit
  0x80102504: isalpha
  0x80102520: __fwrite
  0x8010285c: fwrite
  0x801028bc: __msl_strnicmp
  0x8010296c: fflush
  0x80102ab8: fclose
  0x80102b7c: fseek
  0x80102be0: _fseek
  0x80102dd8: ftell
  0x80102e20: _ftell
  0x80102ed0: wcstombs
  0x80102f78: wctomb
  0x80103090: mbtowc
  0x801032e4: memcmp
  0x80103364: __memrchr
  0x801033bc: memchr
  0x80103414: memmove
  0x8010351c: __copy_longs_rev_unaligned
  0x801035d8: __copy_longs_unaligned
  0x801036a8: __copy_longs_rev_aligned
  0x80103760: __copy_longs_aligned
  0x8010382c: __stdio_atexit
  0x8010383c: sprintf
  0x801038e0: snprintf
  0x80103988: vsnprintf
  0x80103a28: vprintf
  0x80103ab0: fprintf
  0x80103b94: __StringWrite
  0x80103c38: __FileWrite
  0x80105a20: sscanf
  0x80105ac0: vsscanf
  0x80105b30: __StringRead
  0x80106b24: raise
  0x80106c0c: strstr
  0x80106c88: strrchr
  0x80106cec: strchr
  0x80106d58: strncmp
  0x80106dc0: strcmp
  0x80106f08: strcat
  0x80106f4c: strncpy
  0x80106fb0: strcpy
  0x80107088: strlen
  0x801070c0: __strtold
  0x801086c4: strtol
  0x801087cc: strtoul
  0x80108888: __strtoull
  0x80108c98: __strtoul
  0x8010900c: fwide
  0x80109110: __close_console
  0x80109118: __write_console
  0x801091b0: __ieee754_asin
  0x801093e8: __ieee754_atan2
  0x80109678: __ieee754_exp
  0x8010989c: __ieee754_pow
  0x8010a0cc: __ieee754_rem_pio2
  0x8010a46c: __kernel_cos
  0x8010a560: __kernel_rem_pio2
  0x8010b3b4: __kernel_sin
  0x8010b454: __kernel_tan
  0x8010b668: atan
  0x8010b880: ceil
  0x8010b9c4: copysign
  0x8010b9ec: cos
  0x8010bac0: floor
  0x8010bc08: frexp
  0x8010bc94: ldexp
  0x8010be58: modf
  0x8010bf54: sin
  0x8010c02c: tan
  0x8010c0a4: asin
  0x8010c0c4: atan2
  0x8010c0e4: exp
  0x8010c104: pow
  0x8010c124: __ieee754_sqrt
  0x8010c348: tanf
  0x8010c36c: sinf
  0x8010c390: cosf
  0x8010c3b4: __fpclassifyd
  0x8010c434: sqrt
  0x8010c454: strnicmp
  0x8010c474: stricmp
  0x8010c500: TRKNubMainLoop
  0x8010c5f8: TRKDestructEvent
  0x8010c61c: TRKConstructEvent
  0x8010c634: TRKPostEvent
  0x8010c714: TRKGetNextEvent
  0x8010c7c8: TRKInitializeEventQueue
  0x8010c820: TRKNubWelcome
  0x8010c848: TRKTerminateNub
  0x8010c86c: TRKInitializeNub
  0x8010c9b8: TRKMessageSend
  0x8010c9fc: TRKReadBuffer_ui32
  0x8010caec: TRKReadBuffer_ui8
  0x8010cb84: TRKReadBuffer1_ui64
  0x8010cc6c: TRKAppendBuffer_ui32
  0x8010cd68: TRKAppendBuffer_ui8
  0x8010cdd0: TRKAppendBuffer1_ui64
  0x8010cecc: TRKReadBuffer
  0x8010cf58: TRKAppendBuffer
  0x8010cffc: TRKSetBufferPosition
  0x8010d02c: TRKResetBuffer
  0x8010d06c: TRKReleaseBuffer
  0x8010d0d0: TRKGetBuffer
  0x8010d0fc: TRKGetFreeBuffer
  0x8010d1c4: TRKInitializeMessageBuffers
  0x8010d238: TRKTerminateSerialHandler
  0x8010d240: TRKInitializeSerialHandler
  0x8010d304: TRKProcessInput
  0x8010d354: TRKGetInput
  0x8010d3b4: TRKTestForPacket
  0x8010d4f0: usr_put_initialize
  0x8010d4f4: usr_puts_serial
  0x8010d57c: TRKDispatchMessage
  0x8010d6ec: TRKInitializeDispatcher
  0x8010d6f4: TRKDoSetOption
  0x8010d79c: TRKDoStop
  0x8010d844: TRKDoStep
  0x8010da64: TRKDoContinue
  0x8010db14: TRKDoWriteRegisters
  0x8010dda4: TRKDoReadRegisters
  0x8010e084: TRKDoWriteMemory
  0x8010e278: TRKDoReadMemory
  0x8010e464: TRKDoSupportMask
  0x8010e46c: TRKDoVersions
  0x8010e474: TRKDoOverride
  0x8010e4cc: TRKDoReset
  0x8010e524: TRKDoDisconnect
  0x8010e59c: TRKDoConnect
  0x8010e600: SetTRKConnected
  0x8010e60c: GetTRKConnected
  0x8010e61c: OutputData
  0x8010e6c4: HandlePositionFileSupportRequest
  0x8010e7d4: HandleCloseFileSupportRequest
  0x8010e8bc: HandleOpenFileSupportRequest
  0x8010e9d8: TRKRequestSend
  0x8010ebb8: TRKSuppAccessFile
  0x8010edf8: TRKReleaseMutex
  0x8010ee00: TRKAcquireMutex
  0x8010ee08: TRKInitializeMutex
  0x8010ee10: TRKDoNotifyStopped
  0x8010eea8: TRK_flush_cache
  0x8010ef98: __TRK_get_MSR
  0x8010efa0: __TRK_set_MSR
  0x8010efe4: TRKInterruptHandler
  0x8010f178: TRKExceptionHandler
  0x8010f214: TRKSwapAndGo
  0x8010f2d8: TRKInterruptHandlerEnableInterrupts
  0x8010f32c: ReadFPSCR
  0x8010f350: WriteFPSCR
  0x8010f374: TRKTargetSetInputPendingPtr
  0x8010f384: TRKTargetStop
  0x8010f39c: TRKTargetSetStopped
  0x8010f3ac: TRKTargetStopped
  0x8010f3bc: TRKTargetSupportRequest
  0x8010f5bc: TRKTargetGetPC
  0x8010f5cc: TRKTargetStepOutOfRange
  0x8010f684: TRKTargetSingleStep
  0x8010f730: TRKTargetAddExceptionInfo
  0x8010f7b4: TRKTargetAddStopInfo
  0x8010f840: TRKTargetInterrupt
  0x8010f9d0: TRKPostInterruptEvent
  0x8010fa7c: TRKTargetAccessExtended2
  0x8010feb4: TRKTargetAccessExtended1
  0x80110024: TRKTargetAccessFP
  0x80110530: TRKTargetAccessDefault
  0x80110624: TRKTargetReadInstruction
  0x80110670: TRKTargetAccessMemory
  0x801107bc: TRKValidMemory32
  0x80110a60: TRKAccessFile
  0x80110a68: TRKOpenFile
  0x80110a70: TRKCloseFile
  0x80110a78: TRKPositionFile
  0x80110a80: TRKSaveExtended1Block
  0x80110c38: TRKRestoreExtended1Block
  0x80110df0: InitMetroTRK
  0x80110e88: InitMetroTRK_BBA
  0x80110f1c: TRKInitializeTarget
  0x80110f68: __TRK_copy_vectors
  0x80111094: TRKTargetTranslate
  0x801110ec: EnableMetroTRKInterrupts
  0x8011110c: TRK_main
  0x80111164: TRKLoadContext
  0x801111ec: TRKUARTInterruptHandler
  0x801111f0: InitializeProgramEndTrap
  0x80111248: TRK_board_display
  0x80111278: UnreserveEXI2Port
  0x801112a8: ReserveEXI2Port
  0x801112d8: TRKWriteUARTN
  0x80111314: TRKReadUARTN
  0x80111350: TRKPollUART
  0x80111380: EnableEXI2Interrupts
  0x801113c8: TRKInitializeIntDrivenUART
  0x80111418: InitMetroTRKCommTable
  0x80111684: TRKEXICallBack
  0x801116bc: TRKTargetContinue
  0x801116f0: GetUseSerialIO
  0x80111700: SetUseSerialIO
  0x8011170c: __TRK_write_console
  0x801117c8: __read_console
  0x80111884: udp_cc_post_stop
  0x8011188c: udp_cc_pre_continue
  0x80111894: udp_cc_peek
  0x8011189c: udp_cc_write
  0x801118a4: udp_cc_read
  0x801118ac: udp_cc_close
  0x801118b4: udp_cc_open
  0x801118bc: udp_cc_shutdown
  0x801118c4: udp_cc_initialize
  0x801118cc: ddh_cc_initinterrupts
  0x801118f0: ddh_cc_peek
  0x80111960: ddh_cc_post_stop
  0x80111984: ddh_cc_pre_continue
  0x801119a8: ddh_cc_write
  0x80111a68: ddh_cc_read
  0x80111b54: ddh_cc_close
  0x80111b5c: ddh_cc_open
  0x80111b80: ddh_cc_shutdown
  0x80111b88: ddh_cc_initialize
  0x80111c10: CircleBufferReadBytes
  0x80111d18: CircleBufferWriteBytes
  0x80111e20: CircleBufferInitialize
  0x80111e70: CBGetBytesAvailableForRead
  0x80111e78: gdev_cc_initinterrupts
  0x80111e9c: gdev_cc_peek
  0x80111f0c: gdev_cc_post_stop
  0x80111f30: gdev_cc_pre_continue
  0x80111f54: gdev_cc_write
  0x80112014: gdev_cc_read
  0x80112108: gdev_cc_close
  0x80112110: gdev_cc_open
  0x80112134: gdev_cc_shutdown
  0x8011213c: gdev_cc_initialize
  0x801121c4: MWTRACE
  0x80112214: MWExitCriticalSection
  0x80112238: MWEnterCriticalSection
  0x80112268: MWInitializeCriticalSection

  # float.c
  0x803d3844: __float_epsilon

  # Bando
  # EngineSound.cpp
  0x8011226c: getEngineType__11EngineSoundF7EKartID 

  # Inagaki
  # GameAudioCommon.cpp
  0x80113a08: setSeed__Q29GameAudio6RandomFUl
  # GameAudioMain.cpp
  0x8011479c: initRaceSound__Q29GameAudio4MainFv
  0x80115ea4: startSystemSe__Q29GameAudio4MainFUl
  # GameAudioParam.cpp
  0x80119294: setDemoMode__Q29GameAudio10ParametersFUc
  0x801195c0: getDemoMode__Q29GameAudio10ParametersFv  

  0x803d5498: msBasic__Q29GameAudio4Main

  # Kameda
  # MotorManager.cpp
  0x80123a14: __ct__12MotorManagerFP7JKRHeap
  0x80123b04: reset__12MotorManagerFv
  0x80123b7c: exec__12MotorManagerFv
  0x803d5500: mThis__12MotorManager

  # J2DManager.cpp
  0x80123efc: __ct__10J2DManagerFP7JKRHeap
  0x8012415c: reset__10J2DManagerFv
  0x80124424: calc__10J2DManagerFv
  0x801245a0: calcParticle__10J2DManagerFv
  0x80124620: setStatus2Kart__10J2DManagerFii
  0x80124874: startLANNumAnm__10J2DManagerFv
  0x803d5508: mThis__10J2DManager
  0x803d550c: mNetFlag__10J2DManager

  # PauseManager.cpp
  0x801263b8: __ct__12PauseManagerFP7JKRHeap
  0x8012652c: reset__12PauseManagerFv
  0x803d5518: mThis__12PauseManager

  # SequenceInfo.cpp
  0x80140958: rndDemo__12SequenceInfoFUl
  0x803bad54: gSequenceInfo

  # Kaneshige
  # Course.cpp
  0x80177968: __ct__6CourseFP7CrsDataib
  0x80177dbc: reset__6CourseFv
  0x801787cc: searchSector__6CourseFs
  0x80179c2c: createModel__6CourseFP12JKRSolidHeapUl
  0x80179c30: calcShaking__6CourseFv
  0x8017a2e4: calc__6CourseFv
  0x8017aae4: update__6CourseFv
  0x8017ab14: updateSky__6CourseFv
  0x8017b214: getLightColor__6CourseFPQ28JUtility6TColor
  0x8017b238: getLightOffsetPosition__6CourseFPQ29JGeometry8TVec3<f>
  0x8017b25c: getAmbientColor__6CourseFPQ28JUtility6TColor
  0x8017b9c4: calcUnitDist__Q26Course6SectorFRCQ29JGeometry8TVec3<f> 

  # CrsData.cpp
  0x8017c3a8: __ct__7CrsDataFPQ27CrsData10SColHeaderPQ27CrsData10SOblHeader
  0x8017c578: patchCamDataForStaffRoll__7CrsDataF8Language9VideoMode
  0x8017c780: getShadowColor__7CrsDataCFPQ28JUtility6TColor
  0x8017c8b4: getStartPoint__7CrsDataCFUc

  # ExModel.cpp
  0x80180f38: __ct__12ExMdlDataMgrFb
  0x803d5618: sMtxCombinationOn__7ExModel
  # KartLoader.cpp
  0x80182e1c: __ct__10KartLoaderFiPC8KartInfoUsbb
  0x80183048: reset__10KartLoaderFv
  0x80183098: load__10KartLoaderFv
  0x80183cf4: createModel__10KartLoaderFP12JKRSolidHeapUl
  # HioMgr.cpp
  0x80182d00: __ct__7HioNodeFPCcP13JORReflexibleUlUl
  0x80182d74: __dt__7HioNodeFv
  0x803559c0: __vt__7HioNode

  # KartInfo.cpp
  0x80183f00: __ct__8KartInfoFv
  0x80183f54: __dt__Q28KartInfo13KartCharacterFv
  0x80183f90: __ct__Q28KartInfo13KartCharacterFv
  0x80183fa0: reset__8KartInfoFv
  0x80183fd4: __dt__8KartInfoFv
  0x80184030: setDriver__8KartInfoFi7ECharIDP11KartGamePad
  0x8018408c: getCharDB__8KartInfoF7ECharID
  0x8018415c: getKartDB__8KartInfoF7EKartID
  0x80184234: getKartWeight__8KartInfoF7EKartID
  0x80184258: getDefaultDriver__8KartInfoF7EKartID
  0x8018427c: getDefaultPartner__8KartInfoF7ECharID
  0x801842a0: getDriverWeight__8KartInfoF7ECharID
  0x801842c4: getDefaultKartID__8KartInfoF7ECharID
  0x801842e8: getPartnerKartID__8KartInfoF7ECharID
  0x80184314: isDefaultCharCombi__8KartInfoFv
  0x8018435c: getYoungestPad__8KartInfoFv
  0x801843f4: setPad__Q28KartInfo13KartCharacterFP11KartGamePad
  0x801843fc: isAvailable__Q28KartInfo13KartCharacterCFv
  0x80184420: convPlayerKind__Q28KartInfo13KartCharacterFP11KartGamePad

  # KartChecker.cpp
  0x80184598: __ct__11KartCheckerFiP8KartInfoii
  0x80184734: __ct__8RaceTimeFv
  0x80184744: reset__11KartCheckerFv
  0x80184890: clrCheckPointIndex__11KartCheckerFv
  0x80184928: setPlayerKartColor__11KartCheckerFP8KartInfo
  0x801849fc: createGamePad__11KartCheckerFP8KartInfo
  0x80184aa0: searchCurrentSector__11KartCheckerFPfRCQ29JGeometry8TVec3<f>PQ26Course6Sectori
  0x80184e8c: checkKart__11KartCheckerFv
  0x80184fac: checkKartLap__11KartCheckerFv
  0x801852ec: getBestLapTime__11KartCheckerFv
  0x80185338: checkLap__11KartCheckerFb
  0x8018570c: setLapTime__11KartCheckerFv
  0x80185928: setForceGoal__11KartCheckerFv
  0x80185ab4: setPass__11KartCheckerFi
  0x80185b64: isPassAll__11KartCheckerFi
  0x80185bd4: incTime__11KartCheckerFv
  0x80185c2c: isReverse__11KartCheckerFv
  0x80185dc0: isFinalLapRenewal__11KartCheckerCFv
  0x80185df0: isCurrentLapTimeRenewal__11KartCheckerFv
  0x80185e44: isBestLapTimeRenewal__11KartCheckerFv
  0x80185e98: isBestTotalTimeRenewal__11KartCheckerFi
  0x80185ecc: incBalloon__11KartCheckerFv
  0x80185f10: decBalloon__11KartCheckerFv
  0x80185fd0: setBombEvent__11KartCheckerFQ211KartChecker10EBombEventP7ItemObj
  0x80186324: getRobberyItemNumber__11KartCheckerFv
  0x80186380: releaseRabbitMark__11KartCheckerFv
  0x80186400: isRabbit__11KartCheckerCFv
  0x8018643c: calcRabbitTime__11KartCheckerFv
  0x80186574: __ct__10LapCheckerFv
  0x801865a4: reset__10LapCheckerFv
  0x801865bc: start__10LapCheckerFPQ26Course6Sector
  0x801865c4: calc__10LapCheckerFRCQ29JGeometry8TVec3<f>
  0x801866c0: __dt__11KartGamePadFv

  0x80355aa0: sPlayerKartColorTable__11KartChecker
  0x80355ac0: __vt__11KartGamePad
  0x803d38c8: sBalForbiddenTime__11KartChecker
  0x803d38ca: sBombPointDirect__11KartChecker
  0x803d38cc: sBombPointSpin__11KartChecker
  0x803d38ce: sBombPointIndirect__11KartChecker
  0x803d38d0: sBombPointAttacked__11KartChecker
  0x803d38d2: sBombPointFull__11KartChecker
  0x803d38d4: sBombPointFullS__11KartChecker
  0x803d38d6: sBombPointFullL__11KartChecker
  0x803d5620: sBombPointCrushOneself__11KartChecker

  # RaceMgr.cpp
  0x80186824: __ct__7RaceMgrFP8RaceInfo
  0x801871e0: updateBestTime__7RaceMgrFv
  0x8018733c: setRandomSeed__7RaceMgrFv
  0x8018739c: editRaceInfoForDebug__7RaceMgrFv
  0x801873f0: createConsole__7RaceMgrFv
  0x801874b4: resetConsole__7RaceMgrFv
  0x8018751c: hideConsole__7RaceMgrFUl
  0x80187554: createModel__7RaceMgrFv
  0x80187614: createKartModel__7RaceMgrFv
  0x801876f0: createCourseModel__7RaceMgrFv
  0x80187760: createObjectModel__7RaceMgrFv
  0x801877d0: createItemModel__7RaceMgrFv
  0x80187840: createEffectModel__7RaceMgrFv
  0x801878c4: createLight__7RaceMgrFv
  0x80187ae8: resetRace__7RaceMgrFv
  0x80187b70: resetRaceForResetEvent__7RaceMgrFv
  0x80187ccc: resetRaceForRestartEvent__7RaceMgrFv
  0x80187e4c: resetRaceForReplayEvent__7RaceMgrFv
  0x80187e5c: resetRaceCommon__7RaceMgrFv
  0x80188090: getCurrentConsoleNumber__7RaceMgrFv
  0x801880d0: drawRace__7RaceMgrFv
  0x80188198: checkKart__7RaceMgrFv
  0x80188344: checkRank__7RaceMgrFv
  0x801883f0: checkRankForBalloonBattle__7RaceMgrFv
  0x801884d8: checkRankForRobberyBattle__7RaceMgrFv
  0x801885b8: checkRankForBombBattle__7RaceMgrFv
  0x801886cc: checkRankForEscapeBattle__7RaceMgrFv
  0x801887a8: checkRankForAwardDemo__7RaceMgrFv
  0x801887e0: checkRankForRace__7RaceMgrFv
  0x801888e4: setRaceResult__7RaceMgrFv
  0x8018899c: calcRace__7RaceMgrFv
  0x80188a54: frameWork__7RaceMgrFv
  0x80188b44: updateRace__7RaceMgrFv
  0x80188f80: __dt__7RaceMgrFv
  0x8018903c: isRaceModeMiniGame__7RaceMgrFv
  0x80189060: getRacePhase__7RaceMgrFv
  0x8018906c: getMiniGameTime__7RaceMgrFv
  0x80189078: searchNRankKart__7RaceMgrFi
  0x801890c8: isAbleStart__7RaceMgrCFv
  0x80189108: setJugemZClr__7RaceMgrFUlb
  # getStartID__7RaceMgrFi
  0x8018913c: getStartPoint__7RaceMgrFPQ29JGeometry8TVec3<f>PQ29JGeometry8TVec3<f>i
  0x80189518: getStartJugemOffsetY__7RaceMgrFi
  0x8018959c: getProcLevel__7RaceMgrFv
  0x801895c4: isItemBoxValid__7RaceMgrFv
  0x80189610: beginProcTime__7RaceMgrFs
  0x80189614: endProcTime__7RaceMgrFs
  # searchEventInfo__7RaceMgrFs
  0x80189618: isJugemCountStart__7RaceMgrFv
  0x80189684: isKartGoal__7RaceMgrFi
  0x80189698: getGoalKartNumber__7RaceMgrFv
  #0x801896dc: getPadRecorderFrame__7RaceMgrFv
  0x801896dc: getTotalLapNumberForDisplay__7RaceMgrCFv
  0x801896e4: __ct__Q27RaceMgr7ConsoleFv
  0x8018970c: changeTargetNo__Q27RaceMgr7ConsoleFib
  0x80189784: robRivalOfBalloon__7RaceMgrFii
  0x80189824: robRivalOfRabbitMark__7RaceMgrFii

  0x8033d088: sEventTable__7RaceMgr
  0x80355ad0: __vt__7RaceMgr
  0x803d38d8: sMyStartPointID__7RaceMgr
  0x803d5628: sRaceManager__7RaceMgr
  0x803d562c: sForceTotalLapNum__7RaceMgr

  # SysDebug.cpp
  0x80189c70: destroyHeapInfo__8SysDebugFP7JKRHeap
  0x80189bb0: setHeapGroup__8SysDebugFPCcP7JKRHeap
  0x80189bb4: setDefaultHeapGroup__8SysDebugFP7JKRHeap
  0x80189bb8: clrAllUserTimeLabel__8SysDebugFv
  0x80355ae0: __vt__12SysDbUsrPage
  0x803d5630: sManager__8SysDebug

  # LightMgr.cpp
  0x8018a144: __ct__8LightObjFPCcUl
  0x8018a1a4: __dt__8LightObjFv
  0x8018a228: init__8LightObjFPCcUl
  0x8018a240: setGXObj__12LtObjDiffuseFv
  0x8018a2c4: draw__12LtObjDiffuseFv
  0x8018a2f4: load__12LtObjDiffuseF10_GXLightID
  0x8018a318: draw__12LtObjAmbientFv
  0x8018a368: createManager__8LightMgrFv
  0x8018a3e0: appendLight__8LightMgrFP8LightObj
  0x8018a408: removeLight__8LightMgrFP8LightObj
  0x8018a430: draw__8LightMgrFv
  0x8018a4bc: draw__8LightObjFv
  0x8018a4c0: calc__8LightMgrFv
  0x8018a520: setGXObj__8LightObjFv
  0x8018a524: calc__8LightObjFv
  0x8018a528: searchLight__8LightMgrFUl
  0x8018a568: __dt__8LightMgrFv
  0x8018a628: __dt__12LtObjAmbientFv
  0x8018a6c0: getColor__12LtObjAmbientCFPQ28JUtility6TColor
  0x8018a6f4: getEffectMtx__8LightObjFv
  0x8018a6fc: getColor__12LtObjDiffuseCFPQ28JUtility6TColor
  0x8018a730: __dt__12LtObjDiffuseFv
  0x8018a7c8: getColor__8LightObjCFPQ28JUtility6TColor
  0x80355af0: __vt__8LightMgr
  0x80355afc: __vt__12LtObjAmbient
  0x80355b1c: __vt__12LtObjDiffuse
  0x80355b3c: __vt__8LightObj
  0x803d5638: sLightManager__8LightMgr

  # RaceInfo.cpp
  0x8018b298: reset__8RaceInfoFv
  0x8018b3d8: setConsoleTarget__8RaceInfoFiib
  0x8018b3f0: settingForWaitDemo__8RaceInfoFb
  0x8018b614: settingForStaffRoll__8RaceInfoFb
  0x8018b708: setRace__8RaceInfoF9ERaceModeiiii
  0x8018b794: setKart__8RaceInfoFi7EKartID7ECharIDP11KartGamePad7ECharIDP11KartGamePad
  0x8018b824: setRaceLevel__8RaceInfoF10ERaceLevel
  0x8018b848: shuffleRandomSeed__8RaceInfoFv  
  0x8018b89c: shuffleStartNo__8RaceInfoFv
  0x8018b93c: hideConsole__8RaceInfoFUl
  0x803d5648: sWaitDemoSelector__8RaceInfo

  # RaceLight.cpp
  0x8018bb3c: __ct__14RaceSceneLightFPCcUlRCQ28JUtility6TColorRCQ29JGeometry8TVec3<f>
  0x8018c130: __ct__13RaceKartLightFP14RaceSceneLighti
  0x8018caf4: __ct__16RaceBalloonLightFUl
  0x8018d0b8: __ct__12RaceCupLightFP14RaceSceneLight

  # KartDrawer.cpp
  0x8018ebc4: __ct__10KartDrawerFv
  
  0x8018f1f4: setAnimation__10KartDrawerFv
  0x8018fad0: update__10KartDrawerFv

  # TexLODControl.cpp
  0x8018fefc: __ct__13TexLODControlFi
  0x8018ff4c: __dt__13TexLODControlFv
  0x8018ffac: getLODBias__13TexLODControlFQ213TexLODControl10ELODBiasID

  # JugemPoint.cpp
  0x80190324: __ct__10JugemPointFv

  # RaceBGMPlayer.cpp
  0x8019dd54: __ct__13RaceBGMPlayerFv
  0x8019dd84: reset__13RaceBGMPlayerFv
  0x8019de54: calc__13RaceBGMPlayerFv
  
  # RaceDirector.cpp
  0x8019e3cc: __ct__12RaceDirectorFbP14DemoTimeKeeperi
  0x8019e4fc: reset__12RaceDirectorFv
  0x8019e5dc: calc__12RaceDirectorFv
  0x8019f568: checkRaceEnd__12RaceDirectorFv

  # RaceDrawer.cpp
  0x8019f9a0: __ct__10RaceDrawerFUsb  
  0x8019ff4c: reset__10RaceDrawerFv
  0x801a0068: drawSceneFirstStage__10RaceDrawerFUl
  0x801a0764: drawMidScene__10RaceDrawerFv
  0x801a0854: drawSceneSecondStage__10RaceDrawerFUl
  0x801a0b9c: drawPreScene__10RaceDrawerFv
  0x801a0c40: drawPostScene__10RaceDrawerFv

  # GeoRabbitMark.cpp
  0x801a4620: getRabbitKartNo__23GeoRabbitMarkSupervisorFv
  0x801a462c: release__23GeoRabbitMarkSupervisorFv
  0x801a46a0: changeOwner__23GeoRabbitMarkSupervisorFi
  0x801a46c4: startWinnerEffect__23GeoRabbitMarkSupervisorFv

  0x803d5720: sSupervisorCreateNum__13GeoRabbitMark
  0x803d5724: sSupervisor__13GeoRabbitMark

  # DemoTimeKeeper.cpp
  0x801a681c: __ct__19AwardDemoTimeKeeperFv
  0x801a6f94: __ct__19StaffRollTimeKeeperFv

  0x801b1d9c: get__8RaceTimeCFPiPiPi

  # Kawano
  # accessory.cpp
  0x801c86c8: ptr__12AccessoryMgrFv
  0x801c88f4: update__12AccessoryMgrFv
  # StaffRoll2D.cpp
  0x801cab9c: __ct__11StaffRoll2DFP7JKRHeap8Language9VideoModei
  0x801cb6f0: reset__11StaffRoll2DFv
  0x801cb9a4: calc__11StaffRoll2DFv

  # Osako
  # clock.cpp
  0x801cbe60: move__5ClockFv
  0x803d5b30: msTime__5Clock
  0x803d5b34: msPrevFrameTime__5Clock
  0x803d5b38: msPrevTick__5Clock
  0x803d9668: mscTimePerSec__5Clock
  # main.cpp
  0x801cc5bc: main
  # RaceApp
  0x803d5b60: mspRaceApp__7RaceApp
  # ResMgr.cpp
  0x801cf310: getPtr__6ResMgrFQ26ResMgr12CourseDataId
  0x803bd5c8: mspaLoader__6ResMgr
  # system.cpp
  0x801d0388: init__6SystemFv
  0x801d0ae8: run__6SystemFv
  # kartPad.cpp
  0x801d1000: compress__11KartGamePadFRC9PADStatusP11KartPadData
  0x801d1184: compress__11KartGamePadFRC10LGPositionP11KartPadData
  0x801d139c: expand__11KartGamePadFRC11KartPadData
  0x8035c638: gpaGamePad
  0x8035c648: gpaKartPad
  0x803be230: gGamePad1P
  0x803bf090: gGamePad2P
  0x803bf148: gGamePad3P
  0x803bf200: gGamePad4P
  0x803bf2b8: gKartPad1P
  0x803bf370: gKartPad2P
  0x803bf428: gKartPad3P
  0x803bf4e0: gKartPad4P
  0x803bf598: gKartPad5P
  0x803bf650: gKartPad6P
  0x803bf708: gKartPad7P
  0x803bf7c0: gKartPad8P
  0x803bf878: gKartPad9P
  0x803bf930: gKartPad10P
  0x803bf9e8: gKartPad11P
  0x803bfaa0: gKartPad12P
  0x803bfb58: gKartPad13P
  0x803bfc10: gKartPad14P
  0x803bfcc8: gKartPad15P
  0x803bfd80: gKartPad16P
  # shadowMgr.cpp
  0x801da460: __ct__13ShadowManagerFv
  0x801daaa0: viewCalc__13ShadowManagerFUl
  0x803d5c78: mspShadowManager__13ShadowManager
  0x801da988: calc__13ShadowManagerFv
  # TARecord.cpp
  0x801db44c: __ct__8TARecordFUcUcUcUc
  0x801db488: setName__8TARecordFPCc
  0x801db4b0: setStatus__8TARecordFUcUcUcUc
  0x801db4c4: setRaceTime__8TARecordF8RaceTime
  0x801db4d0: less__8TARecordFRC8TARecord
  # SystemRecord.cpp
  0x801db824: getTARecord__12SystemRecordF9ECourseIDi
  0x801dba60: getBestLap__12SystemRecordF9ECourseID
  0x803c5fe0: gSystemRecord
  # GPRecord.cpp
  0x801dbecc: __ct__8GPRecordFv
  0x801dbef0: setName__8GPRecordFPCc
  0x801dbf18: set__8GPRecordFUcUcUcUcUcUcbPCc8RaceTime
  0x801dbfa4: less__8GPRecordFRC8GPRecord
  # SaveFile.cpp
  0x801dc010: getCRC__8SaveFileFPUcPUc
  0x803c65f4: msaCRCTable__8SaveFile
  0x803d5c90: msCRCTableComputed__8SaveFile

  # Award2D
  0x801df038: __ct__7Award2DFP7JKRHeap
  0x801dfae0: calc__7Award2DFv
  0x801dfdec: draw__7Award2DFv

  # Sato
  # stMath.cpp
  0x801ed09c: createAllRandom__8stRandomFv
  0x801ed108: getRandomMax__8stRandomFUl
  0x801ed180: getArbitUnitVec__8stRandomFRQ29JGeometry8TVec3<f>ff
  0x801ed294: getArbitUnitVecSimple__8stRandomFRQ29JGeometry8TVec3<f>f
  0x801ed3a8: getArbitUnitVecXZ__8stRandomFRQ29JGeometry8TVec3<f>f
  0x801ed444: stGetRnd__FUl
  0x801ed458: stSetRndPermission__FUlb
  # GeographyObjManager.cpp
  0x801f057c: __ct__19GeographyObjManagerFRC7CrsData
  0x801f2434: createModel__19GeographyObjManagerFP12JKRSolidHeapUl
  0x801f35d4: calc__19GeographyObjManagerFv
  0x801f4a48: reset__19GeographyObjManagerFRC7CrsData
  0x801f572c: getJugem__19GeographyObjManagerCFi
  0x801f573c: getBalloonMgr__19GeographyObjManagerCFi   
  0x803d5d00: gMgr__19GeographyObjManager
  # JPEffectMgr.cpp
  0x801fcee4: __ct__11JPEffectMgrFP7JKRHeapbUc
  0x801fcf9c: reset__11JPEffectMgrFv
  0x801fda20: calc__11JPEffectMgrFv
  0x801fdaa0: calc_forMenu__11JPEffectMgrFv
  0x803d5d40: mThis__11JPEffectMgr
  # stEffectMgr.cpp
  0x802030b0: __ct__11stEffectMgrFv
  0x802038f0: createModel__11stEffectMgrFP12JKRSolidHeapUl
  0x80203a74: init__11stEffectMgrFv
  0x8020444c: reset__11stEffectMgrFv
  0x802047cc: calc__11stEffectMgrFv
  0x803d5d70: mMgr__11stEffectMgr
  # ItemObjMgr.cpp
  0x80207c54: __ct__10ItemObjMgrFv
  0x80208238: reset__10ItemObjMgrFv
  0x80208528: clrKartItemUseTriggerList__10ItemObjMgrFv
  0x80209e40: createModel__10ItemObjMgrFP12JKRSolidHeapUl
  0x8020a540: calc__10ItemObjMgrFv
  0x8020b9d4: getRobberyItemNum__10ItemObjMgrFiUc  
  0x803d5d80: gItemMgr__10ItemObjMgr
  # J3DEffectMgr.cpp
  0x8021e854: __ct__12J3DEffectMgrFv
  0x8021eac8: createModel__12J3DEffectMgrFP12JKRSolidHeapUl
  0x8021eb64: reset__12J3DEffectMgrFv
  0x8021efcc: calc__12J3DEffectMgrFv
  0x8021f170: __ct__17J3DEfctKartAnmMgrFv
  0x803d5e18: sJ3DMgr__12J3DEffectMgr
  0x803d5e1c: sJ3DKartAnmMgr__17J3DEfctKartAnmMgr
  # ObjUtility.cpp
  0x802255b8: getPtrCourseArc__10ObjUtilityFPc
  # EffectScreen.cpp
  0x80231cd8: __ct__15EffectScreenMgrFv
  0x80231dc8: reset__15EffectScreenMgrFv
  0x80231ec4: calc__15EffectScreenMgrFv
  0x803d5ec0: ThisMgr__15EffectScreenMgr
  # RivalKart.cpp
  0x80235b20: Reset__9RivalKartFv
  # StateObserver.cpp
  0x80235e54: setState__13StateObserverFUs
  # NeckCtrl.cpp
  0x8023a3a0: __ct__14CharIKParamMgrFv
  0x803d5ee8: mMgr__14CharIKParamMgr

  # Shiraiwa
  # JugemMain.cpp
  0x802505e4: isAbleStart__6TJugemFv
  # Balloon.cpp
  0x8027e158: robRivalOfBalloon__15TBalloonManagerFUl
  0x803da818: scSignalInterval__15TJugemRodSignal
  0x803d62a4: sSupervisor__14TBalloonString

  # Yamamoto
  # kartCtrl.cpp
  0x8029f614: makeKartCtrl__8KartCtrlFv
  0x8029f63c: DynamicsInit__8KartCtrlFb
  0x8029fb60: DynamicsReset__8KartCtrlFv  
  0x8029fd1c: DynamicsStage1__8KartCtrlFv
  0x802a01b4: DynamicsStage2__8KartCtrlFv
  0x803d63c8: mCtrl__8KartCtrl
  # kartCtrlInfo.cpp
  0x802b1ad4: GetKartSoundMgr__8KartCtrlFi
  0x802b1284: GetBodyPos__8KartCtrlFiPQ29JGeometry8TVec3<f>
  0x802b3134: SetTargetNum__7KartCamFUc 