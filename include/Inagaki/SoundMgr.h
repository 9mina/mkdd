#ifndef SOUNDMGR_H
#define SOUNDMGR_H

#include "JSystem/JGeometry/Vec.h"
#include "Kaneshige/Course/CrsArea.h"
#include "types.h"
#include "JSystem/JAudio/JAUSoundObject.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "JSystem/JMath/JMath.h"

namespace GameAudio
{
template <typename T>
class SoundMgr : public JAUDopplerSoundObject, public JKRDisposer
{
public:
    SoundMgr(Vec *, JKRHeap *, u8);
    virtual ~SoundMgr();
    virtual void init();
    virtual void setSe(u32 id);
    virtual void loop(u32);

    void startSoundCustom(u32, u32); // 0x8012fe84

    u8 _40[0x5c - 0x40];
};


template <typename T>
class SoundWithEchoMgr : public SoundMgr<T> 
{
public:
    SoundWithEchoMgr(Vec *, JKRHeap *, u8); // 0x8012aaac
    virtual ~SoundWithEchoMgr(); // 0x8012ab18
    void checkEcho(); // 0x8012ab78
    void setInitialEcho(JAISoundHandle *); // 0x8012ad68

protected:
    f32 _5c;
    f32 _60;
    CrsArea *mEchoArea; // 64
};

class ObjectSoundMgr : public SoundWithEchoMgr<ObjectSoundMgr>
{
public:
    ObjectSoundMgr(Vec *, JKRHeap *); // 0x8012a588    
    void frameWork(); // 0x8012a6e4    
    void setSeWithVelocityVP(u32, f32, f32); // 0x8012a75c
    void setSeWithVelocityV(u32, f32, f32); // 0x8012a8c4
    void setSeWithVelocityP(u32, f32); // 0x8012a9c4

    // Vtable
    virtual ~ObjectSoundMgr() {} // 0x8012a5fc
    virtual void loop(); // 0x8012a65c
    virtual void setSe(u32); // 0x8012a6fc

private:
    u8 _68;
    f32 _6c;
    CrsArea *mObjArea;
}; // class ObjectSoundMgr

class MapSoundObjectMgr : public SoundWithEchoMgr<MapSoundObjectMgr> { // Autogenerated
public:
    enum Type {
        MapSound_Type0,
        MapSound_Type1,
        MapSound_Type2,
        MapSound_Type3,
        MapSound_Type4,
        MapSound_Type5,
        MapSound_Type6,
        MapSound_Type7,
        MapSound_Type8,
        MapSound_Type9,
        MapSound_Type10,
        MapSound_Type11,
        MapSound_Type12,
        MapSound_Type13,
        MapSound_Type14,
        MapSound_Type15,
        MapSound_Type16,
    };

    MapSoundObjectMgr(Vec *, Type, JKRHeap *); // 0x8012f6c8
    void frameWork(); // 0x8012f788
    void getPlayerGoalRank(); // 0x8012fb20
    // Inline
    virtual ~MapSoundObjectMgr(); // 0x8012f728

private:
    u8 _68;
    Type mType;
}; // class MapSoundObjectMgr


class NpcCarSoundMgr : SoundWithEchoMgr<NpcCarSoundMgr> {
public:
    // Global
    NpcCarSoundMgr(Vec *, u8, JKRHeap *); // 0x80129994
    virtual ~NpcCarSoundMgr() {}            // 0x80129a10
    void frameWork(f32, bool);            // 0x80129a70
    void setEngineSound(f32);             // 0x80129ac8
    void setHornSound(bool);              // 0x80129bc0
    void setSe(u32);                      // 0x80129c98
private:
    u8 _68;  //
    u8 _69;  // nice
    u16 _6a; //
};

class PosMove {
    PosMove() {
        _0 = 0;
        _28 = 0;
    }
    u8 _0;
    u8 _1[0x28 - 0x1];
    u32 _28;
};

class ShoreSoundMgr : public SoundMgr<ShoreSoundMgr> {
public:
    ShoreSoundMgr(JKRHeap *heap);
    void loop(); // 0x8012cc98
    void frameWork(); // 0x8012ceec
    void setTide(u8, JGeometry::TVec3f *, JGeometry::TVec3f *); // 0x8012cf04
    void setStatus(bool, f32); // 0x8012d814
private:
    static Vec sShoreDummyVec;
    //static CustomAudience<4> *smAudience; // 0x80416278

    u8 _5c;
    u8 _5d;
    u8 _5e[0x60 - 0x5e]; // padding?
    f32 _60;
    JGeometry::TVec3f *_64;
    PosMove *_68;
    PosMove *_6c;
};

}

#endif
