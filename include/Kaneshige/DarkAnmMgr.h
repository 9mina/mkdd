#ifndef DARKANMMGR_H
#define DARKANMMGR_H

#include "kartEnums.h"

#include "Kaneshige/Course/CrsArea.h"
#include "Kaneshige/ExModel.h"
#include "Kaneshige/HioMgr.h"

#include <JSystem/J3D/J3DGXColor.h>
#include <JSystem/JKernel/JKRDisposer.h>

class KartTevColor : public J3DGXColorS10 {
public:
    KartTevColor() {}
    KartTevColor(s16 r, s16 g, s16 b, s16 a) {
        set(r, g, b, a);
    }
    void set(s16 r, s16 g, s16 b, s16 a) {
        this->r = r;
        this->g = g;
        this->b = b;
        this->a = a;
    }
};

class DarkAnmMgr : public JKRDisposer { // Autogenerated
public:
    DarkAnmMgr(); // 0x801d5c14
    virtual ~DarkAnmMgr(); // 0x801d5c64
    void reset(); // 0x801d5cc4
    static DarkAnmMgr* sManager; // 0x80416598
    // Inline/Unused
    void calc();
    void appendHio(HioNode *);
private:
    KartTevColor *mColor;
}; // class DarkAnmMgr

class DarkAnmPlayer {
public:
    DarkAnmPlayer();
    DarkAnmPlayer(ECharID, EGhostKind);
    DarkAnmPlayer(EKartID, EGhostKind);
    void setKartColorData(EGhostKind, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *);
    void reset();
    void calc(const CrsArea &area);
    void calc(int darkAnmID, f32);
    void setTevColor(ExModel *);


    static KartTevColor sMarioNormColor;
    static KartTevColor sMarioNGNormColor;
    static KartTevColor sMarioSGNormColor;
    static KartTevColor sMarioBlackColor;
    static KartTevColor sMarioGreenColor;
    static KartTevColor sMarioRedColor;
    static KartTevColor sMarioNightColor;
    static KartTevColor sKoopaNormColor;
    static KartTevColor sKoopaNGNormColor;
    static KartTevColor sKoopaSGNormColor;
    static KartTevColor sKoopaBlackColor;
    static KartTevColor sKoopaGreenColor;
    static KartTevColor sKoopaRedColor;
    static KartTevColor sKoopaNightColor;
    static KartTevColor sPeachNormColor;
    static KartTevColor sPeachNGNormColor;
    static KartTevColor sPeachSGNormColor;
    static KartTevColor sPeachBlackColor;
    static KartTevColor sPeachGreenColor;
    static KartTevColor sPeachRedColor;
    static KartTevColor sPeachNightColor;
    static KartTevColor sMarioKartNormColor;
    static KartTevColor sMarioKartNGNormColor;
    static KartTevColor sMarioKartSGNormColor;
    static KartTevColor sMarioKartBlackColor;
    static KartTevColor sMarioKartGreenColor;
    static KartTevColor sMarioKartRedColor;
    static KartTevColor sMarioKartNightColor;
    static KartTevColor sDonkeyKartNormColor;
    static KartTevColor sDonkeyKartNGNormColor;
    static KartTevColor sDonkeyKartSGNormColor;
    static KartTevColor sDonkeyKartBlackColor;
    static KartTevColor sDonkeyKartGreenColor;
    static KartTevColor sDonkeyKartRedColor;
    static KartTevColor sDonkeyKartNightColor;
protected:
    bool mIsGhost; // 00
    KartTevColor *mNormColor; // 04
    KartTevColor *mColors[4]; // 08
    KartTevColor mTevColor; // 18
};

class ItemDarkAnmPlayer : public DarkAnmPlayer {
public:
    ItemDarkAnmPlayer(u32);
    void calc(const CrsArea &, f32);

    static KartTevColor sItemGTurtleNormBColor;
    static KartTevColor sItemGTurtleNormFColor;
    static KartTevColor sItemGTurtleBigNormFColor;
    static KartTevColor sItemRTurtleNormFColor;
    static KartTevColor sItemGTurtleBlackColor;
    static KartTevColor sItemGTurtleGreenColor;
    static KartTevColor sItemGTurtleRedColor;
    static KartTevColor sItemGTurtleNightColor;
    static KartTevColor sItemBananaNormBColor;
    static KartTevColor sItemBananaNormFColor;
    static KartTevColor sItemBananaBigNormFColor;
    static KartTevColor sItemBananaBlackColor;
    static KartTevColor sItemBananaGreenColor;
    static KartTevColor sItemBananaRedColor;
    static KartTevColor sItemBananaNightColor;
    static KartTevColor sItemKinokoNormBColor;
    static KartTevColor sItemKinokoNormFColor;
    static KartTevColor sItemKinokoBlackColor;
    static KartTevColor sItemKinokoGreenColor;
    static KartTevColor sItemKinokoRedColor;
    static KartTevColor sItemKinokoNightColor;
    static KartTevColor sItemBombNormBColor;
    static KartTevColor sItemBombNormFColor;
    static KartTevColor sItemBombBlackColor;
    static KartTevColor sItemBombGreenColor;
    static KartTevColor sItemBombRedColor;
    static KartTevColor sItemBombNightColor;
    static KartTevColor sItemYoshiEggNormBColor;
    static KartTevColor sItemYoshiEggNormFColor;
    static KartTevColor sItemYoshiEggBlackColor;
    static KartTevColor sItemYoshiEggGreenColor;
    static KartTevColor sItemYoshiEggRedColor;
    static KartTevColor sItemYoshiEggNightColor;
    static KartTevColor sItemFlyTurtleNormBColor;
    static KartTevColor sItemFlyTurtleNormFColor;
    static KartTevColor sItemFlyTurtleBlackColor;
    static KartTevColor sItemFlyTurtleGreenColor;
    static KartTevColor sItemFlyTurtleRedColor;
    static KartTevColor sItemFlyTurtleNightColor;

private:
    KartTevColor *mBackColor; // 20
    KartTevColor *mFrontColor; // 24
    KartTevColor mItemTevColor; // 28
};

class ObjDarkAnmPlayer : public DarkAnmPlayer {
    ObjDarkAnmPlayer(u32);

    static KartTevColor sObjJugemNormColor;
    static KartTevColor sObjJugemBlackColor;
    static KartTevColor sObjJugemGreenColor;
    static KartTevColor sObjJugemRedColor;
    static KartTevColor sObjJugemNightColor;
    static KartTevColor sObjCarNormColor;
    static KartTevColor sObjCarBlackColor;
    static KartTevColor sObjCarGreenColor;
    static KartTevColor sObjCarRedColor;
    static KartTevColor sObjCarNightColor;
};
 
#endif // DARKANMMGR_H
