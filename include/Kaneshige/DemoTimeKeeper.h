#ifndef DEMOTIMEKEEPER_H
#define DEMOTIMEKEEPER_H

#include "JSystem/JUtility/TColor.h"
#include "types.h"

class DemoTimeKeeper
{ // Autogenerated
    // Global
public:
    DemoTimeKeeper(bool); // 0x801cec88
    // vtable 0x80397b54
    virtual void reset();                          // 0x801cecdc
    virtual void calc();                           // 0x801ced20
    virtual bool isStartFadeIn() { return true; }; // 0x801c7678
    virtual int requestDemoCameraID() const { return -1; }
    virtual bool isPlayingEndingWinAnm() const { return false; };

    // Inline
    void isDispInfo();          // 0x801cee74
    void updateCutTimer();      // 0x801cf1ec
    void getCutTimer() const;   // 0x801cf234
    int getCurCutName() const;  // 0x801cf23c
    void setDemoEnd();          // 0x801cf514
    void getCurCutTime() const; // 0x801cfc94
private:
    bool mStaffRoll;
    s16 _6;
    s16 _8;
    s16 _a;
    int mCutTimer;
    int mCutName; // maybe this is u32? however the comparisions are cmpw
    int mCurCutTime;
    u8 _18[5];
    bool mDemoEnd;
}; // class DemoTimeKeeper
// Size: 0x20

class AwardDemoTimeKeeper : public DemoTimeKeeper
{
public:
    AwardDemoTimeKeeper();                   // 0x801cee8c
    virtual void reset();                    // 0x801ceee0
    virtual void calc();                     // 0x801cef28
    void checkEventHanabi(short);            // 0x801cf244
    void doOpening();                        // 0x801cf2ec
    void startEventPaper();                  // 0x801cf388
    void doPark();                           // 0x801cf3dc
    void doFront();                          // 0x801cf41c
    void doEnding();                         // 0x801cf420
    void doNext();                           // 0x801cf540
    void jumpEndingCut();                    // 0x801cf600
    void stopAllKart();                      // 0x801cf658
    void fadeOutSE();                        // 0x801cf6bc
    virtual int requestDemoCameraID() const; // 0x801cf700
    /*void AwardsEventTimeHanabi1;           // 0x80414770
    void AwardsEventTimeHanabi2;           // 0x80414772
    void AwardsEventTimeHanabi3;           // 0x80414774
    void AwardsEventTimeHanabi4;           // 0x80414776
    void AwardsEventTimeHanabi5;           // 0x80414778
    void AwardsEventTimeHanabi6;           // 0x8041477a
    void AwardsEventTimeHanabi7;           // 0x8041477c
    void AwardsEventTimeHanabi8;           // 0x8041477e
    void AwardsEventTimePaper;             // 0x80414780
    void AwardsEventTimeStart2D;           // 0x80414782*/
private:
    s16 _20;
    s16 _22;
    u8 _24[4];
}; // Size 0x28

class StaffRollTimeKeeper : public DemoTimeKeeper
{
public:
    StaffRollTimeKeeper();
    virtual void reset();
    virtual void calc();
    virtual bool isStartFadeIn(); // 0x801d0cf4
    virtual int requestDemoCameraID() const;
    virtual bool isPlayingEndingWinAnm() const { return _24 != 0; };

    void jump();
    void setLastBlanking(int);
    bool isKartAppearanceFrame();
    void checkCreditStart(int, long);
    void setupCreditMask(int);
    void warpKart(unsigned short);
    void setBlurColor(const JUtility::TColor &);
    void doOpening();
    void doMarioTitle();
    void doExecProducer();
    void doProducer();
    void doChiefDirector();
    void doDirector();
    void doProgramDirector();
    void doProgram();
    void doDesignManager();
    void doCourseDesign();
    void doGraphicDesign();
    void doScreenDesign();
    void doMusic();
    void doVoice();
    void doProgress();
    void doDebugSupport();
    void doSpecial();
    void doLocalization();
    void doLast();
    /*void sKartAppearancePreTime;
    void sKartMaxSpeed;
    void sStartTitleCreditTime;
    void sStartExectiveProducerCreditTime;
    void sStartProducerCreditTime;
    void sStartChiefDirectorCreditTime;
    void sStartDirectorCreditTime;
    void sStartProgramDirectorCreditTime;
    void sStartProgramCreditTime;
    void sStartDesignManagerCreditTime;
    void sStartCourseDesignCreditTime;
    void sStartGraphicDesignCreditTime;
    void sStartScreenDesignCreditTime;
    void sStartMusicCreditTime;
    void sStartVoiceCreditTime;
    void sStartProgressCreditTime;
    void sStartDebugSupportCreditTime;
    void sStartSpecialCreditTime;
    void sStartLocalizationCreditTime;
    void sStartLastCreditTime;
    void sBlurTitleColor;
    void sBlurExProducerColor;
    void sBlurProducerColor;
    void sBlurChiefDirectorColor;
    void sBlurDirectorColor;
    void sBlurProgramDirectorColor;
    void sBlurProgramColor;
    void sBlurDesignManagerColor;
    void sBlurCourseDesignColor;
    void sBlurGraphicDesignColor;
    void sBlurScreenDesignColor;
    void sBlurMusicColor;
    void sBlurVoiceColor;
    void sBlurProgressColor;
    void sBlurDebugSupportColor;
    void sBlurSpecialColor;
    void sBlurLocalizationColor;
    void sBlurLastColor;*/
private:
    s16 _20;
    s16 _22;
    s16 _24;
    JUtility::TColor mBlurColor;
    int _2c;
    s16 _30;
}; // Size 0x34

// void CrsData::Camera::getTime() const // CrsData.h; // 0x801cee84
// void RaceMgr::getRaceGpCup() const // RaceMgr.h; // 0x801cf1fc
// void RaceInfo::getGpCup() const // RaceInfo.h; // 0x801cf220
// void RivalSpeedCtrl::set_speeddown() // RivalSpeedCtrl.h; // 0x801cf228
// void RivalKart::getSpeedCtrl() // RivalKart.h; // 0x801cf22c
// void Award2D::isFinish() // Award2D.h; // 0x801cf520
// void Award2D::start() // Award2D.h; // 0x801cf534
// void RivalSpeedCtrl::stop_immediately() // RivalSpeedCtrl.h; // 0x801cf6b8
// void isEnableJump() const // StaffRollTimeKeeper.h; // 0x801cfaec
// void isJumpedEnd() const // StaffRollTimeKeeper.h; // 0x801cfafc
// void RaceMgr::setBlurColor(const JUtility::TColor &) // RaceMgr.h; // 0x801cfb0c
// void RaceDrawer::setBlurColor(const JUtility::TColor &) // RaceDrawer.h; // 0x801cfb30
// void BlurScreen::flush() // BlurScreen.h; // 0x801cfb60
// void RaceMgr::getBlurScreen() // RaceMgr.h; // 0x801cfb6c
// void RaceDrawer::getBlurScreen() // RaceDrawer.h; // 0x801cfb90
// void ExitBoxInfo::getBox() // ExitBoxInfo.h; // 0x801cfde8
// void ExitBoxInfo::getDir() // ExitBoxInfo.h; // 0x801cfdec
// void RaceMgr::getMaskScreen() // RaceMgr.h; // 0x801cfdf4
// void KartChecker::setDemoPoint(JugemPoint *) // KartChecker.h; // 0x801cfee0
// void RaceMgr::setBlurDecrease(unsigned char) // RaceMgr.h; // 0x801cff30
// void RaceDrawer::setBlurDecrease(unsigned char) // RaceDrawer.h; // 0x801cff54
// void JUTFader::getStatus() const // JUTFader.h; // 0x801cffc0
// void RivalSpeedCtrl::setMaxSpd(const float &) // RivalSpeedCtrl.h; // 0x801d0098
// void TJugem::setEndingState() // TJugem.h; // 0x801d00a4
// void isFirstFrame() const // StaffRollTimeKeeper.h; // 0x801d00cc
// void GeoCar::getCarSupervisor() // GeoCar.h; // 0x801d09cc
// void JPEffectMgr::getEm2DMgr() // JPEffectMgr.h; // 0x801d0cec
#endif // DEMOTIMEKEEPER_H