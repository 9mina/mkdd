#ifndef LIGHTMGR_H
#define LIGHTMGR_H

#include "JSystem/JGeometry.h"
#include "JSystem/JGeometry/Vec.h"
#include "JSystem/JKernel/JKRDisposer.h"
#include "JSystem/JUtility/TColor.h"
#include "dolphin/mtx.h"
#include "types.h"

// TODO: everything
class LightObj : public JKRDisposer
{
public:
    LightObj(const char *name); // UNUSED
    LightObj(const char *name, u32 viewNo);

    void init(const char *, u32);
    u32 getViewNo() const { return mViewNo; }
    void setTagName(u32 tagName) { mTagName = tagName; };
    void setManualDraw() { mDrawFlags |= 1; }

    // 00 Vtable
    virtual ~LightObj();
    virtual MtxPtr getEffectMtx() { return nullptr; }
    virtual void draw() {}
    virtual void getColor(JUtility::TColor *) const {}
    virtual void calc() {}
    virtual void setGXObj() {}

private:
    u32 mDrawFlags;          // 18
    u32 mViewNo;             // 1C
    u32 mTagName;            // 20
    JSULink<LightObj> mLink; // 24
    u32 _34;                 //
}; // Size 0x38

class LtObjAmbient : public LightObj
{
public:
    LtObjAmbient(JUtility::TColor color) : LightObj("アンビエント", 0xffffffff)
    {
        GXColor gxColor = color;
        mColor.set(gxColor);
    }

    LtObjAmbient(const char *name, JUtility::TColor color) : LightObj(name, 0xffffffff)
    {
        GXColor gxColor = color;
        mColor.set(gxColor);
    }
    virtual ~LtObjAmbient();                         // overide
    virtual void getColor(JUtility::TColor *) const; // overide
    virtual void draw();                             // overide

    void setColor(const JUtility::TColor &color) {
        mColor.set(color);
    }

private:
    JUtility::TColor mColor;
}; // Size: 0x3c

class LtObjDiffuse : public LightObj
{
public:
    LtObjDiffuse(const char *name, u32 viewNo) : LightObj(name, viewNo) {
        mPos.set(0.0f, 0.0f, 0.0f);
        mColor.set(200, 200, 200, 255);
        mViewMtx = nullptr;
        mLoadNo = 0;
    }

    virtual ~LtObjDiffuse(); // overide
    virtual void setGXObj(); // overide
    virtual void draw();     // overide
    virtual void getColor(JUtility::TColor *out) const { out->set((mColor)); }
    void load(GXLightID id);

    MtxPtr getViewMtx() const { return mViewMtx; }
    void getPosition(JGeometry::TVec3f *out) const {
        out->set(mPos);
    }

    void setLoadNo(u8 loadNo) {
       mLoadNo = loadNo; 
    }

protected:
    JGeometry::TVec3f mPos;  // 0x38
    JUtility::TColor mColor; // 0x44
    MtxPtr mViewMtx;         // 0x48
    u16 mLoadNo;             // 0x4c
    GXLightObj mLightObj;    // 0x50
};

class LightMgr
{ // Autogenerated
public:
    // Global
    LightMgr();                           // 0x801b3ec0
    void createCharColor();               // 0x801b3fb8
    static int createManager();           // 0x801b3fbc
    void appendLight(LightObj *);         // 0x801b400c
    void removeLight(LightObj *);         // 0x801b4054
    void draw();                          // 0x801b409c
    void calc();                          // 0x801b4278
    LightObj *searchLight(unsigned long); // 0x801b431c
    virtual ~LightMgr();                  // 0x801b446c

    static LightMgr *getManager() { return sLightManager; };

private:
    static LightMgr *sLightManager; // 0x804163b8
    // Inline/Unused
    // void reset();
    // void searchRaceSceneLight(unsigned long);
    // void searchRaceKartLight(unsigned long, int);
}; // class LightMgr

#endif
