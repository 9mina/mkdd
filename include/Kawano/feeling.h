#ifndef FEELING_H
#define FEELING_H

#include "JSystem/JKernel/JKRHeap.h"

#include "Kawano/driver.h"

#include "types.h"

class Feeling { // Autogenerated
public:
    Feeling(DriverModel *);
    void update(int);
    void *getBtpFrame();
    // Inline/Unused
    void reset();
    void updateOffset(int);
    void updateState();
    void createModel(JKRSolidHeap *, u32, u32);
    void setCurrentViewNo(u32);

    static const char *mscpaFeelingAnmFileName[2];
}; // class feeling

class FeelingOne {
public:
    void updateF();
    // Inline/Unused
    FeelingOne(Feeling *, int);
    void *getAnmFile(int);
    void reset();
    void createModelF(int, JKRSolidHeap *, u32, u32);
};

class FeelingMgr {
public:
    FeelingMgr();
    ~FeelingMgr();
    static FeelingMgr *ptr();
    void *getBrkFile(int);
    void *getBtpFile();
    void init(DriverModel *);
    void createModelData(int);
    void update();
    void createModel(DriverModel *, JKRSolidHeap *, u32, u32);
    void setCurrentViewNo(u32);
    void *getJ3DModelDataPtr(int);
    
    static const u8 mscTevStage[60]; // TODO: correct type
    static const char *mscpaFeelingBmdFileName[2];
    static const char *mscpaFeelingBrkFileName[2];
    static const char *mscpaFeelingBtpFileName[1];
    static FeelingMgr *mspFeelingMgr;
};

#endif // FEELING_H
