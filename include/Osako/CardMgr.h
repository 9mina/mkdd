#ifndef CARDMGR_H
#define CARDMGR_H

#include <dolphin/card.h>
#include <dolphin/CARDPriv.h>

#include "Osako/SaveFile.h"

namespace CardMgr
{ // Autogenerated
    // Global
    enum ProcessFlag
    {
        mcNone = 0,
        mcProbe = 1,
        mcMount = 2,
        mcCheck = 4,
        mcFormat = 8,
        mcCreate = 0x10,
        mcOpen = 0x20,
        mcRead = 0x40,
        mcWrite = 0x80,
        mcClose = 0x100,
        mcGetStatus = 0x200,
        mcSetStatus = 0x400,
        mcError = 0x800,
        mcClear = mcSetStatus | mcGetStatus | mcClose | mcWrite | mcRead | mcOpen | mcCreate | mcFormat | mcCheck | mcMount
    };

    enum TaskStatus {
        mcNoTask = 0,
        mcTaskRequested,
        mcTaskDone
    };

    struct CardData
    {
        // fabricated
        bool canWrite()
        {
            return mProbeStatus == CARD_RESULT_READY &&
                   mCardStatus == CARD_RESULT_READY &&
                   mSectorSize == CARD_SYSTEM_BLOCK_SIZE &&
                   mByteNotUsed >= CARD_WORKAREA_SIZE &&
                   mFilesNotUsed != 0 &&
                   FLAG_ON(mProcessFlag, 0x800);
        }
    
        s32 mProbeStatus;       // 0x0, see card.h
        s32 mPrevProbeStatus;   // 0x4, only gets set to mProbeStatus in CardAgent::ask in a specific case, gets loaded and compared against mProbeStatus in CardAgent::waitSelect
        s32 mMemSize;           // 0x8
        s32 mSectorSize;        // 0xc
        s32 mByteNotUsed;       // 0x10
        s32 mFilesNotUsed;      // 0x14
        TaskStatus mTaskStatus; // 0x18
        s32 mProcessFlag;       // 0x1c
        s32 mCardStatus;        // 0x20
        SaveFile *mSaveFile;    // 0x24
        void *mWorkArea;        // 0x28
        CARDFileInfo mFileInfo; // 0x2c
        CARDStat mStat;         // 0x40
    };                          // Size: 0xac

    void create();                                     // 0x802016e0
    void probe();                                      // 0x8020175c
    bool mount(s32 chan);                              // 0x80201800
    void mountTask(void *chan);                        // 0x80201914
    bool check(s32 chan);                              // 0x802019d8
    void checkTask(void *chan);                        // 0x80201a90
    bool format(s32 chan);                             // 0x80201b34
    void formatTask(void *chan);                       // 0x80201b94
    s32 openFile(s32 chan, SaveFile *pSaveFile);       // 0x80201c0c
    bool createFile(s32 chan, SaveFile *pSaveFile);    // 0x80201d88
    void createTask(void *chan);                       // 0x80201e54
    bool read(s32 chan, SaveFile::FilePart filePart);  // 0x80201f60
    void readTask(void *chan);                         // 0x80202090
    bool write(s32 chan, SaveFile::FilePart filePart); // 0x80202150
    void writeTask(void *chan);                        // 0x8020231c
    bool setStatus(s32 chan);                          // 0x80202400
    void setStatusTask(void *chan);                    // 0x802024c0
    bool renameFile(s32 chan);                         // 0x8020269c
    void renameTask(void *chan);                       // 0x8020275c
    bool deleteFile(s32 chan);                         // 0x80202800
    void deleteTask(void *chan);                       // 0x802028c0
    s32 closeFile(s32 chan);                           // 0x80202990
    s32 unmount(s32 chan);                             // 0x80202a10
    extern CardData msaCardData[CARD_NUM_CHANS];       // 0x80400b68
    extern u8 msProbeSlot;                             // 0x804169c8
};                                                     // namespace CardMgr

#endif // CARDMGR_H