#ifndef GHOSTFILE_H
#define GHOSTFILE_H

#include "kartEnums.h"

#include "Osako/GIRecord.h"
#include "Osako/PadRecorder.h"
#include "Osako/SaveFile.h"

class GhostFile : public SaveFile
{ // Autogenerated
    // Global
    ~GhostFile();                                    // 0x8020e3ac
    void setup();                                    // 0x8020e3f4
    void updateKartPadRecord(const KartPadRecord &); // 0x8020e5c4
    void available(ECourseID);                       // 0x8020e6b0
    void isValidGhostOnRace();                       // 0x8020e6e8
    void makeFileName(char *, const GIRecord *);     // 0x8020e738
    void analysisFileName(GIRecord *, const char *); // 0x8020e828
    void remakeFileName();                           // 0x8020e918
    void uuencode(char *, u8, const u8 *, u8);       // 0x8020e990
    void uudecode(u8 *, u8, const char *, u8);       // 0x8020eae4
    virtual int getAccessWay();                      // 0x8020ebf0, overide
    virtual char *getFileName();                     // 0x8020ebfc, overide
    virtual int getFileNo();                         // 0x8020ec08, overide
    virtual int getBannerFormat();                   // 0x8020ec14, overide
    virtual s32 getCommentOffset();                  // 0x8020ec1c, overide
    virtual u8 getIconNum();                         // 0x8020ec2c, overide
    virtual int getIconOffset();                     // 0x8020ec34, overide
    virtual u8 getIconAnim();                        // 0x8020ec3c, overide
    virtual u8 getIconFormat(u8);                    // 0x8020ec44, overide
    virtual u8 getIconSpeed(u8);                     // 0x8020ec4c, overide
    virtual u8 *getBuf();                            // 0x8020ec54, overide
    virtual u32 getFileSize();                       // 0x8020ec5c, overide
    virtual s32 getLength();                         // 0x8020ec68, overide
    virtual s32 getOffset();                         // 0x8020ec74, overide
    virtual void setCheckData(s64);                  // 0x8020ec7c, overide
    virtual void checkData();                        // 0x8020eccc, overide
    // Inline/Unused
    // void GhostFile();
    // Inline
    virtual void setPart(SaveFile::FilePart) {} // 0x8020ed28, overide
    virtual void fetch() {}                     // 0x8020ed2c, overide
    virtual void store() {}                     // 0x8020ed30, overide

private:
    u8 _4[0xa060 - 0x4];
};

extern GhostFile gGhostFile;

#endif // GHOSTFILE_H