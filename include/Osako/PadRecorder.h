#ifndef PADRECORDER_H
#define PADRECORDER_H

#include "Kaneshige/RaceTime.h"
#include "Osako/kartPad.h"

struct KartPadRecord;

class PadRecorder
{ // Autogenerated
public:
    // Global
    PadRecorder();                             // 0x8020c980
    ~PadRecorder();                            // 0x8020cac4
    void setRecord(int, KartPadRecord *);      // 0x8020cb50
    void setGhostPad(int, KartGamePad *);      // 0x8020cbec
    void setGhostRecord(int, KartPadRecord *); // 0x8020cc88
    void play();                               // 0x8020cd24
    void standby();                            // 0x8020cd30
    void rec();                                // 0x8020cde8
    void stop();                               // 0x8020cdf4
    void finalizeRecord(int, RaceTime);        // 0x8020ce00
    void initRecord();                         // 0x8020ce6c
    void line(u8, KartPadData *);              // 0x8020ce9c
    void framework();                          // 0x8020d068
    void nextFrame();                          // 0x8020d1c8
    // Inline
    u32 getFrame() { return mFrame; };
    // Inline/Unused
    // void getRecord(int);
    // void getGhostRecord(u8);
    // void playGhost();
private:
    u32 mFrame;
};     // class PadRecorder
#endif // PADRECORDER_H