#ifndef GEOGRAPHYOBJ_H
#define GEOGRAPHYOBJ_H

#include <JSystem/J3D/J3DModel.h>
#include <JSystem/JKernel/JKRHeap.h>
#include <JSystem/JGeometry/Vec.h>

#include "Kaneshige/Course/CrsData.h"
#include "Kaneshige/Course/CrsGround.h"
#include "Osako/shadowModel.h"
#include "Sato/AnmController.h"
#include "Sato/ItemObj.h"

// TODO: Remove Forward declarations
class ObjColBase; // ObjCollision.h

class ItemColReaction
{
public:
    ItemColReaction() {}
    ~ItemColReaction() {}

    void init();
    void setFlg(u32, u8);
    bool tstFlg(u32);

private:
    u8 mFlags[16];
};

class GeoObjSupervisor
{
public:
    GeoObjSupervisor() : mLink(this), mLink2(this) {} // 0x801ba468

    // Vtable 0x0
    virtual ~GeoObjSupervisor() {}   // 0x801ba3b4
    virtual void load() {}           // 0x801bcfa4
    virtual void reset() = 0;        // 0x0
    virtual void calc() = 0;         // 0x0
    virtual void thunderDownAll() {} // 0x801bcfa8
    virtual void createModel(JKRSolidHeap *, u32);

private:
    JSULink<GeoObjSupervisor> mLink;
    JSULink<GeoObjSupervisor> mLink2;
};

// TODO: replace void with correct return types
class GeographyObj
{ // Autogenerated
public:
    GeographyObj(const CrsData::SObject &);                                                     // 0x8022937c
    GeographyObj(u32);                                                                          // 0x80229450
    void setDefaultItemReaction();                                                              // 0x80229508
    void calc_norm();                                                                           // 0x802295f0
    void update_norm();                                                                         // 0x80229630
    void loadShadowModel(J3DModelData *, u32);                                                  // 0x8022972c
    void getAssignedModelXYZdir(JGeometry::TVec3f *, JGeometry::TVec3f *, JGeometry::TVec3f *); // 0x80229838
    void getAssignedModelMatrix(Mtx);                                                           // 0x80229968
    void resetObject();                                                                         // 0x80229bcc
    void IsHitKart(const JGeometry::TVec3f &, f32, JGeometry::TVec3f *);                        // 0x80229df4
    void IsHitObject(const JGeometry::TVec3f &, ObjColBase *);                                  // 0x80229f98
    void setIsHitKartFlg(int);                                                                  // 0x8022a074
    void clrIsHitKartSoundFlg(int);                                                             // 0x8022a0c4
    bool tstUserFlg1(int kart_index) const;                                                     // 0x8022a0ec
    void clrUserFlg1(int);                                                                      // 0x8022a190
    void setUserFlg1(int);                                                                      // 0x8022a230
    void getHitSoundDegree();                                                                   // 0x8022a2d0
    void createMultiBoundsPtrAll(u8);                                                           // 0x8022a314
    void calcBoundsGlPos();                                                                     // 0x8022a420
    void createBoundsSphere(f32, f32);                                                          // 0x8022a57c
    void createMultiBoundsSphere(u8, f32, f32);                                                 // 0x8022a66c
    void createBoundsCylinder(J3DModelData *, f32, f32);                                        // 0x8022a6fc
    void createBoundsCylinder(f32, f32, f32);                                                   // 0x8022a81c
    void createMultiBoundsCylinder(u8, J3DModelData *, f32, f32);                               // 0x8022a934
    void createBoundsCube(J3DModelData *);                                                      // 0x8022aa04
    void setColObjPos(const JGeometry::TVec3f &, u8);                                           // 0x8022ab20
    u32 getGeoRnd();                                                                            // 0x8022ac14
    void moveShadowModel();                                                                     // 0x8022ac38
    void createSoundMgr();                                                                      // 0x8022acec
    f32 getColScaleRadius();                                                                    // 0x8022ad44
    void getAxisMaxScale();                                                                     // 0x8022adb4
    void lockMdl();                                                                             // 0x8022ae58
    void getSRTMtx(Mtx m);                                                                      // 0x8022ae88
    void setBoundScaleAll();                                                                    // 0x8022aef0
    f32 getAllBoundDepth();                                                                     // 0x8022af54
    void setObjData(const CrsData::SObject &, bool);                                            // 0x8022af94
    // Inline/Unused
    void getAssignedModelZdir(JGeometry::TVec3f *);
    void findVtxPosMaxY(J3DModelData *, JGeometry::TVec3f &, JGeometry::TVec3f &);
    void newSingleObjColSphere(f32, f32);
    void newSingleObjColSphere(J3DModelData *);
    void newSingleObjColCylinder(J3DModelData *, f32, f32);
    void newSingleObjColCylinder(f32, f32, f32);
    void initSingleBound();
    void createMultiBoundsSphere(u8, J3DModelData *);
    void createMultiBoundsCylinder(u8, f32, f32, f32);
    void setLODBias();
    void getColRadius();

    void getPosition(JGeometry::TVec3f *pos) const { *pos = mPos; }
    void clrObjFlagCheckItemHitting() { mGeoObjFlag &= ~2; }
    void setObjFlagHidding() { mGeoObjFlag |= 0x20; }
    void setAllCheckKartHitFlag() { mKartHitFlags = 0xffffffff; }

    // Vtable
    virtual ~GeographyObj() {}                                                                      // 8, TODO?
    virtual void loadmodel(J3DModelData *modelData);                                                // C, TODO
    virtual void loadAnimation() {}                                                                 // 10                                                     // 0x801b4c74
    virtual ShadowModel::ShadowKind getShadowKind() const { return ShadowModel::cShadowKind_Geo; }; // 14
    virtual void createModel(JKRSolidHeap *heap, u32) {}                                            // 18, TODO
    virtual void configAnimationMode() {}                                                           // 1C
    virtual void createShadowModel(JKRSolidHeap *heap, u32);                                        // 20
    virtual void initByKind() {}                                                                    // 24
    virtual void reset() { resetObject(); }                                                         // 28
    virtual void calc() = 0;                                                                        // 2C
    virtual void update();                                                                          // 30
    virtual void viewCalc(u32);                                                                     // 34
    virtual void simpleDraw(u32);                                                                   // 38
    virtual void setCurrentViewNo(u32);                                                             // 3C
    virtual u32 getMotorType() const { return 1; }                                                  // 40, probably an Enum
    virtual u32 getSoundID() const;                                                                 // 44, probably a define
    virtual const char *getBmdFileName() { return nullptr; }                                        // 48
    virtual const char *getShadowBmdFileName() { return nullptr; }                                  // 4C
    virtual u32 getJ3DModelDataTevStageNum() const { return 0x20000; }                              // 50
    virtual void createColModel(J3DModelData *);                                                    // 54
    virtual void createBoundsSphere(J3DModelData *);                                                // 58
    virtual void *getAnmTbl() { return nullptr; }                                                   // 5C
    virtual u32 getSizeAnmTbl() { return 0; }                                                       // 60
    virtual GeoObjSupervisor *getSupervisor() { return nullptr; }                                   // 64
    virtual void getItemThrowDirPow(JGeometry::TVec3f *, f32 *, const ItemObj &);                   // 68
    virtual void getKartThrowDirPow(JGeometry::TVec3f *, f32 *, int);                               // 6C
    virtual void makeSharedDL() {}                                                                  // 70, TODO
    virtual void doKartColCallBack(int);                                                            // 74
    virtual void initClassCreateNum();                                                              // 78
    virtual void setModelMatrixAndScale();                                                          // 7C
protected:
    JGeometry::TVec3f mPos;      // 04
    JGeometry::TPos3f mRotMtx;   // 10
    JGeometry::TVec3f mScale;    // 40
    JGeometry::TVec3f mVel;      // 4C
    int _58;                     // 58, some sort of ID
    ExModel mModel;              // 5C
    CrsData::SObject *mObjData;  // E8
    u32 mGeoObjFlag;             // EC
    u32 mKartHitFlags;           // F0
    u8 _f4[0xfc - 0xf4];                 //
    JSULink<GeographyObj> mLink; // FC
    int mKind;                   // 10c
    u8 _110[0x114 - 0x110];      //
    ItemObj *mColItemObj;        // 114
    u8 _118[0x120 - 0x118];      //
    AnmController *mAnmCtrl;     // 120
    ItemColReaction mReaction;   // 124
    u8 _134[0x14c - 0x134];      //
}; // Size: 0x14c

class TMapObjHioNode : public GeographyObj
{
public:
    TMapObjHioNode(u32 id) :  GeographyObj(id) {}
    TMapObjHioNode(const CrsData::SObject &rObj) : GeographyObj(rObj) {}
    virtual ~TMapObjHioNode();
};

#endif