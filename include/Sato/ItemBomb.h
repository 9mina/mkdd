#ifndef ITEMBOMB_H
#define ITEMBOMB_H
#include "Sato/ItemSuccession.h"

// TODO: virtual and static functions

class ItemBombBase // probably inherits ItemObj, and other classes inherit this
{
    // Inline/Unused

    ItemBombBase();
    void executeReset();
    void startBombEfct(const JGeometry::TPos3f &, u8);
    void execute_doDisappear(int);
    void executeKartColDisappear();
};

class ItemBomb : public ItemObj
{ // Autogenerated
public:
    enum BombBck
    {

    };

    ItemBomb(u32);                                                        // 0x8025b7b4
    void reset();                                                         // 0x8025b9f0
    const char *getBmdFileName();                                         // 0x8025bbc0
    void createModel(JKRSolidHeap *, u32, u32);                           // 0x8025bbcc
    static void loadAnmData(J3DModelData *);                              // 0x8025bc90
    void getBckName(int);                                                 // 0x8025bd64
    void update();                                                        // 0x8025bdb0
    void setAnimation(BombBck, int);                                      // 0x8025bf68
    void deleteEffect();                                                  // 0x8025bf7c
    bool IsHitKart(int, const JGeometry::TVec3f &, f32);                  // 0x8025bfc0
    void doUniv();                                                        // 0x8025c034
    void doScale();                                                       // 0x8025c2d8
    void setSparkTranslation();                                           // 0x8025c3a8
    ItemColFlag calcColReaction(ItemObj *);                               // 0x8025c464
    void initEquip();                                                     // 0x8025c46c
    void setMiniGameBombColor();                                          // 0x8025c4f4
    void doEquip();                                                       // 0x8025c618
    void initRelease();                                                   // 0x8025c668
    void doRelease();                                                     // 0x8025c804
    void initSpRelease();                                                 // 0x8025cb44
    void doSpRelease();                                                   // 0x8025cd24
    void initDisappear();                                                 // 0x8025cd50
    void doDisappear();                                                   // 0x8025cf38
    void initFall();                                                      // 0x8025d07c
    void initDivested();                                                  // 0x8025d190
    void doFall();                                                        // 0x8025d2b8
    void initOccur(const JGeometry::TVec3f &, const JGeometry::TVec3f &); // 0x8025d32c
    void initForceDisappear();                                            // 0x8025d39c
    void moveNormal(CrsGround &);                                         // 0x8025d3dc
    void moveCannon(CrsGround &);                                         // 0x8025d620
    void checkKartColDisappear(int);                                      // 0x8025d670
    void setCurrentViewNo(u32);                                           // 0x8025d690
    void createEffect();                                                  // 0x8025d6f0
    void findAnyKart();                                                   // 0x8025d760
    static u8 getMaxBombReactFrame();                                     // 0x8025d7b8

    static J3DAnmObjTrans *mAnmTrans[3]; // 0x803a0dfc
    static J3DAnmTransform *mAnmCalc[3]; // 0x803a0e08
    static J3DAnmColor *sColorAnm;       // 0x803a0e14
    static Vec sHandOffsetPos;           // 0x80411984
    static J3DAnmColor *sNowColorAnm;    // 0x80416c18
    static int sLocatorJointNo;          // 0x80416c1c
    // Inline/Unused

    void doAnimation();
    void checkChangeAnimation();
    void initBlast();
    void checkBlast();
    void calcScale(f32, f32);
    void setInitReleaseParam(u8);
    void doCommonInitRelease(f32, f32, f32);
    // Inline
    virtual ~ItemBomb() {}                 // 0x8025d960
    void createColModel(J3DModelData *) {} // 0x8025daac

    static bool isReact(u32 frame) { return frame >= getMaxBombReactFrame(); } // come up with better name

private:
    u8 _[0x318 - 0x2b0];

}; // class ItemBomb

// TODO
class ItemBombSuc : public ItemObjSuc
{
public:
    ItemBombSuc(u32);
    void reset();
    virtual ~ItemBombSuc() {} // 0x8025d858
};

// Inline Functions referenced in TU:

// virtual J3DAnmObjMatColor::~J3DAnmObjMatColor() // J3DAnmObjMatColor.h; // 0x8025b900
// virtual J3DAnmObjMaterialBase<J3DAnmColor>::~J3DAnmObjMaterialBase() // J3DAnmObjMaterialBase.h; // 0x8025b980
// void J3DAnmObjMaterialBase<J3DAnmColor>::anmFrameProc() // J3DAnmObjMaterialBase.h; // 0x8025bf58

#endif // ITEMBOMB_H
