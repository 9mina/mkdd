#ifndef ITEMFLYTURTLE_H
#define ITEMFLYTURTLE_H

#include "Sato/ItemObj.h"

// TODO: virtual and static functions

class ItemFlyTurtle : public ItemObj
{ // Autogenerated
public:
    ItemFlyTurtle(u32);                         // 0x80279054
    void reset();                               // 0x80279108
    const char *getBmdFileName();               // 0x80279264
    static void loadAnmData(J3DModelData *);    // 0x8027928c
    void createModel(JKRSolidHeap *, u32, u32); // 0x80279328
    void createColModel(J3DModelData *);        // 0x80279490
    void update();                              // 0x802794b8
    void setCurrentViewNo(u32);                 // 0x80279500
    void doUniv();                              // 0x80279564
    void initEquip();                           // 0x802795e4
    void doEquip();                             // 0x80279638
    void initRelease();                         // 0x80279660
    void setInitReleaseParam();                 // 0x80279944
    void doRelease();                           // 0x802799a8
    void initForceDisappear();                  // 0x80279a8c
    void deleteEffect();                        // 0x80279acc
    void moveWait();                            // 0x80279b10
    void moveFlying();                          // 0x80279bec
    void moveSearchBack();                      // 0x80279d38
    void moveSearch();                          // 0x80279f4c
    void moveAttack();                          // 0x8027a1a4
    void moveCommon();                          // 0x8027a330
    void moveRescue(CrsGround &);               // 0x8027a44c
    void find1StKartNo();                       // 0x8027a4d0
    void chkSearchTargetKartRadius();           // 0x8027a808
    void chkIsBackTargetKartOffsetPos();        // 0x8027a8ec
    void moveNormal(CrsGround &);               // 0x8027aa10
    void moveColWall(CrsGround &);              // 0x8027ac4c
    void moveCannon(CrsGround &);               // 0x8027adfc
    void initDisappear();                       // 0x8027ae28
    void doDisappear();                         // 0x8027af08
    void initFall();                            // 0x8027afdc
    void calcNowHeight();                       // 0x8027affc

    static Vec sHandOffsetPos;           // 0x8041383c
    static J3DAnmObjTrans *mAnmTrans[3]; // 0x80414f64
    static J3DAnmTransform *mAnmCalc[3]; // 0x80414f6c
    // Inline/Unused
    // void getBckName(int);
    // Inline
    virtual ~ItemFlyTurtle() {}  // 0x8027b820
    int getLockOnKartNo() const; // 0x8027b930
    void initSpRelease();        // 0x8027b938
    void doSpRelease();          // 0x8027b964

    u8 _[0x354 - 0x2b0];
}; // class ItemFlyTurtle

// Inline Functions referenced in TU:

// void CLPointControllerFlyTurtle::CLPointControllerFlyTurtle();
// void CLPointControllerFlyTurtle::findNextPointNo(CLPoint *);
// void CLPointControllerFlyTurtle::recursiveTargetCalcBack(CLPoint *, int, int *, unsigned char *, bool *);
#endif // ITEMFLYTURTLE_H
