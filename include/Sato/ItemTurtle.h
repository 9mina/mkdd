#ifndef ITEMGTURTLE_H
#define ITEMGTURTLE_H

#include "JSystem/JGeometry/Vec.h"
#include "JSystem/JParticle/JPAEmitter.h"
#include "Kaneshige/CenterLine.h"
#include "Sato/ItemObj.h"
#include "Sato/ItemSuccession.h"

// TODO

struct GameDiffParam {
    f32 _00;
    f32 _04;
    f32 _08;
    f32 _0c;
    f32 _10;
    u8 _14;
    f32 mRadius;
    f32 _1c;
};

class CLPointControllerRTurtle : public CLPointController {
public:
    CLPointControllerRTurtle(ItemObj *obj);
    virtual int findNextPointNo(CLPoint *point);
private:
    ItemObj *mItemObj;
};

class ItemGTurtle : public ItemObj
{ // Autogenerated
public:
    ItemGTurtle(u32);                                            // 0x80243f84
    void reset();                                                // 0x8024411c
    const char *getBmdFileName();                                // 0x8024424c
    void createModel(JKRSolidHeap *, u32, u32);                  // 0x80244274
    void doUniv();                                               // 0x80244278
    ItemColFlag calcColReaction(ItemObj *);                      // 0x80244370
    void callHitItemSound(ItemObj *);                            // 0x80244378
    void initEquip();                                            // 0x802443c4
    void doEquip();                                              // 0x802444c0
    void initRelease();                                          // 0x802444ec
    void doUnivInitRelease(float, bool);                         // 0x80244518
    void setInitReleaseParam();                                  // 0x80244680
    void initBlurEmt();                                          // 0x8024479c
    const bool chkColWallDisappear();                            // 0x80244acc
    void moveNormal(CrsGround &);                                // 0x80244bdc
    void doRelease();                                            // 0x80244f50
    void initSpRelease();                                        // 0x80244f7c
    void doSpRelease();                                          // 0x802451e8
    void initDisappear();                                        // 0x80245214
    void initForceDisappear();                                   // 0x802452c8
    void doDisappear();                                          // 0x80245308
    void initCommonMoveFallMtx();                                // 0x8024538c
    void doFall();                                               // 0x802453c0
    void doDivested();                                           // 0x802453e0
    void initFirstRotate();                                      // 0x802454a4
    void doFirstRotate();                                        // 0x80245510
    void doSound(u32);                                           // 0x8024559c
    void deleteEffect();                                         // 0x802455ec
    void executeEquipHandFunc();                                 // 0x80245630
    void executeGeoObjHitCallBack(GeographyObj *);               // 0x80245660
    static JGeometry::TVec3f sHandOffsetPos;                     // 0x804118a0
    // Inline/Unused
    void setGeoHitSe(GeographyObj *);
    bool countHitGeoReflectNum(GeographyObj *);
    
    virtual void calcMoveGndNormalVec(JGeometry::TVec3f *, CrsGround &); // cc, 0x80244f28
    virtual void doUnivRelease();                                        // d0, 0x80244820
    virtual void calcBalanceFlying();                                    // d4, 0x80245400
    virtual void calcVel() {}                                            // d8, 0x80244994
    virtual bool calcRotQuat(Quaternion *);                              // dc, 0x80244998
    virtual void calcGndUpdateQuat();                                    // e0, 0x802449e0
    virtual void calcFlyingUpdateQuat();                                 // e4, 0x80244a78
    virtual u8 getMaxColWallNum();                                       // e8, 0x80245454
    virtual ~ItemGTurtle() {} // 0x802458ac

    f32 _2b0;                     //
    bool _2b4;                    //
    JGeometry::TVec3f mCompVec;   // 2b8
    f32 _2c4;                     //
    bool mFirstRotate;            // 2c8
    f32 _2cc;                     // 
    JGeometry::TVec3f mXDir;      // 2d0
    u8 _2dc;                      //
    u8 _2dd;                      //
    u8 _2de;                      //
    u8 _2df;                      //
    u8 _2e0;                      //
    u8 _2e1;                      //
    const GameDiffParam *mGameDifParam; // 2e4
    JPABaseEmitter *mBlurEmt;     // 2e8
}; // class ItemGTurtle

class ItemRTurtle : public ItemGTurtle
{
public:
    ItemRTurtle(u32);
    void reset();
    const char *getBmdFileName();
    void doUniv();
    ItemColFlag calcColReaction(ItemObj *);
    void initRelease();
    const bool searchTarget(f32, bool);
    void getKartCLDir(int, JGeometry::TVec3f *);
    void moveAttack();
    void moveCenterLine();
    void initCL();
    void calcVel();
    void moveColWall(CrsGround &);
    void calcMoveGndNormalVec(JGeometry::TVec3f *, CrsGround &);

    void moveNoChase();

    virtual const bool checkOver1stKart();
    virtual f32 getMiniGameSearchMaxLengthXZ();
    // Inline/Virtuals
    virtual ~ItemRTurtle() {}            // 0x80249ee4
    virtual int getLockOnKartNo() const { return mTargetNum; } // 0x80249fec

    u32 mMoveType;                              // 2ec
    int mTargetNum;                             // 2f0
    u8 _2f4;                                    //
    f32 _2f8;                                   //
    u8 _2fc;                                    //
    u16 _2fe;                                   //
    CLPointControllerRTurtle *mPointController; // 300
};

class ItemGTurtleBig : public ItemGTurtle
{
public:
    ItemGTurtleBig(u32);
    void reset();
    const char *getBmdFileName();
    void doUniv();
    void initEquip();
    void initRelease();
    void initSpRelease();
    void initDisappear();
    ItemColFlag calcColReaction(ItemObj *);
    u8 getMaxColWallNum();
    void calcBalanceFlying();
    const bool checkKartColDisappear(int);
    f32 getForceEfctOffsetScale() const;
    void executeGeoObjHitCallBack(GeographyObj *);

    virtual ~ItemGTurtleBig() {} // 0x80249ff4

    u8 _2ec;
    u8 _[0x2f0 - 0x2ed];
};

class ItemFireBall : public ItemGTurtle
{
public:
    ItemFireBall(u32);
    void reset();
    const char *getBmdFileName();
    void doUniv();
    void deleteEffect();
    void deleteHaveEffect();
    void initEquip();
    void doEquip();
    void moveBaseEfct();
    void initRelease();
    void initSpRelease();
    void initDisappear();
    void doDisappear();
    void initFall();
    void doFall();
    void initForceDisappear();
    void doDivested();
    void doUnivRelease();
    void moveNormal(CrsGround &);
    ItemColFlag calcColReaction(ItemObj *);
    bool calcRotQuat(Quaternion *);
    u8 getMaxColWallNum();
    void executeGeoObjHitCallBack(GeographyObj *);

    // Inline
    void initEffect();
    void initHaveEffect();
    virtual ~ItemFireBall() {} // 0x80249c9c

    JPABaseEmitter *_2ec[3];
    JPABaseEmitter *_2f8[2];
    const char **_300;

};

class ItemGTurtleSuc : public ItemObjSuc
{
public:
    ItemGTurtleSuc(u32);
    void reset();
    void doSucReleaseFunc(ItemObj *);
    void doSucSpReleaseFunc(ItemObj *);
    virtual ~ItemGTurtleSuc() {} // 0x80247da4
};

class ItemRTurtleSuc : public ItemGTurtleSuc
{
public:
    ItemRTurtleSuc(u32);
    void reset();
    virtual ~ItemRTurtleSuc() {} // 0x80249dc4
};

class ItemFireBallSuc : public ItemObjSuc
{
public:
    ItemFireBallSuc(u32);
    void reset();
    void doSucReleaseFunc(ItemObj *);
    void doSucSpReleaseFunc(ItemObj *);
    void initEquip();
    void doEquip();
    void doDivested();
    void initDisappear();
    void initFall();
    void doFall();
    void initForceDisappear();
    void doForceDisappear();
    void initEnd();
    void deleteEffect();
    void moveEffect(bool);
    int IsEfctTypeRed() const;
    virtual ~ItemFireBallSuc() {} // 0x80249b44

    JPABaseEmitter *mBaseFireEmt[3]; // 300
    bool mDisappearAll;              // 30c
};

// Inline/Unknown Functions Referenced in TU:
// void ItemMultiBase::~ItemMultiBase();
// virtual ItemObjSuc::~ItemObjSuc() // ItemObjSuc.h; // 0x8024632c
// 0xvoid CLPointControllerRTurtle::CLPointControllerRTurtle(ItemObj *);
// 0xvoid CLPointControllerRTurtle::findNextPointNo(CLPoint *);
// 0x// virtual ItemObj::~ItemObj() // ItemObj.h; // 0x80244034
// void ItemObj::initEnd() // ItemObj.h; // 0x80245388
// void ItemObj::getLockOnKartNo() const // ItemObj.h; // 0x80249c4c
// void ItemObj::getForceEfctOffsetScale() const // ItemObj.h; // 0x80249c54
// void ItemObj::initRelease() // ItemObj.h; // 0x80249c5c
// void ItemObj::initSpRelease() // ItemObj.h; // 0x80249c60
// void ItemObj::doRelease() // ItemObj.h; // 0x80249c64
// void ItemObj::doSpRelease() // ItemObj.h; // 0x80249c68
// void ItemObj::doDisappear() // ItemObj.h; // 0x80249c6c
// void ItemObj::moveNormal(CrsGround &) // ItemObj.h; // 0x80249c70
// void ItemObj::executeEquipHandFunc() // ItemObj.h; // 0x80249c74
// void ItemObj::initDivested() // ItemObj.h; // 0x80249da4
// void ItemObj::initDisappear() // ItemObj.h; // 0x80249edc
// void ItemObj::deleteEffect() // ItemObj.h; // 0x80249ee0

#endif // ITEMGTURTLE_H
