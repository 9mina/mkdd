#ifndef GEOOBJPATHMOVE_H
#define GEOOBJPATHMOVE_H

#include "Kaneshige/Course/CrsData.h"
#include "Sato/stMath.h"

class GeoObjPathMove { // Autogenerated
public:
    GeoObjPathMove(const CrsData::SObject &obj) : mObj(obj) {

    }

    virtual void initPath(stRandom *, JGeometry::TVec3f *, const f32 &); // 0x8026bf94
    virtual void movePath(JGeometry::TVec3f *, JGeometry::TVec3f *, f32, f32); // 0x8026bff0
    void nodeProc(); // 0x8026c13c
    CrsData::PathData *getPathData(); // 0x8026c1c8
    u16 getMaxPathNodeNum(); // 0x8026c1fc
    void getPathPos(JGeometry::TVec3f *, u16); // 0x8026c234
    // Inline/Unused
    void stdInit(JGeometry::TVec3f *, const f32 &);
    void stdPathMove(JGeometry::TVec3f *, JGeometry::TVec3f *, f32, f32);

    u16 _4;                       //
    s16 _6;                       // 
    f32 _8;                       //
    f32 mPathPosY;                // 0c
    const CrsData::SObject &mObj; // 10, does this make sense to be a reference instead of a pointer?
}; // namespace GeoObjPathMove


class GeoObjPathMoveWaveY : public GeoObjPathMove {
public:
    GeoObjPathMoveWaveY(const CrsData::SObject &obj) : GeoObjPathMove(obj) {}

    void initSwingVel(stRandom *rand, f32 scalar) { // fabricated
        mSwingVel = (rand->get_ufloat_1() * 2.0f - 1.0f) * 32767.0f * scalar;
    }

    virtual void initPath(stRandom *, JGeometry::TVec3f *, const f32 &);
    virtual void movePath(JGeometry::TVec3f *, JGeometry::TVec3f *, f32, f32);

private:
    s16 mSwingVel;
};

#endif // GEOOBJPATHMOVE_H
