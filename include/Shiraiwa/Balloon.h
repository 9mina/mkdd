#ifndef BALLOON_H
#define BALLOON_H

#include "JSystem/JGeometry.h"
#include "JSystem/JKernel/JKRHeap.h"
#include "types.h"

class J3DAnmObjMaterial;

// Inherited from GeographyObj
class TBalloon
{ // Autogenerated
public:
    // Global
    TBalloon();                               // 0x802bf9b8
    virtual ~TBalloon();                      // 0x802c0d8c
    void reset();                             // 0x802bfa54
    void update();                            // 0x802bfa80
    void loadAnimation();                     // 0x802bfae8
    void calc();                              // 0x802bfb6c
    void viewCalc(u32);                       // 0x802bfef0
    void createModel(JKRSolidHeap *, u32);    // 0x802bff1c
    void setCurrentViewNo(u32);               // 0x802bff58
    static const char *scEfctBreakColor;      // 0x803a85f0
    static f32 scScaleFrame1;                 // 0x80415394
    static f32 scScaleFrame2;                 // 0x80415398
    static f32 scScale1;                      // 0x8041539c
    static const char *scEfctBreakA;          // 0x804153a0
    static const char *scEfctBreakB;          // 0x804153a4
    static J3DAnmObjMaterial *sBalloonBrkAnm; // 0x80417078
    // Inline/Unused

    // void setColor(u32);
    // void die();
    // void draw(u32);
    // void TBalloonSupervisor::TBalloonSupervisor();
    // void JSUList<TBalloonString>::~JSUList();
    // void TBalloonSupervisor::createSortBuffer(int, int);
    // void TBalloonSupervisor::deleteSortBuffer(int);
    // void TBalloonSupervisor::entry(TBalloonString *);
    // void TBalloonSupervisor::makeDefaultSortList(u32, int);
    // void TBalloonString(const CrsData::SObject &);
    // void JSULink<TBalloonString>::~JSULink();
    // void getCameraDistance(u32);
    // void load(J3DModelData *);
    // void show();
    // void hide();
    // void drawString(u32);
    // void drawNode(float, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, u32, unsigned char);
    // void drawCrevicePyramid(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, unsigned char);
    // void drawPrism(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, unsigned char);
    // void sWidth;
    // void sRabbitScaleSize;
    // void sAlphaJudgeNode;
    // void scOrgScale_Normal;
    // void scOrgScale_Rabbit;
    // void scOrgLength_Normal;
    // void scOrgLength_Rabbit;
    // Inline
    virtual const char *getBmdFileName() {return "/Objects/MiniGame_Balloon.bmd"; } // 0x802c0e4c
};                                        // class Balloon

class TBalloonString
{
public:
    TBalloonString();
    virtual ~TBalloonString(); // TBalloonString.h; // 0x802c02a8
    void init();
    void setColor(u32);
    void unlock(u32);
    void setMainViewNo(char);
    void reset();
    // void setCharID(const EKartWeight &, const ECharID &, const ECharID &);
    void resetNodeLength();
    // void setPosition(const JGeometry::TVec3<float> &, const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &);
    void calc();
    void die();
    void shake();
    void drawBalloon(u32);
    void getUpDir(JGeometry::TVec3<float> *);
    void getPoint(JGeometry::TVec3<float> *);
    void getPointDir(JGeometry::TVec3<float> *);
    void setParameters();

    static TBalloonString * getSupervisor() { return sSupervisor; }

    // void sOffset;
    // void sTotalLength;
    // void sAdjustRatio;
    // void sAirFric;
    // void sPower;
    // void sDemoPower;
    // void sGravity;
    // void sNodeNum;
    // void sOrgScale;
    // void sOrgLength;
    // void sBreakOffset;
    // void sBreakUpVel;
    // void sShakePow;
    static TBalloonString * sSupervisor;
};

class TBalloonManager
{
public:
    TBalloonManager();
    void init(unsigned char, char, unsigned char);
    void reset();
    void calc();
    void killBalloon(TBalloonString *);
    void checkCameraDistance();
    void robRivalOfBalloon(u32);
    void rob();
    void setBalloon(TBalloonString *);
    void removeBalloon();

    // static void TBalloonString::sTotalLength;
    // static void TBalloonManager::sPullDirX;
    // static void TBalloonManager::sPullDirY;
    // static void TBalloonManager::sPullDirZ;

    // Inline/Unused
    // void TBalloonManager(const CrsData::SObject &);
    // void isEscape();
    // void drawBalloon(u32);
    // void getSpareBalloon();

    // virtual ~TBalloonManager() // TBalloonManager.h; // 0x802c0e58
    // void createColModel(J3DModelData *) // TBalloonManager.h; // 0x802c0ee8
};

class TBalloonSupervisor
{
public:
    ~TBalloonSupervisor();
    void drawString(u32);
    void drawBalloon(u32);

    // void reset() // TBalloonSupervisor.h; // 0x802c0d7c
    // void calc() // TBalloonSupervisor.h; // 0x802c0d88
};

#endif // BALLOON_H