#ifndef JUGEMRODSIGNAL_H
#define JUGEMRODSIGNAL_H

#include "JSystem/JKernel/JKRHeap.h"
#include "JSystem/JGeometry.h"
#include "JSystem/J3D/J3DModel.h"
#include "JSystem/J3D/J3DAnmTevRegKey.h"
#include "JSystem/JParticle/JPAEmitter.h"
#include "Sato/GeographyObj.h"
#include "Shiraiwa/AnmPlayer.h"

// probably inherited from TJugemMain

class TJugemRodItem : public GeographyObj
{
public:
    TJugemRodItem(u32 id) : GeographyObj(id) {}
    virtual ~TJugemRodItem() {}
    virtual void setPosition(const JGeometry::TVec3f &rPos) { mPos.set(rPos); } // 80
    virtual void setRMtx(const JGeometry::TPos3f &rMtx) { mRotMtx.set(rMtx); }  // 84
    virtual void show() { mGeoObjFlag &= ~0x20; }                               // 88
    virtual void hide() { mGeoObjFlag |= ~0x20; }                               // 8C
    virtual void hideAll() { hide(); }                                          // 90
    virtual void changeAnimation(int) {}                                        // 94
};

class TJugemRodSignal
{ // Autogenerated
public:
    // Global
    TJugemRodSignal();                                         // 0x80293558
    ~TJugemRodSignal();                                        // 0x80293630
    void reset();                                              // 0x80293710
    void loadAnimation();                                      // 0x802937e4
    void getShadowBmdFileName();                               // 0x80293864
    void getBmdFileName();                                     // 0x8029386c
    void createModel(JKRSolidHeap *, u32);                     // 0x80293894
    void createColModel(J3DModelData *);                       // 0x802939ec
    void calc();                                               // 0x802939f0
    void createEmitter(JPABaseEmitter **, long, const char *); // 0x80293bbc
    void startCountDown();                                     // 0x80293c60
    void show(u8);                                             // 0x80293c74
    void update();                                             // 0x80293cac
    void isAcceptEffect();                                     // 0x80293e74

    // Inline/Unused
    void getJointPos(JGeometry::TVec3f *, long);
    void updatePosition(JPABaseEmitter **, long);

    //  Inline
    bool isCallThree() { return _188 == scSignalInterval - 1; }

    static const char *scRedParticleName;           // 0x80415160
    static const char *scGreenParticleName;         // 0x80415164
    static J3DAnmTevRegKey **sJugemRodSignalBrkAnm; // 0x80416da8
    static s16 sRandomWait;                         // 0x80416dac
    static int sLeftJointNo;                        // 0x80416db0
    static int sMiddleJointNo;                      // 0x80416db4
    static int sRightJointNo;                       // 0x80416db8
    static const u8 scSignalInterval;               // 0x8041c7d8
    static const u8 scRandomLength;                 // UNUSED

    u8 _00[0x188];
    u32 _188;
}; // class JugemRodSignal

class TJugemRodPukuPuku
{
public:
    TJugemRodPukuPuku();
    ~TJugemRodPukuPuku();
    void reset();
    void loadAnimation();
    void createModel(JKRSolidHeap *, u32);
    void show(u8);
    void update();
    void calc();
    void setPosition(const JGeometry::TVec3<float> &);
    void setRMtx(const JGeometry::TPos3f &);
    void setCurrentViewNo(u32);
    void nodeCallBack(J3DJoint *, int);
    // Inline/Unused
    void getCurMatrix(Mtx);
    // void scCutFrame;
    // void sAnmInfos_Puku_Demo2;
    // void sAnmInfos_Puku_Demo3;
    // void sDemoAnmStateTable;
};
#endif