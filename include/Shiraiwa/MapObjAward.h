#ifndef MAPOBJAWARD_H
#define MAPOBJAWARD_H

#include "Sato/GeographyObj.h"
#include "Sato/StateObserver.h"
#include "Sato/Objects/GeoItemBox.h"
#include "Shiraiwa/MapObjDemoObj.h"

// Inline/Unused
//void JSULink<TMapObjAwardItemBox>::~JSULink();
//void JSUList<TMapObjAwardCup>::~JSUList();
//void JSULink<TMapObjAwardCup>::~JSULink();
//void TMapObjAwardCup::draw(u32);
//void JSUList<TMapObjAwardItemBox>::~JSUList();
//void TMapObjAwardCup::sSidePowDecel;
//void TMapObjAwardCup::sAxisCycle;

class TMapObjAwardItemBox;
class TMapObjAwardCup;

class TAwardItemBoxSupervisor : public GeoObjSupervisor {
public:
    TAwardItemBoxSupervisor();
    void entry(TMapObjAwardItemBox *);
    void skip();
    bool isRollState();

    virtual ~TAwardItemBoxSupervisor() {} // 0x802cd57c
    void reset() {} // 0x802cd61c
    void calc() {} // 0x802cd620
private:
    // TODO
};

class TAwardCupSupervisor : public GeoObjSupervisor {
public:
    TAwardCupSupervisor() {}

    void entry(TMapObjAwardCup *);
    void draw(u32);

    virtual ~TAwardCupSupervisor() {} // 0x802cd624
    void reset() {} // 0x802cd6c4
    void calc() {}  // 0x802cd6c8
private:
    // TODO
};

class TMapObjAwardItemBox : public GeographyObj, public StateObserver, public JKRDisposer { // Autogenerated
public:
    TMapObjAwardItemBox(const CrsData::SObject &); // 0x802cb76c
    void createColModel(J3DModelData *); // 0x802cba78
    void reset(); // 0x802cbaa0
    void skip(); // 0x802cbc34
    void doKartColCallBack(int); // 0x802cbd10
    void calc(); // 0x802cbf40
    void initFunc_Appear(); // 0x802cbf64
    void doFunc_Appear(); // 0x802cbfa4
    void initFunc_Roll(); // 0x802cc050
    void doFunc_Roll(); // 0x802cc0f4
    void rotAnimation(); // 0x802cc114
    void initFunc_Disappear(); // 0x802cc354
    void doFunc_Disappear(); // 0x802cc370
    void initFunc_Hide(); // 0x802cc428
    void doFunc_Hide(); // 0x802cc450

    static const int scIDTable[18]; // 0x80385450
    static StateFuncSet<TMapObjAwardItemBox> sTable[4]; // 0x803a9e10
    static f32 sRollSpeed; // 0x80415480
    static s16 sAppearFrame; // 0x80415484
    static s16 sDisappearFrame; // 0x80415486
    static TAwardItemBoxSupervisor *sSupervisor; // 0x804170f8

    // Inline
    virtual GeoObjSupervisor *getSupervisor() { return sSupervisor; } // 0x802cb998
    virtual ~TMapObjAwardItemBox(); // 0x802cb9a0
    void InitExec() { Observer_FindAndInit(TMapObjAwardItemBox, 4); } // 0x802cbe68
    void MoveExec() { Observer_FindAndExec(TMapObjAwardItemBox, 4); } // 0x802cbed4
    virtual const char *getBmdFileName() { return GeoItemBox::getBmdName(); } // 0x802cd6cc
    virtual const char *getShadowBmdFileName()  { return GeoItemBox::getBmdName(); } // 0x802cd6ec
private:
    // TODO
}; // class MapObjAwardItemBox

class TMapObjAwardCup : public TMapObjDemoObj, public StateObserver, public JKRDisposer {
public:
    TMapObjAwardCup(u32);
    void createModel(JKRSolidHeap *, u32);
    void update();
    void reset();
    void loadAnimation();
    void setOrgMtx(const JGeometry::TPos3f &);
    void makeOffset();
    void flyOut(const JGeometry::TVec3f &);
    void skip(const JGeometry::TVec3f &);
    void initFunc_InBox();
    void doFunc_InBox();
    void initFunc_FlyOut();
    void doFunc_FlyOut();
    void initFunc_Roll();
    void doFunc_Roll();
    void rotAnimation(bool);
    void calc();

    static StateFuncSet<TMapObjAwardCup> sTable[3];
    static f32 sVelocity0;
    static f32 sAirFriction;
    static f32 sGravity;
    static f32 sScaleVel;
    static s16 sJumpFrame;
    static f32 sRollSpeed;
    static f32 sRollSpeedMax;
    static s16 sRotCycle;
    static s16 sAxisRotCycle;
    static f32 sFlyOutRotCycle;
    static f32 sRotVel0;
    static f32 sRotBrake;
    static s16 sAxisCycleDecel;
    static f32 sOffsetHeight;
    static TAwardCupSupervisor *sSupervisor;
    static J3DAnmBase *sAwardCupBtpAnm; // TODO: type

    // Inline ptmf stuff
    void InitExec() { Observer_FindAndInit(TMapObjAwardCup, 3); } // 0x802cc5a4
    void MoveExec() { Observer_FindAndExec(TMapObjAwardCup, 3); } // 0x802cc610
private:
    // TODO
};

#endif // MAPOBJAWARD_H
