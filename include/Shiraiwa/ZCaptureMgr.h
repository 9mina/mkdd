#ifndef ZCAPTUREMGR_H
#define ZCAPTUREMGR_H

#include "types.h"

class ZCaptureScreen {
public:
    ZCaptureScreen();
    virtual ~ZCaptureScreen();
    void reset();
    bool captureAll();
    bool capture(u32);
    void setPosition(u32, s16, s16);
    u32 getZValue(u32) const;


    // Inline/Unused
    void setActive(u32);
    void setInactive(u32);
    bool isActive(u32);

    class ZCaptureNode {
    public:    
        ZCaptureNode();
        virtual ~ZCaptureNode();
        void reset();
        void setPosition(s16, s16);
        bool capture();
        u32 getZValue();

        static const s16 scCaptureSizeX;
        static const s16 scCaptureSizeY;
        static const int scBufferSize;
    private:
        s16 mPosX;
        s16 mPosY;
        u8 *mTex;
        bool mActive;
    };


private:
    ZCaptureNode **mNodes;
};

class ZCaptureMgr { // Autogenerated
public:
    ZCaptureMgr(u32); // 0x802d7940
    virtual ~ZCaptureMgr(); // 0x802d79cc
    void reset(); // 0x802d7a68
    void capture(u32); // 0x802d7abc
    void captureDone(); // 0x802d7b58
    void setPosition(u32, u32, s16, s16); // 0x802d7b78
    u32 getZValue(u32, u32); // 0x802d7c1c
    
    // Inline/Unused
    bool captureAll();
    void setActive(u32);
    void setInactive(u32);
    bool isActive(u32);

private:
    ZCaptureScreen **mScreens;
    u32 mNumViews;
}; // class ZCaptureMgr


#endif // ZCAPTUREMGR_H
