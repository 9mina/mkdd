this was all ported by hand, exported from ghidra and run through a tool to add the arguments, there might be some errors in here

EngineSound::getEngineType(EKartID) 	8011226c
GameAudio::CharacterSoundMgr::CharacterSoundMgr(Vec *, JKRHeap *, unsigned char, ECharID)	801122dc
GameAudio::CharacterSoundMgr::~CharacterSoundMgr()	801123b0
GameAudio::CharacterSoundMgr::init()	80112410
GameAudio::CharacterSoundMgr::loop()	80112468
GameAudio::CharacterSoundMgr::frameWork(float, float)	801124bc
GameAudio::CharacterSoundMgr::setVoice(unsigned char)	80112524
GameAudio::CharacterSoundMgr::setSe(unsigned long)	801128f4
GameAudio::CharacterSoundMgr::isSpeak()	80112a04
GameAudio::CharacterSoundMgr::setVoicePitch(bool)	80112a1c
GameAudio::CharacterSoundMgr::getKartSound()	80112a84
GameAudio::CharacterSoundMgr::checkEcho()	80112adc
GameAudio::CustomAnimationSoundStarter::CustomAnimationSoundStarter()	80112bc4
GameAudio::CustomAnimationSoundStarter::startSound(JAISoundID, JAISoundHandle *, const JGeometry::TVec3<float> *)	80112c0c
GameAudio::CustomAnimator::CustomAnimator(JAISoundHandles *)	80112cc4
GameAudio::CustomAnimator::getFreeHandle(const JAUSoundAnimationSound *)	80112d00
GameAudio::CustomAnimator::modifySoundParams(JASSoundParams *, const JAUSoundAnimationSound *, float)	80112e20
GameAudio::CustomAnimationSoundStarter::~CustomAnimationSoundStarter()	80112e7c
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	80112ed4
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::~SoundMgr()	80112f7c
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::startSoundCustom(unsigned long, unsigned long)	80112ff8
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::setEcho(JAISoundHandle *, float)	801130c4
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::init()	8011310c
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::setSe(unsigned long)	80113110
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::loop()	801131e0
__sinit_CharacterSoundMgr_cpp	80113214
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::@48@__dt()	80113358
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::@48@__dt()	80113360
GameAudio::CameraMgr::CameraMgr(unsigned long, GameAudio::CustomAudience<4> *)	80113368
GameAudio::CameraInfo::CameraInfo()	80113420
GameAudio::CameraMgr::setCameraInfo(unsigned long, Vec, float (*) [4], CrsArea *)	801134d4
JAUAudience_<4, JAUDopplerAudible<4>, JAUDopplerAudienceState, JAUAudience_withSetting_doppler>::setAudienceMtx(float (*) [4], int, bool)	80113674
JAUDopplerAudienceState::setMtx(const float (*) [4])	801136c0
GameAudio::CameraMgr::setSceneMax(unsigned long)	80113774
__sinit_GameAudioCamera_cpp	801137bc
GameAudio::Common::panDeform(float, float)	80113900
GameAudio::Common::setMultiPlayModePan(unsigned char)	80113944
GameAudio::Common::changeRandomId(unsigned long, unsigned long)	80113970
GameAudio::Random::setSeed(unsigned long)	80113a08
GameAudio::Random::getRandomU32()	80113a14
GameAudio::Random::getSignalEngineRandomU32()	80113a70
__sinit_GameAudioCommon_cpp	80113acc
__sinit_GameAudioCustomMenu_cpp	80113c28
JAUAudience_<4, JAUDopplerAudible<4>, JAUDopplerAudienceState, JAUAudience_withSetting_doppler>::newMemPool(int)	80113ddc
GameAudio::Main::init(JKRSolidHeap *, unsigned long, void *, void *, unsigned long)	80113e0c
JAUStreamAramMgrBase_<1>::~JAUStreamAramMgrBase_()	801146ac
GameAudio::CustomAudience<4>::CustomAudience()	80114734
GameAudio::Main::bootDSP()	80114770
GameAudio::Main::isActive()	80114790
GameAudio::Main::initRaceSound()	8011479c
GameAudio::Main::frameWork()	801148a8
GameAudio::Main::changeSection(void *)	8011492c
GameAudio::Main::checkSection()	80114a0c
GameAudio::Main::isWaveLoaded(GameAudio::Main::WS_ID)	80114ad8
GameAudio::Main::checkCourceOnRace()	80114b54
GameAudio::Main::setPause(GameAudio::Main::PAUSE_STATUS)	80115070
GameAudio::Main::startSequenceBgm(unsigned long)	80115140
GameAudio::Main::stopSequenceBgm(unsigned long)	8011549c
GameAudio::Main::getPlayingSequenceID()	801154c8
GameAudio::Main::prepareStreamBgm(unsigned long)	801154e4
GameAudio::Main::startStreamBgm(unsigned long)	80115688
GameAudio::Main::stopStreamBgm(unsigned long)	801158cc
GameAudio::Main::getPlayingStreamID()	801158f8
GameAudio::Main::setInvincibleBgm(unsigned char, unsigned char)	80115920
GameAudio::Main::clearInvincibleBgm(unsigned char, unsigned char)	80115c00
GameAudio::Main::startInvincibleBgm(unsigned char, bool)	80115d48
GameAudio::Main::checkBgm()	80115dfc
GameAudio::Main::startSystemSe(unsigned long)	80115ea4
GameAudio::Main::stopSystemSe(unsigned long)	80115f14
GameAudio::Main::startRaceSystemSe(unsigned long)	80115f58
GameAudio::Main::startKartSystemSe(unsigned char, unsigned long)	80115fe8
GameAudio::Main::checkThunderMode()	80116090
GameAudio::Main::setThunderMode(unsigned char)	80116140
GameAudio::Main::clearThunderMode(unsigned char)	801161f8
GameAudio::Main::startBombPointSe(unsigned char, unsigned char)	80116258
GameAudio::Main::startBombReachSe(unsigned char, unsigned char)	80116504
GameAudio::Main::setMasterVolume(char)	801167b0
GameAudio::Main::getMasterVolumeValue()	8011685c
GameAudio::Main::updateBgmVolume(unsigned long)	8011687c
GameAudio::Main::fadeOutAll(unsigned long)	80116900
GameAudio::Main::setRaceSeVolume(float, unsigned long)	80116a90
GameAudio::Main::setOutputMode(unsigned long)	80116b40
GameAudio::Main::resetAudio(unsigned long)	80116b78
GameAudio::Main::resumeAudio()	80116c70
GameAudio::Main::checkResetInner()	80116d14
GameAudio::Main::setGoalProcess()	80116d70
GameAudio::Main::processSeqCallback(JASTrack *, unsigned short)	80116dcc
GameAudio::CustomAudience<4>::~CustomAudience()	80116edc
JAUStreamStaticAramMgr_<1>::~JAUStreamStaticAramMgr_()	80116f74
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::frameWorkAll()	8011700c
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::loop()	80117058
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::frameWorkAll()	8011708c
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::loop()	801170d8
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::frameWorkAll()	8011710c
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::loop()	80117158
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::frameWorkAll()	8011718c
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::loop()	801171d8
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::frameWorkAll()	8011720c
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::pauseAll(bool)	80117258
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::stopAll()	80117334
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::frameWorkAll()	80117374
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::pauseAll(bool)	801173c0
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::stopAll()	8011749c
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::loop()	801174dc
GameAudio::CustomAudience<4>::calcPriority(JAIAudible *)	80117510
GameAudio::CustomAudience<4>::newAudible(const JGeometry::TVec3<float> &, JAISoundID, const JGeometry::TVec3<float> *, unsigned long)	801179b4
GameAudio::CustomAudience<4>::mixChannelOut(const JASSoundParams &, JAIAudible *, int)	80117d3c
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::initAll()	801181d8
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::initAll()	8011822c
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::initAll()	80118230
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::initAll()	80118284
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::initAll()	801182d8
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::initAll()	801182dc
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::initAll()	80118330
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::initAll()	80118334
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::initAll()	80118388
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::initAll()	8011838c
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::initAll()	801183e0
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::initAll()	801183e4
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::initAll()	80118438
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::initAll()	8011843c
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::initAll()	80118490
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::initAll()	80118494
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::initAll()	801184e8
JAUStreamStaticAramMgr_<1>::deleteStreamAram(unsigned long)	801184ec
JAUStreamStaticAramMgr_<1>::newStreamAram(unsigned long *)	801185c4
__sinit_GameAudioMain_cpp	80118694
GameAudio::Main::~Main()	80118954
GameAudio::CustomMgr::CustomMgr()	80118a18
GameAudio::CustomMgr::startSound(JAISoundID, JAISoundHandle *, const JGeometry::TVec3<float> *)	80118a64
GameAudio::CustomMgr::~CustomMgr()	80118b9c
__sinit_GameAudioMgr_cpp	80118ce8
GameAudio::Parameters::setPlayerMode(unsigned char)	80118e64
GameAudio::Parameters::setRaceMode(unsigned char)	80119094
GameAudio::Parameters::setDemoMode(unsigned char)	80119294
GameAudio::Parameters::setKillSwAllObject(bool)	80119324
GameAudio::Parameters::setRaceCourse(ECourseID)	80119390
GameAudio::Parameters::setKartType(unsigned char, EKartWeight)	80119420
GameAudio::Parameters::setNetworkMode(unsigned char, unsigned char)	80119430
GameAudio::Parameters::setChrType(unsigned char, EKartID)	8011943c
GameAudio::Parameters::setChibiFlag(unsigned char, bool)	80119484
GameAudio::Parameters::setMirrorSwitch(bool)	8011950c
GameAudio::Parameters::getRaceMode()	80119514
GameAudio::Parameters::getPlayerMode()	8011951c
GameAudio::Parameters::getEngineType(unsigned char)	80119524
GameAudio::Parameters::getCharacterType(unsigned char)	80119534
GameAudio::Parameters::getRaceCourse()	80119544
GameAudio::Parameters::getChibiPitch(unsigned long)	8011954c
GameAudio::Parameters::getNetworkCubes()	8011959c
GameAudio::Parameters::getChibiFlag(unsigned char)	801195a4
GameAudio::Parameters::getDemoMode()	801195c0
GameAudio::Parameters::getMirrorSwitch()	801195c8
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::setKillSwAll(bool)	801195d0
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::setKillSwAll(bool)	801195ec
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::setKillSwAll(bool)	80119608
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::setKillSwAll(bool)	80119624
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::setKillSwAll(bool)	80119640
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::setKillSwAll(bool)	8011965c
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::setKillSwAll(bool)	80119678
GameAudio::SoundMgr<GameAudio::CharacterSoundMgr>::setKillSwAll(bool)	80119694
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::setKillSwAll(bool)	801196b0
__sinit_GameAudioParam_cpp	801196cc
GameAudio::KartSoundMgr::KartSoundMgr(Vec *, JKRHeap *, unsigned char, unsigned char)	801198b8
GameAudio::KartSoundMgr::~KartSoundMgr()	80119a80
GameAudio::KartSoundMgr::startSoundHandleNumber(unsigned char, unsigned long, unsigned long)	80119b54
GameAudio::KartSoundMgr::dispose()	80119cb0
GameAudio::KartSoundMgr::init()	80119ce8
GameAudio::KartSoundMgr::changeDriver(bool)	80119ed0
GameAudio::KartSoundMgr::checkCourseSound(unsigned char)	80119ed4
GameAudio::KartSoundMgr::checkAfterGoalVolume()	8011a004
GameAudio::KartSoundMgr::setWaterDepth(unsigned char, float)	8011a1e0
GameAudio::KartSoundMgr::setSlip(unsigned char, unsigned char, unsigned char, float)	8011a1f0
GameAudio::KartSoundMgr::setConductStatus(float, float, bool, bool, bool, unsigned char, CrsArea *)	8011a6b0
GameAudio::KartSoundMgr::setWaterCutoffPort(unsigned short)	8011ab0c
GameAudio::KartSoundMgr::countGoalKart()	8011ab60
GameAudio::KartSoundMgr::setConductLocomotiveAccel()	8011ab80
GameAudio::KartSoundMgr::setConductLocomotiveSpeed(bool)	8011ae0c
GameAudio::KartSoundMgr::setConductPressed()	8011b058
GameAudio::KartSoundMgr::setConductSignal()	8011b1cc
GameAudio::KartSoundMgr::setConductOutOfCourse(unsigned char)	8011b698
GameAudio::KartSoundMgr::setConductTrouble(float, unsigned char)	8011b908
GameAudio::KartSoundMgr::setConductRace(bool)	8011bb88
GameAudio::KartSoundMgr::setConductAfterGoal(bool)	8011c40c
GameAudio::KartSoundMgr::setCrushSe(CrsGround::EMat, float)	8011c42c
GameAudio::KartSoundMgr::setCrushSe(CrsGround::EMat, float)	8011c568
GameAudio::KartSoundMgr::setBrakeSe(unsigned long)	8011c668
GameAudio::KartSoundMgr::setDashSe(unsigned long)	8011c774
GameAudio::KartSoundMgr::setMiniturboSe(unsigned long)	8011c81c
GameAudio::KartSoundMgr::setJumpUpSe(unsigned long)	8011c8a8
GameAudio::KartSoundMgr::setBoundSe(float)	8011c914
GameAudio::KartSoundMgr::setWheelSpinSe()	8011ca10
GameAudio::KartSoundMgr::setSpinSe()	8011cae0
GameAudio::KartSoundMgr::setSpinTurnSe()	8011cba8
GameAudio::KartSoundMgr::setSe(unsigned long)	8011cc78
GameAudio::KartSoundMgr::setChibiPitch(JAISoundHandle *)	8011cdd4
GameAudio::KartSoundMgr::adjustEngine()	8011ce2c
GameAudio::KartSoundMgr::crushRenzokuTaisaku()	8011cfb4
GameAudio::KartSoundMgr::slipParamSet()	8011cfe0
GameAudio::KartSoundMgr::checkEcho()	8011d63c
GameAudio::KartSoundMgr::setInvincibleBgm(unsigned char)	8011d6bc
GameAudio::KartSoundMgr::clearInvincibleBgm(unsigned char)	8011d7dc
GameAudio::KartSoundMgr::setChibiFlag(bool, bool)	8011d974
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	8011da74
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::~SoundMgr()	8011db1c
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::startSoundCustom(unsigned long, unsigned long)	8011db98
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::setEcho(JAISoundHandle *, float)	8011dc64
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::setSe(unsigned long)	8011dcac
__sinit_KartSoundMgr_cpp	8011dd7c
GameAudio::SoundMgr<GameAudio::KartSoundMgr>::@48@__dt()	8011e1ac
GameAudio::KartSoundMgr::@48@__dt()	8011e1b4
GameAudio::NpcCarSoundMgr::NpcCarSoundMgr(Vec *, unsigned char, JKRHeap *)	8011e1bc
GameAudio::NpcCarSoundMgr::~NpcCarSoundMgr()	8011e238
GameAudio::NpcCarSoundMgr::frameWork(float, bool)	8011e298
GameAudio::NpcCarSoundMgr::setEngineSound(float)	8011e2f0
GameAudio::NpcCarSoundMgr::setHornSound(bool)	8011e39c
GameAudio::NpcCarSoundMgr::setSe(unsigned long)	8011e474
GameAudio::SoundWithEchoMgr<GameAudio::NpcCarSoundMgr>::SoundWithEchoMgr(Vec *, JKRHeap *, unsigned char)	8011e4d0
GameAudio::SoundWithEchoMgr<GameAudio::NpcCarSoundMgr>::~SoundWithEchoMgr()	8011e53c
GameAudio::SoundWithEchoMgr<GameAudio::NpcCarSoundMgr>::checkEcho()	8011e59c
GameAudio::SoundWithEchoMgr<GameAudio::NpcCarSoundMgr>::setInitialEcho(JAISoundHandle *)	8011e65c
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	8011e6a8
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::~SoundMgr()	8011e750
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::startSoundCustom(unsigned long, unsigned long)	8011e7cc
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::setSe(unsigned long)	8011e898
__sinit_NpcCarSoundMgr_cpp	8011e968
GameAudio::SoundWithEchoMgr<GameAudio::NpcCarSoundMgr>::@48@__dt()	8011eaac
GameAudio::SoundMgr<GameAudio::NpcCarSoundMgr>::@48@__dt()	8011eab4
GameAudio::NpcCarSoundMgr::@48@__dt()	8011eabc
GameAudio::ObjectSoundMgr::ObjectSoundMgr(Vec *, JKRHeap *)	8011eac4
GameAudio::ObjectSoundMgr::~ObjectSoundMgr()	8011eb38
GameAudio::ObjectSoundMgr::loop()	8011eb98
GameAudio::ObjectSoundMgr::frameWork()	8011ebd4
GameAudio::ObjectSoundMgr::setSe(unsigned long)	8011ebec
GameAudio::ObjectSoundMgr::setSeWithVelocityVP(unsigned long, float, float)	8011ec4c
GameAudio::ObjectSoundMgr::setSeWithVelocityVP(unsigned long, float, float)	8011ed24
GameAudio::ObjectSoundMgr::setSeWithVelocityP(unsigned long, float)	8011eddc
GameAudio::SoundWithEchoMgr<GameAudio::ObjectSoundMgr>::SoundWithEchoMgr(Vec *, JKRHeap *, unsigned char)	8011ee7c
GameAudio::SoundWithEchoMgr<GameAudio::ObjectSoundMgr>::~SoundWithEchoMgr()	8011eee8
GameAudio::SoundWithEchoMgr<GameAudio::ObjectSoundMgr>::checkEcho()	8011ef48
GameAudio::SoundWithEchoMgr<GameAudio::ObjectSoundMgr>::setInitialEcho(JAISoundHandle *)	8011f008
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	8011f054
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::~SoundMgr()	8011f0fc
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::startSoundCustom(unsigned long, unsigned long)	8011f178
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::setSe(unsigned long)	8011f244
__sinit_ObjectSoundMgr_cpp	8011f314
GameAudio::SoundWithEchoMgr<GameAudio::ObjectSoundMgr>::@48@__dt()	8011f458
GameAudio::SoundMgr<GameAudio::ObjectSoundMgr>::@48@__dt()	8011f460
GameAudio::ObjectSoundMgr::@48@__dt()	8011f468
GameAudio::RockSoundMgr::RockSoundMgr(Vec *, float, JKRHeap *)	8011f470
GameAudio::RockSoundMgr::~RockSoundMgr()	8011f510
GameAudio::RockSoundMgr::init()	8011f570
GameAudio::RockSoundMgr::loop()	8011f590
GameAudio::RockSoundMgr::frameWork()	8011f5c4
GameAudio::RockSoundMgr::setRollSe(float)	8011f5d0
GameAudio::RockSoundMgr::setBoundSe(float)	8011f6b4
GameAudio::RockSoundMgr::setBrokenSe()	8011f7ac
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	8011f838
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::~SoundMgr()	8011f8e0
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::setSe(unsigned long)	8011f95c
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::startSoundCustom(unsigned long, unsigned long)	8011f98c
__sinit_RockSoundMgr_cpp	8011fa58
GameAudio::SoundMgr<GameAudio::RockSoundMgr>::@48@__dt()	8011fb64
GameAudio::RockSoundMgr::@48@__dt()	8011fb6c
GameAudio::CustomSoundTable::getBgmSeqResourceID(JAISoundID) const	8011fb74
GameAudio::CustomSoundTable::getSoundType(JAISoundID) const	8011fbf0
GameAudio::CustomSoundTable::getCategory(JAISoundID) const	8011fc38
GameAudio::CustomSoundTable::getAudibleSw(JAISoundID) const	8011fc8c
GameAudio::CustomSoundTable::getPTrack(JAISoundID) const	8011fd08
GameAudio::CustomSoundTable::getSwBit(JAISoundID) const	8011fd80
GameAudio::CustomSoundTable::getLevelFlag(JAISoundID) const	8011fe0c
GameAudio::CustomSoundTable::getPriority(JAISoundID) const	8011fe90
GameAudio::CustomSoundTable::getSeInfo(JAISoundID, JAISe *) const	8011ff3c
GameAudio::CustomSoundTable::getSeqInfo(JAISoundID, JAISeq *) const	8011ff74
GameAudio::CustomSoundTable::getStreamInfo(JAISoundID, JAIStream *) const	8011ffa0
GameAudio::CustomSoundTable::getSoundInfo_(JAISoundID, JAISound *) const	801200a4
GameAudio::CustomSoundTable::getStreamFileEntry(JAISoundID)	801201c8
GameAudio::CustomSoundTable::initAudibleSw()	801201fc
GameAudio::CustomSoundTable::~CustomSoundTable()	80120318
__sinit_GameSoundTable_cpp	801203c4
GameAudio::CustomSoundTable::@4@getBgmSeqResourceID(JAISoundID) const	80120578
GameAudio::CustomSoundTable::@4@getAudibleSw(JAISoundID) const	80120580
GameAudio::CustomSoundTable::@8@__dt()	80120588
GameAudio::CustomSoundTable::@8@getStreamFileEntry(JAISoundID)	80120590
GameAudio::ShoreSoundMgr::ShoreSoundMgr(JKRHeap *)	80120598
GameAudio::PosMove::PosMove()	801206a8
GameAudio::ShoreSoundMgr::~ShoreSoundMgr()	801206b8
GameAudio::ShoreSoundMgr::loop()	80120718
GameAudio::ShoreSoundMgr::frameWork()	80120798
GameAudio::ShoreSoundMgr::setTide(unsigned char, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	801207b0
GameAudio::ShoreSoundMgr::setStatus(bool, float)	80120e74
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	80120e80
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::~SoundMgr()	80120f28
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::setSe(unsigned long)	80120fa4
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::startSoundCustom(unsigned long, unsigned long)	80120fd4
__sinit_ShoreSoundMgr_cpp	801210a0
GameAudio::SoundMgr<GameAudio::ShoreSoundMgr>::@48@__dt()	801211f8
GameAudio::ShoreSoundMgr::@48@__dt()	80121200
GameAudio::CircleSoundMgr::CircleSoundMgr(Vec *, float, float, float, JKRHeap *)	80121208
GameAudio::CircleSoundMgr::~CircleSoundMgr()	8012133c
GameAudio::CircleSoundMgr::loop()	8012139c
GameAudio::CircleSoundMgr::frameWork()	80121458
GameAudio::CircleSoundMgr::calcPlayPos(unsigned long)	80121490
GameAudio::CircleSoundMgr::setSe(unsigned long)	80121770
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	801218ec
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::~SoundMgr()	80121994
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::setSe(unsigned long)	80121a10
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::startSoundCustom(unsigned long, unsigned long)	80121a40
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::loop()	80121b0c
__sinit_CircleSoundMgr_cpp	80121b40
GameAudio::SoundMgr<GameAudio::CircleSoundMgr>::@48@__dt()	80121c4c
GameAudio::CircleSoundMgr::@48@__dt()	80121c54
GameAudio::CoasterSoundMgr::CoasterSoundMgr(Vec *, JKRHeap *)	80121c5c
GameAudio::CoasterSoundMgr::~CoasterSoundMgr()	80121cbc
GameAudio::CoasterSoundMgr::frameWork(float)	80121d1c
GameAudio::CoasterSoundMgr::setEngineSound(float)	80121d88
GameAudio::CoasterSoundMgr::checkScream(float)	80121e2c
GameAudio::SoundWithEchoMgr<GameAudio::CoasterSoundMgr>::SoundWithEchoMgr(Vec *, JKRHeap *, unsigned char)	80121f48
GameAudio::SoundWithEchoMgr<GameAudio::CoasterSoundMgr>::~SoundWithEchoMgr()	80121fb4
GameAudio::SoundWithEchoMgr<GameAudio::CoasterSoundMgr>::checkEcho()	80122014
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	801220d4
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::~SoundMgr()	8012217c
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::setSe(unsigned long)	801221f8
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::loop()	80122228
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::startSoundCustom(unsigned long, unsigned long)	8012225c
__sinit_CoasterSoundMgr_cpp	80122328
GameAudio::SoundWithEchoMgr<GameAudio::CoasterSoundMgr>::@48@__dt()	80122434
GameAudio::SoundMgr<GameAudio::CoasterSoundMgr>::@48@__dt()	8012243c
GameAudio::CoasterSoundMgr::@48@__dt()	80122444
GameAudio::MapSoundObjectMgr::MapSoundObjectMgr(Vec *, GameAudio::MapSoundObjectMgr::Type, JKRHeap *)	8012244c
GameAudio::MapSoundObjectMgr::~MapSoundObjectMgr()	801224ac
GameAudio::MapSoundObjectMgr::frameWork()	8012250c
GameAudio::MapSoundObjectMgr::getPlayerGoalRank()	801228a4
GameAudio::SoundWithEchoMgr<GameAudio::MapSoundObjectMgr>::SoundWithEchoMgr(Vec *, JKRHeap *, unsigned char)	80122900
GameAudio::SoundWithEchoMgr<GameAudio::MapSoundObjectMgr>::~SoundWithEchoMgr()	8012296c
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::SoundMgr(Vec *, JKRHeap *, unsigned char)	801229cc
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::~SoundMgr()	80122a74
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::setSe(unsigned long)	80122af0
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::loop()	80122b20
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::startSoundCustom(unsigned long, unsigned long)	80122b54
__sinit_MapSoundObjectMgr_cpp	80122c20
GameAudio::SoundWithEchoMgr<GameAudio::MapSoundObjectMgr>::@48@__dt()	80122d64
GameAudio::SoundMgr<GameAudio::MapSoundObjectMgr>::@48@__dt()	80122d6c
GameAudio::MapSoundObjectMgr::@48@__dt()	80122d74
GameAudio::FxLineConfig::FxLineConfig(JKRHeap *)	80122d7c
GameAudio::FxLineConfig::set(unsigned char)	80122e5c
GameAudio::CustomArcLoader::CustomArcLoader(JAUSection *)	80122ec8
GameAudio::CustomArcLoader::~CustomArcLoader()	80122f0c
GameAudio::CustomArcLoader::readCommandMore(unsigned long)	80122f74
__sinit_GameAudioArcLoader_cpp	80122ffc
Motor::Motor(JKRHeap *) 	801230d0
MotorParam::~MotorParam() 	80123174
Motor::init() 	801231bc
Motor::~Motor() 	80123260
MotorHioNode::~MotorHioNode() 	801232c4
Motor::exec() 	80123334
Motor::triggerWave(KartGamePad *, int) 	80123694
Motor::powerWave(KartGamePad *, float, unsigned char, unsigned char) 	8012370c
Motor::stop() 	80123878
__sinit_Motor_cpp	80123908
MotorManager::MotorManager(JKRHeap *) 	80123a14
MotorManager::~MotorManager() 	80123a9c
MotorManager::reset() 	80123b04
MotorManager::exec() 	80123b7c
MotorManager::setMotor(MotorManager::MotorType, int) 	80123bf8
MotorManager::setAwardMotor(MotorManager::MotorType) 	80123cc4
MotorManager::setPowerMotor(int, float, unsigned char, unsigned char) 	80123d30
__sinit_MotorManager_cpp	80123df0
J2DManager::J2DManager(JKRHeap *) 	80123efc
J2DManager::reset() 	8012415c
J2DManager::draw() 	8012434c
J2DManager::calc() 	80124424
J2DManager::calcParticle() 	801245a0
J2DManager::getKart2Status(int) 	801245f8
J2DManager::getStatus2Kart(int) 	8012460c
J2DManager::setStatus2Kart(int, int) 	80124620
J2DManager::setUsisi(int, ECharID) 	80124698
J2DManager::startPreRace() 	801246c0
J2DManager::getPreRaceStatus() 	801246e4
J2DManager::getPreRaceWipeType() 	801246f0
J2DManager::setRace2DDrawFlag(bool) 	801246fc
J2DManager::hideRace2D() 	80124710
J2DManager::getHideFrameRace2D() 	80124720
J2DManager::isHideRace2D() 	8012472c
J2DManager::isRaceEnd() 	8012474c
J2DManager::isGoalAnmEnd(int) 	801247ac
J2DManager::getGoalAnmFrame(int) 	8012483c
J2DManager::isAlarm(int) 	80124850
J2DManager::startLANNumAnm() 	80124874
J2DManager::startLANNumResultAnm() 	80124898
J2DManager::startLANResultAnm(int) 	801248bc
J2DManager::startBombDemo() 	801248e0
J2DManager::endBombDemo() 	80124904
J2DManager::isLANDemo() 	80124914
J2DManager::isStartGo321() 	80124940
__sinit_J2DManager_cpp	8012494c
Task::Task(int) 	80124a58
Task::init() 	80124ab4
Task::make(void (*) (), unsigned short) 	80124c04
Task::run() 	80124ca4
Task::change(void (*) (), Task::TCB *) 	80124d48
Task::kill(Task::TCB *) 	80124d90
Task::head() 	80124ddc
Task::tail() 	80124de0
Goal2D::Goal2D(JKRHeap *) 	80124de4
Goal2DParam::~Goal2DParam() 	8012565c
Goal2D::init() 	801256a4
Goal2DHioNode::~Goal2DHioNode() 	8012576c
Goal2D::drawGoal() 	801257dc
Goal2D::drawRetire() 	801258f4
Goal2D::calc() 	80125a04
Goal2D::sequenceGP() 	80126094
Goal2D::sequenceVS() 	801260c0
Goal2D::sequenceTA() 	80126164
Goal2D::sequenceMG() 	80126188
Goal2D::setVSMGRank() 	80126224
__sinit_Goal2D_cpp	801262ac
PauseManager::PauseManager(JKRHeap *) 	801263b8
PauseManager::reset() 	8012652c
PauseManager::draw() 	80126600
PauseManager::exec() 	80126828
Result2D::getDrawFlag() 	8012716c
Result2D::setDrawFlag(bool) 	80127174
PauseManager::tstPause() 	8012717c
PauseManager::wipeOut(int) 	80127184
PauseManager::getPauseChoice() 	801271c4
PauseManager::setTA() 	80127310
__sinit_PauseManager_cpp	80127334
Pause2D::Pause2D(JKRHeap *) 	80127440
Pause2DParam::~Pause2DParam() 	80127e9c
JGeometry::TVec2<float>::TVec2() 	80127ee4
Pause2D::init() 	80127ee8
Pause2DHioNode::~Pause2DHioNode() 	80128004
Pause2D::draw() 	80128074
Pause2D::calc(KartGamePad *) 	801280e0
Pause2D::selectorGP(KartGamePad *) 	80128294
Pause2D::selectorVS(KartGamePad *) 	80128330
Pause2D::selectorTA(KartGamePad *) 	80128424
Pause2D::selectorMG(KartGamePad *) 	80128518
Pause2D::selectorCommon() 	80128624
Pause2D::setDrawGP() 	8012866c
Pause2D::setDrawVS() 	801287e0
Pause2D::setDrawTA() 	80128cc8
Pause2D::setDrawMG() 	801291b0
Pause2D::setDrawCommon() 	8012983c
Pause2D::getScale(int) 	801299fc
Pause2D::getPauseSelector() 	80129a44
Pause2D::getPauseStatus() 	80129a4c
Pause2D::setPauseStatus(Pause2D::PauseStatus) 	80129a54
Pause2D::setPadText() 	80129a5c
__sinit_Pause2D_cpp	80129e0c
WipeManager::WipeManager(JKRHeap *) 	80129f18
WipeParam::~WipeParam() 	8012a230
WipeManager::@class$3031WipeManager_cpp::@class$3031WipeManager_cpp() 	8012a278
WipeHioNode::~WipeHioNode() 	8012a284
WipeManager::reset() 	8012a2f4
WipeManager::draw() 	8012a37c
WipeManager::drawIn(int, int, int) 	8012a4fc
WipeManager::drawOut(int, int, int) 	8012aa60
WipeManager::calc() 	8012afb0
WipeManager::calcIn(int, int, int) 	8012b0a8
WipeManager::calcOut(int, int, int) 	8012b5b0
WipeManager::getWipeState(int) 	8012baa4
WipeManager::setWipe(int, int, short, short, short, JUtility::TColor) 	8012bab4
WipeManager::initPre() 	8012bc54
WipeManager::preWipe() 	8012bcec
WipeManager::initMain() 	8012bdb4
WipeManager::mainWipe() 	8012be4c
WipeManager::initAfter() 	8012bf14
WipeManager::afterWipe() 	8012bfac
__sinit_WipeManager_cpp	8012c07c
Fade::Fade(JKRHeap *) 	8012c188
Fade::init() 	8012c5a0
Fade::draw(int, float, JUtility::TColor) 	8012c5a4
__sinit_Fade_cpp	8012c6b0
K2DPicture::drawK2D(float, float, float, float, bool) 	8012c7bc
K2DPicture::getNewColor(JUtility::TColor *) 	8012c9cc
K2DPicture::setTevModeK2D() 	8012cb08
K2DPicture::makeMatrix(float, float) 	8012ced0
Scene::Scene(JKRArchive *, JKRHeap *) 	8012cfbc
Scene::~Scene() 	8012cfd8
SceneApp::create() 	8012d020
SceneApp::SceneApp() 	8012d070
SceneApp::~SceneApp() 	8012d0c8
SceneApp::draw() 	8012d128
SceneApp::calc() 	8012d1f8
GameApp::reset() 	8012d314
__sinit_SceneApp_cpp	8012d318
SceneTitle::SceneTitle(JKRArchive *, JKRHeap *) 	8012d424
SceneTitle::init() 	8012d6ec
SceneTitle::~SceneTitle() 	8012d834
SceneTitle::draw() 	8012d8b0
SceneTitle::calc() 	8012d914
SceneTitle::fadeIn() 	8012da4c
SceneTitle::title() 	8012dab0
SceneTitle::card() 	8012dc74
SceneTitle::titleMenu() 	8012dce8
SceneTitle::nextScene() 	8012e010
SceneTitle::demo() 	8012e10c
SceneTitle::titleMenuAnm() 	8012e328
SceneTitleParam::~SceneTitleParam() 	8012e498
__sinit_SceneTitle_cpp	8012e4e0
SceneOption::SceneOption(JKRArchive *, JKRHeap *) 	8012e5ec
SceneOption::SceneOption_ConstructerOption(JKRHeap *) 	8012e700
SceneOption::SceneOption_ConstructerBack(JKRHeap *) 	8012ef94
SceneOption::init() 	8012f024
SceneOption::init_option() 	8012f0f4
SceneOption::init_back() 	8012f2fc
SceneOption::~SceneOption() 	8012f308
SceneOption::draw() 	8012f3b0
SceneOption::calcAnmCursor() 	8012f420
SceneOption::calcAnm() 	8012f77c
SceneOption::calcMatAnmCursor() 	8012fce0
SceneOption::calc() 	8012fe40
SceneOption::fadeIn() 	8013003c
SceneOption::option() 	80130068
SceneOption::soundplayer() 	801305ec
SceneOption::nextScene() 	80130964
SceneOption::getJASoundMode(int) 	80130a24
SceneOption::SceneChange_ExitOption(int) 	80130a64
SceneOption::rumble(int) 	80130b90
SceneOption::rumbleOff(int) 	80130be8
SceneOption::save() 	80130c20
SceneOption::nosave() 	80130de4
SceneOption::osSetSound(int) 	80130e64
__sinit_SceneOption_cpp	80130ea0
SceneRecord::SceneRecord(JKRArchive *, JKRHeap *) 	80130fac
J2DPicture::TCornerColor::TCornerColor() 	80131168
SceneRecord::SceneRecord_ConstructerMenu(JKRHeap *) 	80131180
SceneRecord::SceneRecord_ConstructerGP(JKRHeap *) 	80131690
SceneRecord::SceneRecord_ConstructerGPLine(JKRHeap *) 	80131a04
SceneRecord::SceneRecord_ConstructerTA(JKRHeap *) 	80131da4
SceneRecord::SceneRecord_ConstructerTALine(JKRHeap *) 	801322e8
SceneRecord::SceneRecord_ConstructerBack(JKRHeap *) 	80132630
SceneRecord::init() 	801326c0
SceneRecord::init_mode() 	801327f8
SceneRecord::init_gp() 	80132898
SceneRecord::init_gpline() 	801328e0
SceneRecord::init_ta() 	80132a50
SceneRecord::init_taline() 	80132b44
SceneRecord::init_back() 	80132c70
SceneRecord::~SceneRecord() 	80132c7c
SceneRecord::draw() 	80132ddc
SceneRecord::calcAnmRecordCursor() 	80132fe8
SceneRecord::calcAnmRecordGPCursor() 	801332c8
SceneRecord::calcAnmRecordGPLineAll() 	80133494
SceneRecord::calcTexChangeRecordGPLine(ERaceLevel) 	801336c8
SceneRecord::calcAnmRecordTACursor() 	80133e40
SceneRecord::calcAnmRecordTALineAll() 	8013400c
SceneRecord::calcTexChangeRecordTA() 	80134240
SceneRecord::calcTexChangeRecordTALine(int) 	80134780
SceneRecord::calcAnm() 	80134cb4
SceneRecord::calcMatAnmRecordCursor() 	801350c4
SceneRecord::calcMatAnm() 	80135258
SceneRecord::calc() 	801354e8
SceneRecord::fadeIn() 	80135578
SceneRecord::mode() 	801355a4
SceneRecord::gp() 	80135934
SceneRecord::ta() 	80135a40
SceneRecord::record() 	80135b4c
SceneRecord::piece() 	80135b50
SceneRecord::nextScene() 	80135b54
SceneRecord::ConvNum2ERace(int) 	80135bfc
__sinit_SceneRecord_cpp	80135c50
SceneMap::SceneMap(JKRArchive *, JKRHeap *) 	80135d24
SceneMap::init() 	80135d74
SceneMap::~SceneMap() 	80135d80
SceneMap::draw() 	80135dd8
SceneMap::calc() 	80135ddc
SceneMap::map() 	80135e5c
SceneMap::nextScene() 	8013604c
SceneMap::nextRace() 	8013609c
SceneMap::nextAward() 	8013619c
SceneMap::nextEnding() 	8013641c
SceneMap::nextTrueEnding() 	80136498
__sinit_SceneMap_cpp	80136514
Result2D::Result2D(JKRHeap *) 	80136620
RaceMgr::getKartInfo(int) 	8013916c
RaceMgr::getStatusNumber() const 	80139180
KartInfo::getDriverCharID(int) const 	8013918c
J2DPicture::setCornerColor(JUtility::TColor) 	801391b0
KartInfo::getPad(int) 	80139254
KartInfo::isTagMode() const 	80139264
RaceInfo::getKartInfo(int) 	80139274
J2DPane::getScaleY() const 	80139288
J2DPane::getScaleX() const 	80139290
J2DAnmBase::setFrame(float) 	80139298
JKRGetNameResource(const char *, JKRFileLoader *) 	801392a0
J2DPicture::setCornerColor(J2DPicture::TCornerColor) 	801392c0
J2DPicture::getCornerColor(J2DPicture::TCornerColor &) 	8013936c
Race2D::getRankPic(int, int) 	801393f0
J2DManager::getRace2D() 	80139408
JUtility::TColor::operator= (const JUtility::TColor &) 	80139410
KartLocale::getLanguage() 	80139434
Kart2DCommon::getNumberTexture(Kart2DCommon::NumberTextureID) 	8013943c
RaceMgr::getRaceLevel() const 	8013944c
Kart2DCommon::getCupIconTexture(ERaceGpCup) 	80139458
Kart2DCommon::getCupNameTexture(ERaceGpCup) 	80139468
SequenceInfo::getCup() const 	80139478
Kart2DCommon::ptr() 	80139480
J2DPane::show() 	80139488
JGeometry::TVec2<float>::operator= (const JGeometry::TVec2<float> &) 	80139494
J2DPane::hide() 	801394a8
JGeometry::TBox2<float>::TBox2(const JGeometry::TBox2<float> &) 	801394b4
J2DScreen::set(const char *, unsigned long, JKRArchive *) 	801394d8
J2DManager::getArchive() const 	80139500
GETJ2DManager() 	80139508
RaceMgr::getRaceMode() const 	80139510
RCMGetManager() 	8013951c
System::getJ2DOrtho() 	80139524
Result2DHioNode::Result2DHioNode(const char *) 	8013952c
Result2DParam::~Result2DParam() 	80139590
Result2D::@class$3068Result2D_cpp::@class$3068Result2D_cpp() 	801395d8
Result2D::@class$3061Result2D_cpp::@class$3061Result2D_cpp() 	801395dc
Result2D::data2D::data2D() 	80139624
Result2D::init() 	80139628
Result2DHioNode::~Result2DHioNode() 	80139970
Result2D::draw() 	801399e0
Result2D::drawGP() 	80139a84
Result2D::drawVS() 	80139e14
Result2D::drawTA() 	8013a138
Result2D::drawMG() 	8013a454
Result2D::calc(KartGamePad *) 	8013a6d0
Result2D::calcRaceRank() 	8013aba0
Result2D::calcGPRank() 	8013ad84
Result2D::calcResult() 	8013af34
Result2D::calcVS() 	8013af5c
Result2D::calcTA(KartGamePad *) 	8013b098
Result2D::calcMG() 	8013b630
Result2D::calcPASSWD(KartGamePad *) 	8013b740
Result2D::selectorGP(KartGamePad *) 	8013b83c
Result2D::selectorVS(KartGamePad *) 	8013ba8c
Result2D::selectorTA(KartGamePad *) 	8013bba0
Result2D::selectorMG(KartGamePad *) 	8013bdd0
Result2D::selectorCommon() 	8013bedc
Result2D::setDrawGP() 	8013bf20
Result2D::setDrawVS() 	8013c05c
Result2D::setDrawTA() 	8013c0d8
Result2D::setDrawMG() 	8013c1e4
Result2D::getResultSelector() 	8013c25c
Result2D::setRaceRank() 	8013c264
Result2D::setGPRank() 	8013cb20
Result2D::setVS() 	8013d018
Result2D::setTA() 	8013d290
Result2D::setMG() 	8013da68
Result2D::setBattleCharacter() 	8013dc38
Result2D::getRaceRankLayoutAlpha(int, unsigned char &) 	8013de44
Result2D::getGPRankLayoutAlpha(int, unsigned char &) 	8013de80
Result2D::getRaceRankLinePos(int, int, float &) 	8013dec4
Result2D::getGPRankLinePos(int, int, float &) 	8013e010
Result2D::getResultLinePos(int, float &) 	8013e15c
Result2D::getRaceRankLineScale(int, int, JGeometry::TVec2<float> &, JGeometry::TVec2<float> &) 	8013e28c
Result2D::getGPRankLineScale(int, int, JGeometry::TVec2<float> &, JGeometry::TVec2<float> &) 	8013e3dc
Result2D::getFrameClr(int, JUtility::TColor &, unsigned char &) 	8013e530
Result2D::getVSPointYPos(int, int, float &) 	8013e694
Result2D::getMGPointYPos(int, float &) 	8013e704
Result2D::getVSScale(int, float &) 	8013e770
Result2D::getMGScale(int, float &) 	8013e7b0
Result2D::getVSColor(int, JUtility::TColor &) 	8013e7f0
Result2D::getMGColor(int, JUtility::TColor &) 	8013e9a0
Result2D::getFrameColor(JUtility::TColor &) 	8013eb50
Result2D::getScale(int) 	8013ebcc
Result2D::setScale(int) 	8013ec14
Result2D::setGPClr() 	8013ee54
Result2D::getAnmEnd() 	8013ee80
__sinit_Result2D_cpp	8013eeac
SceneFactory::SceneFactory() 	8013f014
SceneFactory::~SceneFactory() 	8013f044
SceneFactory::loadData(Scene::SceneType, JKRHeap *) 	8013f0cc
SceneFactory::createScene(Scene::SceneType, JKRHeap *) 	8013f6e8
SequenceInfo::@class$3037SequenceInfo_cpp::@class$3038SequenceInfo_cpp::@class$3038SequenceInfo_cpp() 	8013fb24
SequenceInfo::init() 	8013fb34
SequenceInfo::setRandomSeed() 	8013fca4
SequenceInfo::getRandom() 	8013fcd4
SequenceInfo::getDecidePad() 	8013fcf8
SequenceInfo::setClrGPCourse() 	8013fd14
SequenceInfo::isEndGP() 	8013fff4
SequenceInfo::isGameClr() 	80140038
SequenceInfo::getPlayerRankGP() 	801400fc
SequenceInfo::getPad2Player(KartGamePad *) 	801401b0
SequenceInfo::setSecretFlag() 	801401f8
SequenceInfo::setSecretGameAppear(SystemRecord::GameFlag) 	80140900
SequenceInfo::setSecretKartAppear(SystemRecord::SecretKartID) 	8014092c
SequenceInfo::rndDemo(unsigned long) 	80140958
SequenceInfo::getDemoKart(ECharID) 	80140abc
SequenceInfo::rndAllCupCourse() 	80140b20
__sinit_SequenceInfo_cpp	80140bb4
PrintDvdError::PrintDvdError(JKRHeap *) 	80140d5c
PrintDvdError::init(int) 	80140dd0
PrintDvdError::draw() 	80141180
PrintDvdError::calc() 	801411a4
Race2D::Race2D(JKRHeap *) 	801411c8
J2DPane::getTranslateY() const 	8014493c
J2DPane::getTranslateX() const 	80144944
JUtility::TColor::TColor() 	8014494c
JGeometry::TVec2<float>::TVec2	80144958
RaceMgr::getTotalLapNumber() const 	80144964
RaceMgr::getPlayerNumber() const 	8014496c
RaceMgr::getKartNumber() const 	80144978
std::atan2(float, float) 	80144984
RCMGetCourse() 	801449a8
JUtility::TColor::TColor(unsigned char, unsigned char, unsigned char, unsigned char) 	801449b4
RaceMgr::isMirror() const 	801449bc
Race2DParam::setS(float) 	801449c8
Race2DParam::setY(float) 	801449d0
Race2DParam::setX(float) 	801449d8
ResMgr::getCourseID() 	801449e0
Race2DHioNode::getParam() 	801449e8
JUtility::TColor::set(unsigned char, unsigned char, unsigned char, unsigned char) 	801449f0
J2DManager::getNetFlag() 	80144a14
RaceMgr::getConsoleNumber() const 	80144a1c
Race2DHioNode::Race2DHioNode(const char *) 	80144a28
Race2DParam::~Race2DParam() 	80144a9c
Race2D::@class$3130Race2D_cpp::@class$3130Race2D_cpp() 	80144ae4
Race2D::@class$3124Race2D_cpp::@class$3124Race2D_cpp() 	80144ae8
Race2D::@class$3122Race2D_cpp::@class$3122Race2D_cpp() 	80144c10
Race2D::init() 	80144c14
Race2DHioNode::~Race2DHioNode() 	801456fc
Race2D::drawPlayerMark() 	8014576c
Race2D::drawMask() 	80145bf8
Race2D::draw() 	80145ce0
Race2D::drawAlarm() 	80146d20
Race2D::anmTA(int) 	801470d4
Race2D::getAlphaAnmTA(int, unsigned char &) 	8014785c
Race2D::getBestTimeColor(int, JUtility::TColor &, J2DPicture::TCornerColor &) 	8014792c
Race2D::getBestLapColor(int, JUtility::TColor &) 	80147a48
Race2D::drawMiniGame() 	80147ae0
Race2D::drawBomb() 	80147b4c
KartChecker::getWinBombPoint() 	80147eb8
Race2D::getBombScale(int, int, int) 	80147ec0
Race2D::getReachBombScale(int, int) 	801480c0
Race2D::drawEscape() 	80148114
Race2D::getStartShineTimeScale(int) 	80148358
Race2D::drawCourse() 	801483e4
Race2D::calc() 	8014954c
Race2D::calcPlayerMark() 	80149a58
Race2D::calcParticle() 	80149dac
Race2D::setLayoutData() 	8014a2e8
Race2D::calcMiniGame() 	8014bb64
Race2D::calcBomb() 	8014bbd0
Race2D::getBombColor(JUtility::TColor, JUtility::TColor) 	8014c548
Race2D::isBombReach(int) 	8014c6c0
Race2D::isBombWinner(int) 	8014c754
Race2D::setEffectPos(int) 	8014c7a8
Race2D::calcEscape() 	8014c970
Race2D::calcTimeFrame(bool, int) 	8014ce0c
Race2D::getCornerColor(int) 	8014d1e8
Race2D::setEscapeColor(int) 	8014d4f8
Race2D::getTimeColor(JUtility::TColor, JUtility::TColor) 	8014e444
Race2D::startBombDemo() 	8014e5bc
Race2D::isAlarm(int) 	8014e5e0
Race2D::getMapPos(int, JGeometry::TVec3<float> &, JGeometry::TVec2<float> &) 	8014e640
Race2D::getCharacterInfo(int, int, float &, float &, float &) 	8014e9ac
Race2D::getCharacterClr(int, int, int, JUtility::TColor &, JUtility::TColor &, unsigned char &) 	8014e9dc
Race2D::getItemInfo(int, int, int, float &, float &, float &) 	8014efd8
Race2D::decideItem(int, unsigned char, int &) 	8014f00c
Race2D::calcLapInit() 	8014f22c
Race2D::calcLap() 	8014f2b8
Race2D::lapInit() 	8014f5b0
Race2D::lapMain() 	8014f5f0
Race2D::lapTimeInit() 	8014f610
Race2D::lapTimeMain() 	8014f730
Race2D::calcItem() 	8014fa54
Race2D::itemStartInit() 	8014fc58
Race2D::itemStart() 	8014fca8
Race2D::itemBlinkInit() 	80150018
Race2D::itemBlink() 	80150068
Race2D::itemGetInit() 	80150288
Race2D::itemGetMain() 	801502dc
Race2D::itemSpecialInit() 	801504a0
Race2D::itemSpecialMain() 	801504e0
Race2D::setUsisi(int, ECharID) 	80150784
Race2D::alarmX(int, float &) 	80150788
Race2D::getStartScaleA(int, float &) 	801507d8
Race2D::getStartScaleB(int, float &) 	801508cc
Race2D::getStartSpeedMeterScale(int, int, float &) 	801509c8
Race2D::getGoalSpeedMeterPos(int, float &) 	80150a74
Race2D::getStartLapPos(int, int, float &) 	80150ac4
Race2D::getGoalLapPos(int, float &) 	80150cc8
Race2D::getStartCharPos(int, int, float &) 	80150d18
Race2D::getGoalCharPos(int, int, float &) 	80150e18
Race2D::getThunderCharScale(int) 	80150e90
Race2D::getStartRankPos(int, int, JGeometry::TVec2<float> &) 	80150f68
Race2D::getRaceRankScale(int) 	80151110
Race2D::getGoalRankPos(int, int, JGeometry::TVec2<float> &) 	801511d8
Race2D::getGoalRankScale(int, int, float &) 	801514c8
Race2D::getGoalRankRot(int, float &) 	801516f8
Race2D::getStartLapTimePos(int, int, float &) 	80151760
Race2D::getGoalLapTimePos(int, int, float &) 	80151874
__sinit_Race2D_cpp	80151964
ReadPrintMessage::getColor(void *, int) 	80151af8
ReadPrintMessage::getDefaultColor(void *) 	80151b08
ReadPrintMessage::getRate(void *, int) 	80151b74
ReadPrintMessage::getCharSpace(void *, int) 	80151be8
ReadPrintMessage::getMessage(void *, int) 	80151c5c
ReadPrintMessage::tagCnv(char *, void *, J2DTextBox::TFontSize, int, char *) 	80151cdc
ReadPrintMessage::getBmgMessageID(PrintDvdError::MessageID) 	8015201c
ReadPrintMessage::getBmgMessageID(PrintPal::MessageID) 	80000000
ReadPrintMessage::getBmgMessageID(PrintMemoryCard::MessageID) 	801520b8
ReadPrintMessage::getBmgMessageID(int) 	80152110
ReadPrintMessage::getBmgMessageID	8015231c
PrintProgressive::PrintProgressive	
PrintProgressive::init	
PrintProgressive::draw	
PrintProgressive::calc	
PrintProgressive::isMessage	
PrintProgressive::isChoice	
PrintProgressive::getCounter	
__sinit_PrintProgressive_cpp	
PrintMemoryCard::PrintMemoryCard(JKRHeap *) 	80152374
PrintMemoryCard::reset() 	80152440
PrintMemoryCard::init(PrintMemoryCard::MessageID) 	801524ac
PrintMemoryCard::changeMessage() 	801524c8
PrintMemoryCard::draw() 	801528c0
PrintMemoryCard::calc() 	801528f0
PrintMemoryCard::closeWindow() 	80152cd8
PrintMemoryCard::closeWindowNoSe() 	80152d60
PrintMemoryCard::setBmgPtr() 	80152da4
PrintMemoryCard::isMessage() 	80152e14
PrintMemoryCard::getChoiceType() 	80152e40
PrintMemoryCard::getWindowSize() 	80152e7c
PrintMemoryCard::getWindowColor() 	80152ee8
__sinit_PrintMemoryCard_cpp	80152f48
PreRace2D::PreRace2D(JKRHeap *) 	80153054
PreRace2DParam::~PreRace2DParam() 	8015364c
PreRace2D::init() 	80153694
PreRace2DHioNode::~PreRace2DHioNode() 	801536e4
PreRace2D::draw() 	80153754
PreRace2D::calc() 	801537dc
PreRace2D::setGP() 	80153a00
PreRace2D::setVS() 	80153d78
PreRace2D::setTA() 	80153d7c
PreRace2D::setBalloon() 	80153d80
PreRace2D::setBomb() 	80153ef0
PreRace2D::setEscape() 	80154060
PreRace2D::setLap() 	801541c8
PreRace2D::setMirror() 	80154344
PreRace2D::changeTexture(const char *, J2DPicture *) 	80154484
PreRace2D::start() 	801544e8
__sinit_PreRace2D_cpp	80154524
Go2D::Go2D(JKRHeap *) 	80154630
Go2DParam::~Go2DParam() 	8015477c
Go2D::init() 	801547c4
Go2DHioNode::~Go2DHioNode() 	80154814
Go2D::draw() 	80154884
Go2D::calc() 	80154930
__sinit_Go2D_cpp	8015499c
Mario::Mario(JKRHeap *) 	80154aa8
Mario::init() 	80155068
Mario::draw(float, JUtility::TColor) 	8015506c
__sinit_Mario_cpp	8015521c
SceneMenu::SceneMenu(JKRArchive *, JKRHeap *) 	80155328
J2DGrafContext::scissor(const JGeometry::TBox2<float> &) 	8015737c
J2DTextBox::setFontColor(JUtility::TColor, JUtility::TColor) 	801573b8
SceneMenu::reset() 	801573fc
SceneMenu::init() 	80157c08
SceneMenu::~SceneMenu() 	80158324
SceneMenu::draw() 	8015837c
SceneMenu::calc() 	80158868
SceneMenu::calcModeAnm() 	80159998
SceneMenu::caleEngine(SceneMenu::BckData *) 	80159a94
SceneMenu::calcEngineMoji(SceneMenu::BckData *) 	80159ad4
SceneMenu::calcEnginePic(SceneMenu::BckData *) 	80159b78
SceneMenu::calcEngineBrkAnm(SceneMenu::BrkData *) 	80159c1c
SceneMenu::calcModeOrder() 	80159c5c
SceneMenu::entry_init() 	80159ddc
SceneMenu::entry() 	8015a15c
SceneMenu::entry_end() 	8015a9dc
SceneMenu::vs_init() 	8015aa60
SceneMenu::vs() 	8015b1c0
SceneMenu::vs_end() 	8015c4b8
SceneMenu::mode_init() 	8015c678
SceneMenu::mode() 	8015d644
SceneMenu::mode_end() 	8015f330
SceneMenu::battle_init() 	8016004c
SceneMenu::battle() 	80160294
SceneMenu::battle_end() 	80160684
SceneMenu::character_init() 	80160788
SceneMenu::character() 	801611b0
SceneMenu::character_end() 	80161628
SceneMenu::nextScene() 	80161938
SceneMenu::selectA(int) 	80161988
SceneMenu::selectB(int) 	80161b64
SceneMenu::selectUp(int) 	80161d6c
SceneMenu::selectDown(int) 	80161e38
SceneMenu::selectLeft(int) 	80161f04
SceneMenu::selectRight(int) 	80161fc4
SceneMenu::selectZ(int) 	80162084
SceneMenu::isSelectAnm(int) 	80162184
SceneMenu::moveCursor(int, SceneMenu::Cursor) 	801621e8
SceneMenu::isRndRoulette() 	801625d0
SceneMenu::rndRoulette() 	801626a8
SceneMenu::rndSelect() 	80162738
SceneMenu::setCharacterFlag() 	80162858
SceneMenu::getKart(int, int) 	8016295c
SceneMenu::changeKart(int, int, int, int) 	801629d4
SceneMenu::characterAnm() 	80162afc
SceneMenu::characterOkWaitAnm() 	801635c4
SceneMenu::setChar1Plus() 	801639bc
SceneMenu::setRaceData() 	80163cb0
SceneMenu::setCharSelFlag() 	801645c8
SceneMenu::useCharSel(int, int) 	80164624
SceneMenu::getCharSel(int &, int &) 	8016463c
SceneMenu::getRndCharSel(int &, int &) 	80164928
SceneMenu::changeText() 	80164a60
__sinit_SceneMenu_cpp	80164c04
Demo2D::Demo2D(JKRHeap *) 	80164d10
Demo2DParam::~Demo2DParam() 	80164de8
Demo2D::init() 	80164e30
Demo2DHioNode::~Demo2DHioNode() 	80164e34
Demo2D::draw() 	80164ea4
Demo2D::calc() 	80164f18
__sinit_Demo2D_cpp	80164f28
Go3212D::Go3212D(JKRHeap *) 	80165034
Go3212DParam::~Go3212DParam() 	80165184
Go3212D::init() 	801651cc
Go3212DHioNode::~Go3212DHioNode() 	801651e4
Go3212D::draw() 	80165254
Go3212D::calc() 	80165300
__sinit_Go3212D_cpp	801653c8
CharacterSelect3DParam::CharacterSelect3DParam() 	801654d4
CharacterSelect3D::CharacterSelect3D(JKRHeap *) 	80165634
CharacterSelect3D::@class$2808CharacterSelect3D_cpp::@class$2808CharacterSelect3D_cpp(	80165638
CharacterSelect3D::@class$2807CharacterSelect3D_cpp::@class$2807CharacterSelect3D_cpp() 	8016563c
CharacterSelect3D::init() 	801664e4
CharacterSelect3D::~CharacterSelect3D() 	801665c4
CharacterSelect3D::draw(int, float) 	80166618
MenuSubLight::getEffectMtx() 	801669e8
MenuSceneLight::getEffectMtx() 	801669f0
CharacterSelect3D::draw(int, float, JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801669f8
CharacterSelect3D::calc() 	80166d68
CharacterSelect3D::setCharacter(int, int, ECharID, JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801676f0
CharacterSelect3D::setCharacterStatus(int, int, CharacterSelect3D::CHARACTER_STATUS) 	80167768
CharacterSelect3D::setKart(int, EKartID, JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	80167820
CharacterSelect3D::isCancel(int) 	80167888
CharacterSelect3D::isNext(int) 	801678dc
CharacterSelect3D::getCameraMatrix() 	80167930
CharacterSelect3D::getFovy() 	80167938
CharacterSelect3D::calcCharacter(int, int, ECharID, JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	80167948
CharacterSelect3D::drawKart(EKartID) 	80168000
CharacterSelect3D::calcRotTrans(float (*) [4], JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801681f8
CharacterSelect3DParam::~CharacterSelect3DParam() 	801682c4
__sinit_CharacterSelect3D_cpp	8016830c
SceneCourseSelect::SceneCourseSelect(JKRArchive *, JKRHeap *) 	80168418
SceneCourseSelect::reset() 	80168b60
SceneCourseSelect::init() 	80168eb8
SceneCourseSelect::~SceneCourseSelect() 	8016914c
SceneCourseSelect::draw() 	801691e8
SceneCourseSelect::calc() 	80169314
SceneCourseSelect::course_init() 	80169a14
SceneCourseSelect::course() 	80169bd8
SceneCourseSelect::buttonA() 	80169fcc
SceneCourseSelect::buttonB() 	8016a1d8
SceneCourseSelect::course_end() 	8016a25c
SceneCourseSelect::nextScene() 	8016a3d4
SceneCourseSelect::nextRace() 	8016a454
SceneCourseSelect::calcAnm() 	8016a584
SceneCourseSelect::setTexture() 	8016ac0c
SceneCourseSelect::setRivalKart() 	8016b244
SceneCourseSelect::setStartNo() 	8016b43c
SceneCourseSelect::rndRoulette() 	8016b51c
__sinit_SceneCourseSelect_cpp	8016b604
SceneGhostLoadSave::GhostFileInfoTable::append(long, unsigned long, TARecord &) 	8016b710
SceneGhostLoadSave::GhostFileInfoTable::convCrsID(unsigned char) 	8016b81c
SceneGhostLoadSave::Card::searchPane(unsigned char, J2DScreen *) 	8016b854
SceneGhostLoadSave::Card::setCardInfo() 	8016ba24
SceneGhostLoadSave::Card::process() 	8016bbb0
SceneGhostLoadSave::Card::unselect() 	8016bf50
SceneGhostLoadSave::Card::insertCard() 	8016bf80
SceneGhostLoadSave::Card::error() 	8016bfd8
SceneGhostLoadSave::Card::calcAnm() 	8016c0ec
SceneGhostLoadSave::QuitBtn::calcAnm() 	8016c67c
SceneGhostLoadSave::SelectSlot::setup(JKRArchive *, JKRHeap *) 	8016c890
SceneGhostLoadSave::SelectSlot::init() 	8016cd54
SceneGhostLoadSave::SelectSlot::processCard() 	8016cffc
SceneGhostLoadSave::SelectSlot::watchCardState() 	8016d050
SceneGhostLoadSave::SelectSlot::selectSlot() 	8016d238
SceneGhostLoadSave::SelectSlot::frameIn() 	8016d70c
SceneGhostLoadSave::GDInexLineVC::setup(JKRArchive *, JKRHeap *, bool) 	8016d75c
SceneGhostLoadSave::GDInexLineVC::updateInfo() 	8016dc64
SceneGhostLoadSave::GDIndexLayoutVC::setup(JKRArchive *, JKRHeap *) 	8016dfe4
SceneGhostLoadSave::GDIndexLayoutVC::setCard(SceneGhostLoadSave::Card *) 	8016e2a8
SceneGhostLoadSave::GDIndexLayoutVC::selectData() 	8016e500
SceneGhostLoadSave::GDIndexLayoutVC::scrollUp() 	8016e780
SceneGhostLoadSave::GDIndexLayoutVC::scrollDown() 	8016e7b4
SceneGhostLoadSave::GDIndexLayoutVC::shiftUp() 	8016e7e8
SceneGhostLoadSave::GDIndexLayoutVC::calcAnm() 	8016e884
SceneGhostLoadSave::SceneGhostLoadSave(JKRArchive *, JKRHeap *) 	8016edd8
SceneGhostLoadSave::Card::Card() 	8016eee0
SceneGhostLoadSave::GhostFileInfo::GhostFileInfo() 	8016ef30
SceneGhostLoadSave::init() 	8016ef48
SceneGhostLoadSave::~SceneGhostLoadSave() 	8016f0c8
SceneGhostLoadSave::draw() 	8016f128
SceneGhostLoadSave::calc() 	8016f1d8
SceneGhostLoadSave::startFadeIn() 	8016f3dc
SceneGhostLoadSave::checkCard() 	8016f48c
SceneGhostLoadSave::fadeIn() 	8016f784
SceneGhostLoadSave::frameInSlot() 	8016f79c
SceneGhostLoadSave::selectSlot() 	8016f7b4
SceneGhostLoadSave::confirm() 	8016fa04
SceneGhostLoadSave::frameOutSlot() 	8016faa0
SceneGhostLoadSave::frameInData() 	8016fb0c
SceneGhostLoadSave::selectData() 	8016fb24
SceneGhostLoadSave::ghostSaveLoad() 	8016fc4c
SceneGhostLoadSave::frameOutData() 	8016fd78
SceneGhostLoadSave::nextScene() 	8016fde0
SceneGhostLoadSave::prevScene() 	8016ff00
__sinit_SceneGhostLoadSave_cpp	8016ffec
PrintWindow::PrintWindow(JKRHeap *) 	801700f8
PrintWindow::init() 	8017079c
PrintWindow::draw() 	8017084c
PrintWindow::calc() 	8017089c
PrintWindow::getTextBox() 	80170df0
PrintWindow::getBaseFontSize() 	80170e30
CourseName2D::CourseName2D(JKRArchive *) 	80170ea4
CourseName2D::~CourseName2D() 	80170f6c
CourseName2D::getCourseNameTexture(ECourseID) 	80170fc0
__sinit_CourseName2D_cpp	8017106c
SceneLanEntry::SceneLanEntry(JKRArchive *, JKRHeap *) 	80171178
SceneLanEntry::init() 	801712d8
SceneLanEntry::~SceneLanEntry() 	80171308
SceneLanEntry::draw() 	8017138c
SceneLanEntry::calc() 	801713dc
SceneLanEntry::start() 	8017186c
SceneLanEntry::waitLink() 	80171940
SceneLanEntry::waitIPGet() 	801719b4
SceneLanEntry::waitSearch() 	80171ab4
SceneLanEntry::waitSetup() 	80171ba4
SceneLanEntry::waitSleep() 	80171e18
SceneLanEntry::waitEnd() 	80171eb0
SceneLanEntry::waitButton() 	80171fc4
SceneLanEntry::nextScene() 	80172054
SceneLanEntry::backScene() 	801720a4
SceneLanEntry::error(SceneLanEntry::Window::Message) 	801720f8
SceneLanEntry::debug() 	801721a0
__sinit_SceneLanEntry_cpp	801722bc
SceneMapSelect::SceneMapSelect(JKRArchive *, JKRHeap *) 	801723c8
SceneMapSelect::reset() 	80172830
SceneMapSelect::init() 	80172c40
SceneMapSelect::~SceneMapSelect() 	80172d30
SceneMapSelect::draw() 	80172de8
SceneMapSelect::calc() 	80172eb8
SceneMapSelect::map_init() 	801730a0
SceneMapSelect::map() 	80173158
SceneMapSelect::buttonA() 	801734d0
SceneMapSelect::buttonB() 	801735f0
SceneMapSelect::map_end() 	80173694
SceneMapSelect::nextScene() 	8017377c
SceneMapSelect::nextBattle() 	801737cc
SceneMapSelect::calcAnm() 	80173974
SceneMapSelect::rndRoulette() 	80173bc4
__sinit_SceneMapSelect_cpp	80173c44
BattleName2D::BattleName2D(JKRArchive *) 	80173d50
BattleName2D::~BattleName2D() 	80173de0
BattleName2D::getBattleNameTexture(BattleName2D::BattleName) 	80173e34
__sinit_BattleName2D_cpp	80173e5c
LapGhost2D::LapGhost2D(JKRHeap *) 	80173f68
LapGhost2D::init() 	801740ac
LapGhost2D::draw() 	80174100
LapGhost2D::calc() 	8017418c
LapGhost2D::start(RaceTime, int) 	8017425c
__sinit_LapGhost2D_cpp	801743c4
CanNotSaveG2D::CanNotSaveG2D(JKRHeap *) 	801744d0
CanNotSaveG2D::init() 	801745c4
CanNotSaveG2D::draw() 	80174614
CanNotSaveG2D::calc() 	801746b0
__sinit_CanNotSaveG2D_cpp	8017473c
LANResult2D::LANResult2D(JKRHeap *) 	80174848
LANResult2DParam::~LANResult2DParam() 	80174950
LANResult2D::init() 	80174998
LANResult2DHioNode::~LANResult2DHioNode() 	801749d4
LANResult2D::draw() 	80174a44
LANResult2D::calc() 	80174ae0
LANResult2D::start(int) 	80174b54
__sinit_LANResult2D_cpp	80174d80
LANNum2D::LANNum2D(JKRHeap *) 	80174e8c
LANNum2DParam::~LANNum2DParam() 	8017540c
LANNum2D::setDraw1() 	80175454
LANNum2D::setDraw2() 	80175ab8
LANNum2D::setDraw4() 	8017613c
LANNum2D::init() 	80176800
LANNum2DHioNode::~LANNum2DHioNode() 	80176884
LANNum2D::draw() 	801768f4
LANNum2D::calc() 	80176a18
ANNum2D::start() 	80176b0c
LANNum2D::start2() 	80176c0c
__sinit_LANNum2D_cpp	80176d4c
Cup2D::Cup2D(JKRArchive *) 	80176e58
Cup2D::~Cup2D() 	80176f08
Cup2D::getCupTexture(ERaceGpCup, int) 	80176f5c
__sinit_Cup2D_cpp	80176f70
BombStart2D::BombStart2D(JKRHeap *) 	8017707c
BombStart2D::init() 	801772f8
BombStart2D::draw() 	8017734c
BombStart2D::calc() 	801773e8
BombStart2D::start() 	80177450
__sinit_BombStart2D_cpp	801774c4
DrawBuffer::DrawBuffer() 	801775d0
DrawBuffer::DrawBuffer(unsigned long) 	801775f0
DrawBuffer::reset() 	80177648
DrawBuffer::~DrawBuffer() 	80177690
DrawBuffer::create(unsigned long, unsigned long) 	80177708
DrawBuffer::drawIn(unsigned long) 	80177794
DrawBuffer::draw() const 	80177798
DrawBuffer::drawOpa(unsigned long) 	8017780c
DrawBuffer::drawXlu(unsigned long) 	80177870
DrawBuffer::update() 	801778b0
DrawBuffer::viewCalc(unsigned long) 	80177920
__sinit_DrawBuffer_cpp	80177924
Course::Course(CrsData *, int, bool) 	80177968
ExModel::__defctor() 	80177c18
J3DAnmObjBase::~J3DAnmObjBase() 	80177c3c
J3DFrameCtrl::~J3DFrameCtrl() 	80177c9c
J3DAnmObjMaterial::~J3DAnmObjMaterial() 	80177ce4
J3DAnmObjMaterial::J3DAnmObjMaterial() 	80177d54
Course::reset() 	80177dbc
Course::loadCrsData(bool) 	80178128
AIPoint::AIPoint() 	80178290
AIPath::~AIPath() 	8017829c
AIPath::AIPath() 	801782d8
Course::createSector() 	801782e8
Course::createJugemPoint() 	801786e4
Course::searchJugemPoint(unsigned short) 	80178780
Course::searchSector(short) 	801787cc
Course::createCLPoint(bool) 	8017881c
Course::getFirstCLPoint(int) const 	80178eb4
Course::createArea() 	80178ed8
Course::Area::Area() 	80178f80
smpCalcMaterial(J3DModelData *, J3DJoint *, float (*) [4]) 	80178fd4
J3DJoint::getYounger() 	80179560
J3DJoint::getChild() 	80179568
J3DJoint::getJntNo() const 	80179570
J3DJoint::getTransformInfo() 	80179578
Course::setFogInfo(J3DModelData *) 	80179580
Course::setFogInfo(ExModel *) 	801795c0
Course::loadModelData() 	80179604
Course::searchMaterial(unsigned long, unsigned long *, short) 	80179b14
Course::isHighPriority(const char *) 	80179b4c
Course::createModel(JKRSolidHeap *, unsigned long) 	80179c2c
Course::calcShaking() 	80179c30
Course::calc() 	8017a2e4
Course::convWorldPosToGridCoord(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	8017a650
Course::convMapCoordToWorldPos(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	8017a760
Course::calcPlaneParam(stPlaneParam *, float, float, float, float, const JGeometry::TVec3<float> &) 	8017a810
Course::getShakeVelocity(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	8017a978
Course::update() 	8017aae4
Course::updateSky() 	8017ab14
Course::drawBase(unsigned long, unsigned long *, short, bool) 	8017ab78
J3DAnmObjMaterial::anmFrameProc() 	8017afc8
Course::drawSky(unsigned long) 	8017afd8
Course::getStartLine(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) 	8017b0a0
Course::getLightColor(JUtility::TColor *) 	8017b214
Course::getLightOffsetPosition(JGeometry::TVec3<float> *) 	8017b238
Course::getAmbientColor(JUtility::TColor *) 	8017b25c
Course::getCourseBGM() 	8017b280
Course::getFinalLapBGM() 	8017b3e0
Course::drawModelForDebug(unsigned long) 	8017b494
Course::Sector::Sector() 	8017b530
Course::Sector::setPointData(const CrsData::SCheckPoint *, const CrsData::SCheckPoint *, bool) 	8017b638
Course::Sector::setPrevSector(Course::Sector *) 	8017b960
Course::Sector::setNextSector(Course::Sector *) 	8017b980
Course::Sector::calcGeneration(Course::Sector *) 	8017b9a0
Course::Sector::calcUnitDist(const JGeometry::TVec3<float> &) 	8017b9c4
Course::Sector::isLRInside(const JGeometry::TVec3<float> &) 	8017ba8c
Course::Area::reset() 	8017bb48
Course::Area::check(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	8017bd4c
Course::Area::getRate(const JGeometry::TVec3<float> &) 	8017bea0
Course::Area::drawDebugModel(unsigned long) 	8017bfb8
Course::searchAppendGround(const JGeometry::TVec3<float> &) 	8017c1f8
__sinit_Course_cpp	8017c29c
CrsData::CrsData(CrsData::SColHeader *, CrsData::SOblHeader *) 	8017c3a8
CrsData::patchCamDataForStaffRoll(Language, VideoMode) 	8017c578
CrsData::searchMaterial(unsigned char, unsigned char) const 	8017c624
CrsData::getLightColor(JUtility::TColor *) const 	8017c6b0
CrsData::getLightOffsetPosition(JGeometry::TVec3<float> *) const 	8017c6f8
CrsData::getAmbientColor(JUtility::TColor *) const 	8017c734
CrsData::getShadowColor(JUtility::TColor *) const 	8017c780
CrsData::getFogType() const 	8017c7d0
CrsData::getFogStartZ() const 	8017c838
CrsData::getFogEndZ() const 	8017c850
CrsData::getFogColor(JUtility::TColor *) const 	8017c868
CrsData::getStartPoint(unsigned char) const 	8017c8b4
CrsData::Grid::searchGround(stPlaneParam *, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const CrsData::Ground *, const unsigned short *, const CrsData::SGround *, const JGeometry::TVec3<float> *, unsigned long, bool) 	8017c924
CrsData::Grid::checkPolygonBySphere(JGeometry::TVec3<float> *, float *, const CrsData *, const CrsData::SColInfoSphere &, float *) 	8017ca14
CrsData::Ground::checkPosition(stPlaneParam *, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> *) const 	8017cc78
CrsData::Ground::checkWallBySphere(JGeometry::TVec3<float> *, const CrsData::SColInfoSphere &, const JGeometry::TVec3<float> *, float *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) const 	8017d0e0
CrsData::Ground::getNearPoint(const CrsData::SColInfoSphere &, float, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) const 	8017d33c
CrsData::Grid::checkPolygonCoverWall(const JGeometry::TVec3<float> &, const CrsData::SColInfoSphere &, const CrsData::Ground *) 	8017d700
CrsData::Ground::checkFront(const CrsData *, const JGeometry::TVec3<float> &) const 	8017d904
CrsData::Ground::checkFaceSide(const CrsData *, const JGeometry::TVec3<float> &) const 	8017d9b4
CrsData::Ground::getPlaneY(const JGeometry::TVec3<float> &, Course *) const 	8017dc18
CrsData::Ground::checkPolygonTouchBySphere(const JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &, float, Course *) const 	8017dd78
CrsData::Ground::getTouchState(const CrsData::SColInfoSphere &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, JGeometry::TVec3<float> *, float *, float) const 	8017dea4
CrsData::Ground::getCenter(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> *, Course *) const 	8017e2c4
CrsData::getCheckPointTable() const 	8017e39c
CrsData::getCheckPointOffset(int) const 	8017e3b8
CrsData::SObject::isAvailableObject() 	8017e3ec
CrsData::SObject::isSameProcLevel(int) 	8017e4fc
CrsData::StartPoint::getLinePosition(JGeometry::TVec3<float> *) const 	8017e530
CrsData::StartPoint::getLinePosition	8017e564
CrsData::getStartCameraID() const 	8017e68c
CrsData::getStartLoserCameraID() const 	8017e6f8
CrsData::searchCameraID(unsigned long) const 	8017e720
CrsData::getCameraData(int) const 	8017e790
CrsData::Camera::getFrontDirection(JGeometry::TVec3<float> *) const 	8017e7c4
CrsData::getPathData(unsigned short) const 	8017e848
CrsData::getPointData(unsigned short, unsigned short) const 	8017e874
CrsData::getMGParam(int) const 	8017e8d0
CrsData::getLightParam(short) const 	8017e908
__sinit_CrsData_cpp	8017e93c
CrsGround::CrsGround(Course *) 	8017ea48
CrsGround::reset() 	8017ea84
CrsGround::search(const JGeometry::TVec3<float> &) 	8017eb2c
CrsGround::search(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8017eb5c
CrsGround::search(GeographyObj *, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8017eb8c
CrsGround::searchBase(GeographyObj *, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, unsigned long) 	8017ebb0
ExGeographyObj::Search(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8017f1f8
CrsGround::search(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, float, bool) 	8017f1fc
ExGeographyObj::Search_Wall(const JGeometry::TVec3<float> &, float) 	8017f79c
CrsGround::roundDepth(const JGeometry::TVec3<float> &) 	8017f7a0
CrsGround::checkGridBySphere(float *, const CrsData::SColInfoSphere &, unsigned long, float, float, float) 	8017f8f4
ExGeographyObj::getMaxHeight() const 	8017fb2c
CrsGround::checkPolygonCover(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, float, const CrsData::Ground *, float *) 	8017fb34
CrsGround::checkPolygonCoverMain(const JGeometry::TVec3<float> &, const CrsData::SColInfoSphere &, unsigned long, float, float, float, const CrsData::Ground *) 	8017fde0
CrsData::getGridTable() const 	801801b4
Course::getCrsData() const 	801801c0
CrsGround::isInsideGrid(const JGeometry::TVec3<float> &, float, float, float, float) 	801801c8
CrsGround::searchGridIndex(int *, int *, Course *, const JGeometry::TVec3<float> &, float, float, float, float, int, int) 	80180214
CrsGround::getHeight() const 	80180370
CrsGround::getNormal(JGeometry::TVec3<float> *) const 	80180378
CrsGround::getCameraCode() const 	80180394
CrsGround::isItemInvalGround() const 	801803c8
CrsGround::getStaggerCode() const 	80180408
CrsGround::getSpiralCode() const 	8018045c
CrsGround::getSplashHeight() 	8018048c
CrsGround::getSplashID() 	8018052c
CrsGround::getJugemPoint() 	801805b8
CrsGround::getCannonPoint() 	80180674
CrsGround::getPipePoint() 	801806b8
CrsGround::getGeoCannon() 	801806fc
CrsGround::getWaterHeight() 	80180748
CrsGround::isShaking() const 	8018078c
CrsGround::getWallNormal(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) 	801807d4
CrsGround::addPullerVelocity() 	80180dc0
__sinit_CrsGround_cpp	80180e2c
ExMdlDataMgr::ExMdlDataMgr(bool) 	80180f38
ExMdlDataMgr::~ExMdlDataMgr() 	80180f90
ExModel::ExModel(unsigned short) 	80181008
ExModel::~ExModel() 	801810dc
ExModel::setModelData(J3DModelData *) 	8018113c
ExModel::setModelData(unsigned short, J3DModelData *) 	80181164
ExModel::patchModelData(J3DModelData *) 	80181184
ExModel::setLODBias(float) 	80181228
ExModel::setLODBias(J3DModelData *, float) 	80181294
ExModel::disableTexLOD(J3DModelData *) 	801812f0
ExModel::setFogInfo(J3DModelData *, unsigned char, float, float, float, float, JUtility::TColor *) 	80181334
ExModel::reverseCullMode(J3DModelData *) 	80181404
ExModel::setLightMask(J3DModelData *, _GXLightID) 	801814b4
ExModel::setTevColor(unsigned long, const J3DGXColorS10 &) 	80181578
ExModel::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80181604
ExModel::createDifferedModel(JKRSolidHeap *, unsigned long, unsigned long, bool) 	8018173c
ExModel::makeSharedDL() 	801818d0
ExModel::lock() 	80181958
ExModel::setShapePktControl(unsigned short) 	801819b4
ExModel::isAllShapePacketHidding(unsigned short, unsigned long) 	80181a58
ExModel::calc() 	80181ad0
ExModel::calc(unsigned short) 	80181b00
ExModel::update(unsigned short) 	80181c18
ExModel::setCurrentViewNo(unsigned long) 	80181e48
ExModel::calcBBoardMtx(float (*) [4], float (*) [4]) 	80181ee4
ExModel::simpleDraw(unsigned long, float (*) [4], unsigned long) 	80182194
ExModel::show() 	80182630
ExModel::hide() 	801826c4
ExModel::clipAll(unsigned long, bool) 	80182760
ExModel::clipBySphere(unsigned long, J3DUClipper *, const float (*) [4], float) 	801827d8
ExModel::clipJoint(unsigned long, unsigned short, bool) 	801829a0
ExModel::setBaseTRMtx(float (*) [4]) 	80182aac
ExModel::setBaseScale(JGeometry::TVec3<float> &) 	80182b34
ExModel::tstDiffTexMtxMode() 	80182bac
ExModel::setEffectMtx(float (*) [4], unsigned long) 	80182bd0
ExModel::viewCalc(unsigned long) 	80182cfc
HioNode::HioNode(const char *, JORReflexible *, unsigned long, unsigned long) 	80182d00
HioNode::~HioNode() 	80182d74
KartLoader::KartLoader(int, const KartInfo *, unsigned short, bool, bool) 	80182e1c
KartLoader::reset() 	80183048
KartLoader::load() 	80183098
KartLoader::loadTevAnm(int) 	80183594
KartLoader::createMaterialAnmInUpdateMaterial(J3DModelData *, J3DAnmTevRegKey *) 	80183810
KartLoader::createMaterialAnm(J3DMaterial *) 	801838dc
KartLoader::entryTevRegAnimator(int) 	80183a04
KartLoader::removeTevRegAnimator(int) 	80183b7c
KartLoader::createModel(JKRSolidHeap *, unsigned long) 	80183cf4
KartLoader::isCommonWheelModelData() 	80183d80
ViewCtrlModel::viewCalc(unsigned long) 	80183da8
__sinit_KartLoader_cpp	80183df4
KartInfo::KartInfo() 	80183f00
KartInfo::KartCharacter::~KartCharacter() 	80183f54
KartInfo::KartCharacter::KartCharacter() 	80183f90
KartInfo::reset() 	80183fa0
KartInfo::~KartInfo() 	80183fd4
KartInfo::setDriver(int, ECharID, KartGamePad *) 	80184030
KartInfo::getCharDB(ECharID) 	8018408c
KartInfo::getKartDB(EKartID) 	8018415c
KartInfo::getKartWeight(EKartID) 	80184234
KartInfo::getDefaultDriver(EKartID) 	80184258
KartInfo::getDefaultPartner(ECharID) 	8018427c
KartInfo::getDriverWeight(ECharID) 	801842a0
KartInfo::getDefaultKartID(ECharID) 	801842c4
KartInfo::getPartnerKartID(ECharID) 	801842e8
KartInfo::isDefaultCharCombi() 	80184314
KartInfo::getYoungestPad() 	8018435c
KartInfo::KartCharacter::setPad(KartGamePad *) 	801843f4
KartInfo::KartCharacter::isAvailable() const 	801843fc
KartInfo::KartCharacter::convPlayerKind(KartGamePad *) 	80184420
__sinit_KartInfo_cpp	8018448c
KartChecker::KartChecker(int, KartInfo *, int, int) 	80184598
RaceTime::RaceTime() 	80184734
KartChecker::reset() 	80184744
KartChecker::clrCheckPointIndex() 	80184890
KartChecker::setPlayerKartColor(KartInfo *) 	80184928
KartChecker::createGamePad(KartInfo *) 	801849fc
KartChecker::searchCurrentSector(float *, const JGeometry::TVec3<float> &, Course::Sector *, int) 	80184aa0
KartChecker::checkKart() 	80184e8c
KartChecker::checkKartLap() 	80184fac
KartChecker::getBestLapTime() 	801852ec
KartChecker::checkLap(bool) 	80185338
KartChecker::setLapTime() 	8018570c
KartChecker::setForceGoal() 	80185928
KartChecker::setPass(int) 	80185ab4
KartChecker::isPassAll(int) 	80185b64
KartChecker::incTime() 	80185bd4
KartChecker::isReverse() 	80185c2c
KartChecker::isFinalLapRenewal() const 	80185dc0
KartChecker::isCurrentLapTimeRenewal() 	80185df0
KartChecker::isBestLapTimeRenewal() 	80185e44
KartChecker::isBestTotalTimeRenewal(int) 	80185e98
KartChecker::incBalloon() 	80185ecc
KartChecker::decBalloon() 	80185f10
KartChecker::setBombEvent(KartChecker::EBombEvent, ItemObj *) 	80185fd0
KartChecker::getRobberyItemNumber() 	80186324
KartChecker::releaseRabbitMark() 	80186380
KartChecker::isRabbit() const 	80186400
KartChecker::calcRabbitTime() 	8018643c
LapChecker::LapChecker() 	80186574
LapChecker::reset() 	801865a4
LapChecker::start(Course::Sector *) 	801865bc
LapChecker::calc(const JGeometry::TVec3<float> &) 	801865c4
KartGamePad::~KartGamePad() 	801866c0
__sinit_KartChecker_cpp	80186718
RaceMgr::RaceMgr(RaceInfo *) 	80186824
RaceMgr::updateBestTime() 	801871e0
RaceMgr::setRandomSeed() 	8018733c
RaceMgr::editRaceInfoForDebug() 	8018739c
RaceMgr::createConsole() 	801873f0
RaceMgr::resetConsole() 	801874b4
RaceMgr::hideConsole(unsigned long) 	8018751c
RaceMgr::createModel() 	80187554
RaceMgr::createKartModel() 	80187614
RaceMgr::createCourseModel() 	801876f0
RaceMgr::createObjectModel() 	80187760
RaceMgr::createItemModel() 	801877d0
RaceMgr::createEffectModel() 	80187840
RaceMgr::createLight() 	801878c4
RaceMgr::resetRace() 	80187ae8
RaceMgr::resetRaceForResetEvent() 	80187b70
RaceMgr::resetRaceForRestartEvent() 	80187ccc
RaceMgr::resetRaceForReplayEvent() 	80187e4c
RaceMgr::resetRaceCommon() 	80187e5c
RaceMgr::getCurrentConsoleNumber() 	80188090
RaceMgr::drawRace() 	801880d0
RaceMgr::checkKart() 	80188198
RaceMgr::checkRank() 	80188344
RaceMgr::checkRankForBalloonBattle() 	801883f0
RaceMgr::checkRankForRobberyBattle() 	801884d8
RaceMgr::checkRankForBombBattle() 	801885b8
RaceMgr::checkRankForEscapeBattle() 	801886cc
RaceMgr::checkRankForAwardDemo() 	801887a8
RaceMgr::checkRankForRace() 	801887e0
RaceMgr::setRaceResult() 	801888e4
RaceMgr::calcRace() 	8018899c
RaceMgr::frameWork() 	80188a54
RaceMgr::updateRace() 	80188b44
RaceMgr::~RaceMgr() 	80188f80
RaceMgr::isRaceModeMiniGame() 	8018903c
RaceMgr::getRacePhase() 	80189060
RaceMgr::getMiniGameTime() 	8018906c
RaceMgr::searchNRankKart(int) 	80189078
RaceMgr::isAbleStart() const 	801890c8
RaceMgr::setJugemZClr(unsigned long, bool) 	80189108
RaceMgr::getStartPoint(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, int) 	8018913c
RaceMgr::getStartJugemOffsetY(int) 	80189518
RaceMgr::getProcLevel() 	8018959c
RaceMgr::isItemBoxValid() 	801895c4
RaceMgr::beginProcTime(short) 	80189610
RaceMgr::endProcTime(short) 	80189614
RaceMgr::isJugemCountStart() 	80189618
RaceMgr::isKartGoal(int) 	80189684
RaceMgr::getGoalKartNumber() 	80189698
RaceMgr::getTotalLapNumberForDisplay() const 	801896dc
RaceMgr::Console::Console() 	801896e4
RaceMgr::Console::changeTargetNo(int, bool) 	8018970c
RaceMgr::robRivalOfBalloon(int, int) 	80189784
RaceMgr::robRivalOfRabbitMark(int, int) 	80189824
__sinit_RaceMgr_cpp	80189894
SysDebug::createManager() 	801899a0
SysDebug::SysDebug() 	801899e8
SysDebug::setHeapGroup(const char *, JKRHeap *) 	80189bb0
SysDebug::setDefaultHeapGroup(JKRHeap *) 	80189bb4
SysDebug::clrAllUserTimeLabel() 	80189bb8
SysDebug::beginDebugHeap() 	80189bdc
SysDebug::endDebugHeap() 	80189c24
SysDebug::createHeapInfo(JKRHeap *, char *) 	80189c64
SysDebug::destroyHeapInfo(JKRHeap *) 	80189c70
SysDebug::appendPage(SysDbUsrPage *) 	80189c74
SysDbUsrPage::SysDbUsrPage() 	80189ca0
SysDbUsrPage::~SysDbUsrPage() 	80189ce8
CrsArea::CrsArea() 	80189d68
CrsArea::reset() 	80189d98
CrsArea::search(unsigned char, const JGeometry::TVec3<float> &) 	80189db8
CrsArea::getCameraID() const 	80189ee4
CrsArea::getRoofPosition(JGeometry::TVec3<float> *) 	80189f0c
CrsArea::getEchoRate() 	80189fe0
CrsArea::getLightParamID() 	8018a000
CrsArea::getShadowID() const 	8018a01c
__sinit_CrsArea_cpp	8018a038
LightObj::LightObj(const char *, unsigned long) 	8018a144
LightObj::~LightObj() 	8018a1a4
LightObj::init(const char *, unsigned long) 	8018a228
LtObjDiffuse::setGXObj() 	8018a240
LtObjDiffuse::draw() 	8018a2c4
LtObjDiffuse::load(_GXLightID) 	8018a2f4
LtObjAmbient::draw() 	8018a318
LightMgr::createManager() 	8018a368
LightMgr::appendLight(LightObj *) 	8018a3e0
LightMgr::removeLight(LightObj *) 	8018a408
LightMgr::draw() 	8018a430
LightObj::draw() 	8018a4bc
LightMgr::calc() 	8018a4c0
LightObj::setGXObj() 	8018a520
LightObj::calc() 	8018a524
LightMgr::searchLight(unsigned long) 	8018a528
LightMgr::~LightMgr() 	8018a568
LtObjAmbient::~LtObjAmbient() 	8018a628
LtObjAmbient::getColor(JUtility::TColor *) const 	8018a6c0
LightObj::getEffectMtx() 	8018a6f4
LtObjDiffuse::getColor(JUtility::TColor *) const 	8018a6fc
LtObjDiffuse::~LtObjDiffuse() 	8018a730
LightObj::getColor(JUtility::TColor *) const 	8018a7c8
__sinit_LightMgr_cpp	8018a7cc
GeoStartLine::GeoStartLine() 	8018a8d8
GeographyObj::~GeographyObj() 	8018a938
GeoStartLine::reset() 	8018a9a8
GeoStartLine::createColMode	8018ad48
GeoStartLine::getBmdFileName() 	8018ad4c
GeoStartLine::calc() 	8018ad74
GeoStartLine::~GeoStartLine() 	8018ad78
GeographyObj::loadmodel(J3DModelData *) 	8018adf8
GeographyObj::loadAnimation() 	8018ae44
GeographyObj::getShadowKind() const 	8018ae48
GeographyObj::createModel(JKRSolidHeap *, unsigned long) 	8018ae50
GeographyObj::configAnimationMode() 	8018ae8c
GeographyObj::initByKind() 	8018ae90
GeographyObj::getMotorType() const 	8018ae94
GeographyObj::getShadowBmdFileName() 	8018ae9c
GeographyObj::getJ3DModelDataTevStageNum() const 	8018aea4
GeographyObj::getAnmTbl() 	8018aeac
GeographyObj::getSizeAnmTbl() 	8018aeb4
GeographyObj::getSupervisor() 	8018aebc
GeographyObj::makeSharedDL() 	8018aec4
GeographyObj::initClassCreateNum() 	8018aef4
__sinit_GeoStartLine_cpp	8018aef8
CLPoint::CLPoint() 	8018b004
CLPoint::setPrevPoint(CLPoint *) 	8018b038
CLPoint::setNextPoint(CLPoint *) 	8018b078
CLPoint::getPrevPointNumber() 	8018b0b8
CLPoint::getNextPointNumber() 	8018b0ec
CLPoint::getBrosPointNumber() 	8018b120
CLPoint::getBrosPoint(int) 	8018b1d4
RaceInfo::reset() 	8018b298
RaceInfo::setConsoleTarget(int, int, bool) 	8018b3d8
RaceInfo::settingForWaitDemo(bool) 	8018b3f0
RaceInfo::settingForStaffRoll(bool) 	8018b614
RaceInfo::setRace(ERaceMode, int, int, int, int) 	8018b708
RaceInfo::setKart(int, EKartID, ECharID, KartGamePad *, ECharID, KartGamePad *) 	8018b794
RaceInfo::setRaceLevel(ERaceLevel) 	8018b824
RaceInfo::shuffleRandomSeed() 	8018b848
RaceInfo::shuffleStartNo() 	8018b89c
RaceInfo::hideConsole(unsigned long) 	8018b93c
__sinit_RaceInfo_cpp	8018b954
RaceInfo::~RaceInfo() 	8018bae0
RaceSceneLight::RaceSceneLight(const char *, unsigned long, const JUtility::TColor &, const JGeometry::TVec3<float> &) 	8018bb3c
RaceSceneLight::calc() 	8018bc6c
RaceKartLight::RaceKartLight(RaceSceneLight *, int) 	8018c130
RaceKartLight::calc() 	8018c320
RaceKartLight::draw() 	8018cab4
RaceBalloonLight::RaceBalloonLight(unsigned long) 	8018caf4
RaceBalloonLight::calc() 	8018cbf4
RaceCupLight::RaceCupLight(RaceSceneLight *) 	8018d0b8
RaceCupLight::calc() 	8018d204
RaceCupLight::draw() 	8018d230
MenuSceneLight::createAndAppend(JKRHeap *, float (*) [4]) 	8018d270
MenuSceneLight::calc() 	8018d3ac
MenuSubLight::createAndAppend(JKRHeap *, int, MenuSceneLight *, unsigned char) 	8018d82c
MenuSubLight::MenuSubLight(int, MenuSceneLight *, unsigned char) 	8018d8ac
MenuSceneLight::getColor(JUtility::TColor *) const 	8018d9a4
MenuSubLight::~MenuSubLight() 	8018d9d8
MenuSubLight::calc() 	8018da54
MenuAmbient::createAndAppend(JKRHeap *, JUtility::TColor) 	8018df4c
MenuAmbient::MenuAmbient(JUtility::TColor) 	8018dfc0
MenuAmbient::~MenuAmbient() 	8018e050
MenuSceneLight::~MenuSceneLight() 	8018e0c0
RaceCupLight::~RaceCupLight() 	8018e130
RaceBalloonLight::~RaceBalloonLight() 	8018e1c0
RaceBalloonLight::getEffectMtx() 	8018e228
RaceKartLight::~RaceKartLight() 	8018e230
RaceKartLight::getEffectMtx() 	8018e2c0
RaceSceneLight::~RaceSceneLight() 	8018e2c8
RaceSceneLight::getEffectMtx() 	8018e330
__sinit_RaceLight_cpp	8018e338
ShadowGeoDrawBuffer::drawIn(unsigned long) 	8018e444
ShadowGeoDrawBuffer::update() 	8018e468
ShadowGeoDrawBuffer::viewCalc(unsigned long) 	8018e4a8
GeoDrawBuffer::drawIn(unsigned long) 	8018e4cc
GeoDrawBuffer::update() 	8018e4f0
GeoDrawBuffer::viewCalc(unsigned long) 	8018e530
JugemDrawBuffer::drawIn(unsigned long) 	8018e554
JugemDrawBuffer::update() 	8018e5f4
JugemDrawBuffer::viewCalc(unsigned long) 	8018e634
ItemDrawBuffer::drawIn(unsigned long) 	8018e658
ItemDrawBuffer::update() 	8018e688
ItemDrawBuffer::viewCalc(unsigned long) 	8018e6ec
EffectDrawBuffer::drawIn(unsigned long) 	8018e71c
EffectDrawBuffer::update() 	8018e758
EffectDrawBuffer::viewCalc(unsigned long) 	8018e788
FeelDrawBuffer::drawIn(unsigned long) 	8018e7c4
FeelDrawBuffer::update() 	8018e7f8
FeelDrawBuffer::viewCalc(unsigned long) 	8018e838
OsageDrawBuffer::drawIn(unsigned long) 	8018e83c
OsageDrawBuffer::update() 	8018e8b4
OsageDrawBuffer::viewCalc(unsigned long) 	8018e93c
__sinit_RaceDrawBuffer_cpp	8018e940
KartDrawer::DriverDB::drawIn(unsigned long) 	8018ea4c
KartDrawer::DriverDB::update() 	8018eb1c
KartDrawer::KartDrawer() 	8018ebc4
KartDrawer::reset() 	8018edf4
KartDrawer::create(int, int, unsigned short, EGhostKind) 	8018ee98
KartDrawer::DriverDB::~DriverDB() 	8018f150
KartDrawer::DriverDB::DriverDB() 	8018f1a8
KartDrawer::setAnimation() 	8018f1f4
KartDrawer::resetAnimation() 	8018f29c
KartDrawer::setTevAnm(int) 	8018f2d0
KartDrawer::attach(int) 	8018f3a0
KartDrawer::setAttribute(J3DAnmAttr) 	8018f52c
KartDrawer::resetFrame() 	8018f570
KartDrawer::setRate(float) 	8018f6c0
KartDrawer::setShadowInfo(const CrsArea &) 	8018f704
KartDrawer::drawKart(unsigned long, KartDrawer::EDrawStage) 	8018f744
KartDrawer::drawDriver(unsigned long, KartDrawer::EDrawStage) 	8018f918
KartDrawer::update() 	8018fad0
KartDrawer::setLODLevel(unsigned long, unsigned short) 	8018fd70
KartDrawer::playTevAnm(int) 	8018fdac
KartDrawer::stopTevAnm() 	8018fdcc
__sinit_KartDrawer_cpp	8018fdf0
TexLODControl::TexLODControl(int) 	8018fefc
TexLODControl::~TexLODControl() 	8018ff4c
TexLODControl::getLODBias(TexLODControl::ELODBiasID) 	8018ffac
__sinit_TexLODControl_cpp	80190028
ShapePktControl::ShapePktControl() 	80190134
ShapePktControl::ctrlPacket(unsigned long) 	80190154
SimpleDrawer::SimpleDrawer() 	80190190
SimpleDrawer::drawInit(ExModel *) 	801901a8
SimpleDrawer::drawInit(J3DModelData *) 	801901d0
SimpleDrawer::loadPreDrawSetting() 	80190238
JugemPoint::JugemPoint() 	80190324
GeoObjSupervisor::~GeoObjSupervisor() 	80190334
GeoCarSupervisor::~GeoCarSupervisor() 	801903ac
GeoCarSupervisor::reset() 	80190468
GeoCarSupervisor::calc() 	8019046c
GeoCar::isBlast() 	801906f0
GeoCarSupervisor::getCarNumber() 	801906f8
GeoCarSupervisor::hideAllCar() 	80190718
GeoCar::GeoCar(unsigned long, bool) 	80190740
GeoCar::GeoCar(const CrsData::SObject &) 	801907c4
GeoCar::init(bool) 	80190844
GeoCar::reset() 	80190b20
GeoCar::setTargetPoint(unsigned short) 	80190ecc
GeoCar::resetDrivePower() 	801911b8
GeoCar::calcFrontAndBackPosition() 	801911e8
GeoCar::createModel(JKRSolidHeap *, unsigned long) 	80191288
GeoCar::calc() 	801912b8
GeoCar::setRMtx() 	80191534
GeoCar::setTevColor() 	80191580
GeoCar::recvStateRequest() 	801915ac
GeoCar::checkKartCollision() 	801915ec
GeoCar::getVibrationLimitSpeed() 	801916a0
GeoCar::isHitVibrationOn() 	801916a8
GeoCar::hitKart(int) 	801916b0
GeoCar::getSoundID() const 	80191710
GeoCar::setCrushSE(unsigned long) 	8019171c
GeoCar::checkItemCollision() 	80191774
GeoCar::hitItemYoshiEgg() 	80191858
GeoCar::hitItemRTurtle() 	8019185c
GeoCar::hitItemGTurtle() 	80191860
GeoCar::hitItemBomb() 	80191864
GeoCar::hitItemFireBall() 	8019188c
GeoCar::hitItemWanWan() 	80191890
GeoCar::hitItemGTurtleBig() 	801918b8
GeoCar::InitExec() 	801918e0
GeoCar::MoveExec() 	8019194c
GeoCar::setAllObjectCollision(bool) 	801919b8
GeoCar::getPathID() 	801919f0
GeoCar::getTireAnmRate() 	80191a0c
GeoCar::getTireAnmRate(float) 	80191a44
GeoCar::initFuncParking() 	80191a58
GeoCar::doFuncParking() 	80191a5c
GeoCar::initFuncMove() 	80191a60
GeoCar::doFuncMove() 	80191b2c
GeoCar::checkTargetPoint() 	80192374
GeoCar::calcNewPose(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) 	801924f0
GeoCar::initFuncDamage() 	80192b74
GeoCar::doFuncDamage() 	80192c28
GeoCar::initFuncRecover() 	801930b0
GeoCar::doFuncRecover() 	80193150
GeoCar::initFuncDeath() 	801931c4
GeoCar::initCallBackDeath() 	801931f0
GeoCar::doFuncDeath() 	801931f4
GeoCar::doCallBackDeath() 	80193220
GeoCar::initFuncWait() 	80193224
GeoCar::doFuncWait() 	80193228
GeoCar::~GeoCar() 	80193278
GeoCar::getSoundCarType() const 	80193324
GeoCar::getSupervisor() 	8019332c
GeoCar::initClassCreateNum() 	80193334
GeoObjSupervisor::load() 	80193340
GeoObjSupervisor::thunderDownAll() 	80193344
__sinit_GeoCar_cpp	80193348
GeoCarSupervisor::@36@__dt() 	801935d0
GeoCar::@336@InitExec() 	801935d8
GeoCar::@336@MoveExec() 	801935e0
GeoCar::@336@__dt() 	801935e8
GeoBus::GeoBus(const CrsData::SObject &) 	801935f0
GeoBus::reset() 	801938a4
GeoBus::createModel(JKRSolidHeap *, unsigned long) 	80193950
GeoBus::loadAnimation() 	801939b0
GeoBus::createColModel(J3DModelData *) 	80193a14
GeoBus::getTirePosOffset(int) 	80193b10
GeoBus::simpleDraw(unsigned long) 	80193b24
GeoBus::calc() 	80193b8c
GeoBus::~GeoBus() 	80193be4
GeoBus::getBmdFileName() 	80193d24
GeoBus::getMotorType() const 	80193d30
__sinit_GeoBus_cpp	80193d38
GeoBus::@336@__dt() 	80193e44
GeoTruck::GeoTruck(const CrsData::SObject &) 	80193e4c
GeoTruck::reset() 	80194100
GeoTruck::createModel(JKRSolidHeap *, unsigned long) 	801941ac
GeoTruck::loadAnimation() 	8019420c
GeoTruck::createColModel(J3DModelData *) 	80194270
GeoTruck::getTirePosOffset(int) 	80194334
GeoTruck::simpleDraw(unsigned long) 	80194348
GeoTruck::calc() 	801943b0
GeoTruck::~GeoTruck() 	80194408
GeoTruck::getMotorType() const 	80194548
GeoTruck::getBmdFileName() 	80194550
GeoTruck::getSoundCarType() const 	8019455c
__sinit_GeoTruck_cpp	80194564
GeoTruck::@336@__dt() 	80194670
GeoSignalSupervisor::~GeoSignalSupervisor() 	80194678
GeoSignalSupervisor::reset() 	80194734
GeoSignalSupervisor::calc() 	80194738
GeoSignal::GeoSignal(const CrsData::SObject &) 	8019473c
GeoSignal::reset() 	80194a24
GeoSignal::loadAnimation() 	80194ac0
GeoSignal::createColModel(J3DModelData *) 	80194b08
GeoSignal::createModel(JKRSolidHeap *, unsigned long) 	80194b30
GeoSignal::simpleDraw(unsigned long) 	80194b6c
GeoSignal::calc() 	80194bb8
GeoSignal::update() 	80194c38
GeoSignal::InitExec() 	80194c7c
GeoSignal::MoveExec() 	80194ce8
GeoSignal::initFuncWait() 	80194d54
GeoSignal::doFuncWait() 	80194d58
GeoSignal::~GeoSignal() 	80194d5c
GeoSignal::getBmdFileName() 	80194e44
GeoSignal::getSupervisor() 	80194e50
GeoSignal::initClassCreateNum() 	80194e58
__sinit_GeoSignal_cpp	80194e64
GeoSignalSupervisor::@36@__dt() 	80194fac
GeoSignal::@336@InitExec() 	80194fb4
GeoSignal::@336@MoveExec() 	80194fbc
GeoSignal::@336@__dt() 	80194fc4
GeoNormCar::GeoNormCar(const CrsData::SObject &) 	80194fcc
GeoNormCar::reset() 	80195280
GeoNormCar::createModel(JKRSolidHeap *, unsigned long) 	8019532c
GeoNormCar::createColModel(J3DModelData *) 	80195398
GeoNormCar::loadAnimation() 	80195450
GeoNormCar::simpleDraw(unsigned long) 	801954bc
GeoNormCar::calc() 	80195530
GeoNormCar::update() 	801955ac
GeoNormCar::getTirePosOffset(int) 	80195610
GeoNormCar::~GeoNormCar() 	80195624
GeoNormCar::getBmdFileName() 	80195764
GeoNormCar::getSoundCarType() const 	80195770
__sinit_GeoNormCar_cpp	80195778
GeoNormCar::@336@__dt() 	80195884
GeoCannonSupervisor::~GeoCannonSupervisor() 	8019588c
GeoCannonSupervisor::reset() 	80195948
GeoCannonSupervisor::calc() 	8019594c
GeoCannonSupervisor::searchCannon(long) 	80195950
GeoCannon::GeoCannon(const CrsData::SObject &) 	80195988
GeoCannon::reset() 	80195ae8
GeoCannon::resetAnimation() 	80195e94
GeoCannon::loadAnimation() 	80195ef8
GeoCannon::createModel(JKRSolidHeap *, unsigned long) 	80195f60
TAnmControlBase<J3DAnmObjTrans>::initAnm(unsigned char, ExModel *) 	801960ac
J3DAnmObjTrans::~J3DAnmObjTrans() 	80196180
J3DAnmObjTrans::J3DAnmObjTrans() 	801961f0
TAnmControlBase<J3DAnmObjTrans>::~TAnmControlBase() 	8019625c
GeoCannon::calc() 	801962d0
GeoCannon::update() 	80196350
GeoCannon::InitExec() 	80196448
GeoCannon::MoveExec() 	801964b4
GeoCannon::shot() 	80196520
GeoCannon::initFuncWait() 	801965f8
GeoCannon::doFuncWait() 	801965fc
TAnmControlBase<J3DAnmObjTrans>::resetAnm() 	80196600
AnmControlBase::changeAnm(unsigned char, bool) 	8019667c
AnmControlBase::changeMatAnm(unsigned char, bool) 	80196680
GeoCannon::~GeoCannon() 	80196684
GeoCannon::getBmdFileName() 	8019676c
GeoCannon::getSupervisor() 	80196778
GeoCannon::initClassCreateNum() 	80196780
TAnmControlBase<J3DAnmObjTrans>::resetMatAnm() 	8019678c
TAnmControlBase<J3DAnmObjTrans>::setAnmProc() 	801967d4
TAnmControlBase<J3DAnmObjTrans>::frameProc() 	80196810
__sinit_GeoCannon_cpp	80196854
GeoCannonSupervisor::@36@__dt() 	8019699c
GeoCannon::@336@InitExec() 	801969a4
GeoCannon::@336@MoveExec() 	801969ac
GeoCannon::@336@__dt() 	801969b4
GeoBombCar::GeoBombCar(const CrsData::SObject &) 	801969bc
GeoBombCar::reset() 	80196bfc
GeoBombCar::createModel(JKRSolidHeap *, unsigned long) 	80196c94
GeoBombCar::createColModel(J3DModelData *) 	80196cd0
GeoBombCar::getTirePosOffset(int) 	80196d18
GeoBombCar::loadAnimation() 	80196d2c
GeoBombCar::setCurrentViewNo(unsigned long) 	80196d74
GeoBombCar::update() 	80196dd4
GeoBombCar::simpleDraw(unsigned long) 	80196e18
GeoBombCar::calc() 	80196e6c
GeoBombCar::hitKart(int) 	80196f78
GeoBombCar::hitItemBomb() 	80196fc4
GeoBombCar::hitItemWanWan() 	80196ff8
GeoBombCar::hitItemGTurtleBig() 	80197020
GeoBombCar::hitItemGTurtle() 	80197054
GeoBombCar::hitItemRTurtle() 	80197088
GeoBombCar::hitItemFireBall() 	801970bc
GeoBombCar::hitItemYoshiEgg() 	801970f0
GeoBombCar::initCallBackDeath() 	80197124
GeoBombCar::doCallBackDeath() 	801971b8
GeoBombCar::~GeoBombCar() 	801972f4
GeoBombCar::getBmdFileName() 	801973f8
GeoBombCar::getSoundCarType() const 	80197404
GeoBombCar::isBlast() 	8019740c
__sinit_GeoBombCar_cpp	80197414
GeoBombCar::@336@__dt() 	80197520
GeoKinoCar::GeoKinoCar(const CrsData::SObject &) 	80197528
GeoKinoCar::reset() 	80197740
GeoKinoCar::createModel(JKRSolidHeap *, unsigned long) 	801977b0
GeoKinoCar::createColModel(J3DModelData *) 	801977ec
GeoKinoCar::loadAnimation() 	80197828
GeoKinoCar::getTirePosOffset(int) 	80197870
GeoKinoCar::calc() 	80197884
GeoKinoCar::simpleDraw(unsigned long) 	801978f0
GeoKinoCar::hitKart(int) 	80197944
GeoKinoCar::occurKinoko(const JGeometry::TVec3<float> &) 	80197a48
GeoKinoCar::hitItemGTurtle() 	80197c10
GeoKinoCar::hitItemGTurtleBig() 	80197e7c
GeoKinoCar::hitItemYoshiEgg() 	80198124
GeoKinoCar::hitItemRTurtle() 	80198390
GeoKinoCar::~GeoKinoCar() 	801985fc
GeoKinoCar::getBmdFileName() 	80198700
__sinit_GeoKinoCar_cpp	8019870c
GeoKinoCar::@336@~GeoKinoCar	80198818
GeoKuriCar::GeoKuriCar(const CrsData::SObject &) 	80198820
GeoKuriCar::reset() 	801989e4
GeoKuriCar::createColModel(J3DModelData *) 	80198a18
GeoKuriCar::getTirePosOffset(int) 	80198a54
GeoKuriCar::hitKart(int) 	80198a68
GeoKuriCar::initCallBackDeath() 	80198a9c
GeoKuriCar::doCallBackDeath() 	80198abc
GeoKuriCar::~GeoKuriCar() 	80198b4c
GeoKuriCar::getBmdFileName() 	80198c10
GeoKuriCar::getVibrationLimitSpeed() 	80198c1c
__sinit_GeoKuriCar_cpp	80198c24
GeoKuriCar::@336@~GeoKuriCar	80198d30
GeoItemCar::GeoItemCar(const CrsData::SObject &) 	80198d38
GeoItemCar::reset() 	80198f6c
GeoItemCar::loadAnimation() 	80199074
GeoItemCar::getBmdFileName() 	801990bc
GeoItemCar::getShadowBmdFileName() 	801990c8
GeoItemCar::createModel(JKRSolidHeap *, unsigned long) 	801990e8
GeoItemCar::createColModel(J3DModelData *) 	80199148
GeoItemCar::calc() 	80199184
GeoItemCar::setRMtx() 	80199284
GeoItemCar::update() 	801994c0
GeoItemCar::getTirePosOffset(int) 	80199504
GeoItemCar::hitKart(int) 	80199518
GeoItemCar::initCallBackDeath() 	80199588
GeoItemCar::doCallBackDeath() 	80199598
GeoItemCar::hitItemBoxProc(int, JPABaseEmitter **) 	80199604
GeoItemCar::~GeoItemCar() 	80199730
GeoItemCar::hitItemBomb() 	80199834
GeoItemCar::isHitVibrationOn() 	80199838
__sinit_GeoItemCar_cpp	80199840
GeoItemCar::@336@~GeoItemCar	8019994c
GeoHanaCar::GeoHanaCar(const CrsData::SObject &) 	80199954
GeoHanaCar::reset() 	80199b58
GeoHanaCar::createBody() 	80199bcc
GeoHanaCar::createModel(JKRSolidHeap *, unsigned long) 	80199c50
GeoHanaCar::loadAnimation() 	80199c54
GeoHanaCar::createColModel(J3DModelData *) 	80199c58
GeoHanaCar::simpleDraw(unsigned long) 	80199cb8
GeoHanaCar::calc() 	80199cf4
GeoHanaCar::checkRoof() 	80199d6c
GeoHanaCar::getTirePosOffset(int) 	80199e70
GeoHanaCar::~GeoHanaCar() 	80199e84
GeoHanaCar::getBmdFileName() 	80199f48
GeoHanaCar::getSoundCarType() const 	80199f54
GeoHanaCar::hitKart(int) 	80199f5c
GeoHanaCar::hitItemBomb() 	80199f60
GeoHanaCar::hitItemWanWan() 	80199f64
GeoHanaCar::hitItemGTurtleBig() 	80199f68
__sinit_GeoHanaCar_cpp	80199f6c
GeoHanaCar::@336@~GeoHanaCar	8019a078
GeoHanaBody::GeoHanaBody() 	8019a080
GeoHanaBody::reset() 	8019a154
GeoHanaBody::loadAnimation() 	8019a1d8
GeoHanaBody::createModel(JKRSolidHeap *, unsigned long) 	8019a220
GeoHanaBody::createColModel(J3DModelData *) 	8019a25c
GeoHanaBody::simpleDraw(unsigned long) 	8019a298
GeoHanaBody::initPos() 	8019a2ec
GeoHanaBody::calc() 	8019a43c
GeoHanaBody::move() 	8019a440
GeoHanaBody::getTirePosOffset(int) 	8019a740
GeoHanaBody::~GeoHanaBody() 	8019a754
GeoHanaBody::getBmdFileName() 	8019a858
GeoHanaBody::getPathID() 	8019a864
__sinit_GeoHanaBody_cpp	8019a894
GeoHanaBody::@336@~GeoHanaBody	8019a9a0
GeoCarShadow::GeoCarShadow() 	8019a9a8
GeoCarShadow::reset() 	8019aa18
GeoCarShadow::getBmdFileName() 	8019aa90
GeoCarShadow::setCarPose(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8019aab8
GeoBombShadow::GeoBombShadow() 	8019ac40
GeoCarShadow::~GeoCarShadow() 	8019acbc
GeoKinoShadow::GeoKinoShadow() 	8019ad3c
GeoHanaShadow::GeoHanaShadow() 	8019adb8
GeoHanaBodyShadow::GeoHanaBodyShadow() 	8019ae34
GeoHanaBodyShadow::~GeoHanaBodyShadow() 	8019aeb0
GeoHanaBodyShadow::getBmdFileName() 	8019af40
GeoCarShadow::calc() 	8019af4c
GeoHanaShadow::~GeoHanaShadow() 	8019af68
GeoHanaShadow::getBmdFileName() 	8019aff8
GeoKinoShadow::~GeoKinoShadow() 	8019b004
GeoKinoShadow::getBmdFileName() 	8019b094
GeoBombShadow::~GeoBombShadow() 	8019b0a0
GeoBombShadow::getBmdFileName() 	8019b130
__sinit_GeoCarShadow_cpp	8019b13c
GeoWaterSupervisor::~GeoWaterSupervisor() 	8019b248
GeoWaterSupervisor::reset() 	8019b304
GeoWaterSupervisor::calc() 	8019b308
GeoWaterSupervisor::searchWater(long) 	8019b30c
GeoWater::GeoWater(const CrsData::SObject &) 	8019b344
GeoWater::reset() 	8019b4bc
GeoWater::loadAnimation() 	8019b814
GeoWater::createModel(JKRSolidHeap *, unsigned long) 	8019b85c
GeoWater::simpleDraw(unsigned long) 	8019b898
GeoWater::update() 	8019b8e4
GeoWater::calc() 	8019b904
GeoWater::InitExec() 	8019b984
GeoWater::MoveExec() 	8019b9f0
GeoWater::getSurfaceHeight() 	8019ba5c
GeoWater::initFuncWait() 	8019ba64
GeoWater::doFuncWait() 	8019ba68
GeoWater::~GeoWater() 	8019bc68
GeoWater::getBmdFileName() 	8019bd50
GeoWater::getSupervisor() 	8019bd5c
GeoWater::initClassCreateNum() 	8019bd64
__sinit_GeoWater_cpp	8019bd70
GeoWaterSupervisor::@36@~GeoWaterSupervisor	8019beb8
GeoWater::@336@InitExec() 	8019bec0
GeoWater::@336@MoveExec() 	8019bec8
GeoWater::@336@~GeoWater	8019bed0
GeoItemGen::GeoItemGen(const CrsData::SObject &) 	8019bed8
GeoItemGen::reset() 	8019bf38
GeoItemGen::createColModel(J3DModelData *) 	8019c208
GeoItemGen::checkKartCollision() 	8019c244
GeoItemGen::calc() 	8019c68c
GeoItemGen::InitExec() 	8019c6d8
GeoItemGen::MoveExec() 	8019c744
GeoItemGen::initFuncWait() 	8019c7b0
GeoItemGen::doFuncWait() 	8019c7b4
GeoItemGen::~GeoItemGen() 	8019c7b8
GeographyObj::getBmdFileName() 	8019c850
__sinit_GeoItemGen_cpp	8019c858
GeoItemGen::@336@InitExec() 	8019c9a0
GeoItemGen::@336@MoveExec() 	8019c9a8
GeoItemGen::@336@~GeoItemGen	8019c9b0
GeoItemGen::GeoVisionSupervisor::~GeoVisionSupervisor	8019c9b8
GeoVisionSupervisor::reset() 	8019ca74
GeoVisionSupervisor::calc() 	8019ca78
GeoVisionSupervisor::capture() 	8019ca7c
GeoVision::GeoVision(const CrsData::SObject &) 	8019cb18
GeoVision::reset() 	8019cc5c
GeoVision::createModel(JKRSolidHeap *, unsigned long) 	8019ce58
GeoVision::calc() 	8019d0d0
GeoVision::InitExec() 	8019d148
GeoVision::MoveExec() 	8019d1b4
GeoVision::initFuncWait() 	8019d220
GeoVision::doFuncWait() 	8019d224
GeoVision::~GeoVision() 	8019d228
GeoVision::getBmdFileName() 	8019d2d4
GeoVision::getSupervisor() 	8019d2e0
GeoVision::initClassCreateNum() 	8019d2e8
__sinit_GeoVision_cpp	8019d2f4
GeoVisionSupervisor::@36@~GeoVisionSupervisor	8019d43c
GeoVision::@336@InitExec() 	8019d444
GeoVision::@336@MoveExec() 	8019d44c
GeoVision::@336@~GeoVision	8019d454
GeoSubWater::reset() 	8019d45c
GeoSubWater::createModel(JKRSolidHeap *, unsigned long) 	8019d4a8
GeoSubWater::setPosition(JGeometry::TVec3<float> &) 	8019d4ac
GeoWaterMiddleD::GeoWaterMiddleD() 	8019d4c8
GeoSubWater::~GeoSubWater() 	8019d540
GeoWaterMiddleD::reset() 	8019d5c0
GeoWaterMiddleD::loadAnimation() 	8019d60c
GeoWaterMiddleD::createModel(JKRSolidHeap *, unsigned long) 	8019d610
GeoWaterMiddleD::simpleDraw(unsigned long) 	8019d614
GeoWaterMiddleD::calc() 	8019d634
GeoWaterDown::GeoWaterDown() 	8019d638
GeoWaterDown::simpleDraw(unsigned long) 	8019d6b0
GeoWaterUp::GeoWaterUp() 	8019d6d0
GeoWaterUp::simpleDraw(unsigned long) 	8019d748
GeoWaterUp2::GeoWaterUp2() 	8019d768
GeoWaterUp2::reset() 	8019d824
GeoWaterUp2::loadAnimation() 	8019d8a0
GeoWaterUp2::createModel(JKRSolidHeap *, unsigned long) 	8019d8e8
GeoWaterUp2::simpleDraw(unsigned long) 	8019d924
GeoWaterUp2::calc() 	8019d970
GeoWaterUp2::~GeoWaterUp2() 	8019d994
GeoWaterUp2::getBmdFileName() 	8019da64
GeoWaterUp::~GeoWaterUp() 	8019da70
GeoWaterUp::getBmdFileName() 	8019db00
GeoSubWater::calc() 	8019db0c
GeoWaterDown::~GeoWaterDown() 	8019db10
GeoWaterDown::getBmdFileName() 	8019dba0
GeoWaterMiddleD::~GeoWaterMiddleD() 	8019dbac
GeoWaterMiddleD::getBmdFileName() 	8019dc3c
__sinit_GeoSubWater_cpp	8019dc48
RaceBGMPlayer::RaceBGMPlayer() 	8019dd54
RaceBGMPlayer::reset() 	8019dd84
RaceBGMPlayer::getCrsDemoBGMLabel() 	8019de0c
RaceBGMPlayer::calc() 	8019de54
RaceBGMPlayer::getGoalBGMLabel() 	8019e170
__sinit_RaceBGMPlayer_cpp	8019e2c0
RaceDirector::RaceDirector(bool, DemoTimeKeeper *, int) 	8019e3cc
DemoTimeKeeper::isStartFadeIn() 	8019e4f4
RaceDirector::reset() 	8019e4fc
RaceDirector::resetCommon() 	8019e54c
RaceDirector::calc() 	8019e5dc
RaceDirector::doCrsDemo() 	8019e6ec
RaceDirector::doNoCrsDemo() 	8019e788
RaceDirector::checkCrsDemoEvent() 	8019e7d8
RaceDirector::checkCrsDemoEventHanabi(short) 	8019e8b4
RaceDirector::doReset() 	8019e91c
RaceDirector::doWait() 	8019e928
RaceDirector::doSafety() 	8019e95c
RaceDirector::doRunning(bool) 	8019e9bc
RaceDirector::doEnding() 	8019ecf4
RaceDirector::setEndingPhaseZoomConsole() 	8019f174
RaceDirector::checkPauseChoice() 	8019f238
RaceDirector::isExitWaitDemo() 	8019f3e4
RaceDirector::setPhaseWait(ERacePhase, bool, bool, int) 	8019f448
RaceDirector::checkRaceEnd() 	8019f568
RaceDirector::checkRaceEndForRace() 	8019f61c
RaceDirector::checkRaceEndForBalloonBattle() 	8019f6f0
RaceDirector::checkRaceEndForBombBattle() 	8019f744
RaceDirector::checkRaceEndForEscapeBattle() 	8019f79c
RaceDirector::requestDemoCameraID() const 	8019f7e4
DemoTimeKeeper::requestDemoCameraID() const 	8019f828
RaceDirector::isPlayingDemoWinnerAnm() const 	8019f830
DemoTimeKeeper::isPlayingEndingWinAnm() const 	8019f874
RaceDirector::getDemoCameraTagName() const 	8019f87c
__sinit_RaceDirector_cpp	8019f894
RaceDrawer::RaceDrawer(unsigned short, bool) 	8019f9a0
KartDrawer::~KartDrawer() 	8019fdac
RaceDrawer::reset() 	8019ff4c
RaceDrawer::drawSceneFirstStage(unsigned long) 	801a0068
RaceDrawer::drawMidScene() 	801a0764
RaceDrawer::drawSceneSecondStage(unsigned long) 	801a0854
RaceDrawer::drawPreScene() 	801a0b9c
RaceDrawer::drawPostScene() 	801a0c40
RaceDrawer::drawGhost() 	801a0d74
RaceDrawer::showAllGhost() 	801a0efc
__sinit_RaceDrawer_cpp	801a0f14
RaceDrawer::RaceDrawer	801a103c
KartDrawer::~KartDrawer	801a10c8
RaceDrawer::reset	801a1308
RaceDrawer::drawSceneFirstStage	801a1350
RaceDrawer::drawMidScene	801a138c
RaceDrawer::drawSceneSecondStage	801a13d8
RaceDrawer::drawPreScene	801a1458
RaceDrawer::drawPostScene	801a1478
RaceDrawer::drawGhost	801a1538
RaceDrawer::showAllGhost	801a1544
__sinit_RaceDrawer_cpp	801a1650
GeoDkCloud::GeoDkCloud(const CrsData::SObject &) 	801a1698
GeoDkCloud::reset() 	801a1720
GeoDkCloud::loadAnimation() 	801a1788
GeoDkCloud::createModel(JKRSolidHeap *, unsigned long) 	801a1800
GeoDkCloud::simpleDraw(unsigned long) 	801a1830
GeoDkCloud::calc() 	801a1960
GeoDkCloud::update() 	801a19dc
GeoDkCloud::~GeoDkCloud() 	801a1a58
GeoDkCloud::getBmdFileName() 	801a1b14
__sinit_GeoDkCloud_cpp	801a1b18
KartMtxCalcAdditiveAnm::KartMtxCalcAdditiveAnm() 	801a1b1c
KartMtxCalcAdditiveAnm::reset() 	801a1b5c
KartMtxCalcBlendAnm::KartMtxCalcBlendAnm() 	801a1ca0
KartMtxCalcBlendAnm::reset() 	801a20c8
KartMtxCalcBlendAnm::setAnm(J3DAnmTransform *, J3DAnmTransform *, J3DAnmTransform *, J3DAnmTransform *) 	801a2150
KartMtxCalcBlendAnm::setAnmWeight(J3DAnmTransform *, float, J3DAnmTransform *, float, J3DAnmTransform *, float, J3DAnmTransform *, float) 	801a22e8
KartMtxCalcBlendAnm::~KartMtxCalcBlendAnm() 	801a2398
KartMtxCalcAdditiveAnm::~KartMtxCalcAdditiveAnm() 	801a24f0
GeoKuriboSupervisor::~GeoKuriboSupervisor() 	801a2518
GeoKuriboSupervisor::reset() 	801a254c
GeoKuriboSupervisor::calc() 	801a2604
GeoKuriboSupervisor::thunderDownAll() 	801a2664
GeoKuribo::GeoKuribo(const CrsData::SObject &) 	801a2718
GeoKuribo::reset() 	801a27ec
GeoKuribo::resetAnimation() 	801a29cc
GeoKuribo::resetWalkDirection(short) 	801a2a38
GeoKuribo::loadAnimation() 	801a2aa4
GeoKuribo::createModel(JKRSolidHeap *, unsigned long) 	801a2aa8
GeoKuribo::createColModel(J3DModelData *) 	801a2aac
GeoKuribo::doKartColCallBack(int) 	801a2ac0
GeoKuribo::changeStateCrush(int) 	801a33d8
GeoKuribo::thunderDown() 	801a3470
GeoKuribo::calc() 	801a3510
GeoKuribo::checkItemHitting() 	801a3564
GeoKuribo::occurKinoko(int) 	801a3678
GeoKuribo::InitExec() 	801a3724
GeoKuribo::MoveExec() 	801a3730
GeoKuribo::initFuncWait() 	801a373c
GeoKuribo::doFuncWait() 	801a3748
GeoKuribo::initFuncWalk() 	801a3920
GeoKuribo::doFuncWalk() 	801a3928
GeoKuribo::initFuncCrush() 	801a3930
GeoKuribo::doFuncCrush() 	801a3938
GeoKuribo::initFuncRecover() 	801a3940
GeoKuribo::doFuncRecover() 	801a39a0
GeoKuribo::~GeoKuribo() 	801a3ba8
GeoKuribo::getBmdFileName() 	801a3be4
GeoKuribo::getShadowBmdFileName() 	801a3cac
GeoKuribo::initClassCreateNum() 	801a3d18
__sinit_GeoKuribo_cpp	801a3d84
GeoKuriboSupervisor::@36@~GeoKuriboSupervisor	801a3d88
GeoKuribo::@336@InitExec() 	801a3d8c
GeoKuribo::@336@MoveExec() 	801a3e24
GeoKuribo::@336@~GeoKuribo	801a3f6c
GeoAirJet::GeoAirJet(const CrsData::SObject &) 	801a3f74
GeoAirJet::reset() 	801a3f7c
GeoAirJet::createColModel(J3DModelData *) 	801a3f84
GeoAirJet::calc() 	801a402c
GeoAirJet::InitExec() 	801a448c
GeoAirJet::MoveExec() 	801a44cc
GeoAirJet::initFuncWait() 	801a451c
GeoAirJet::doFuncWait() 	801a45c4
GeoAirJet::~GeoAirJet() 	801a461c
__sinit_GeoAirJet_cpp	801a4620
GeoAirJet::@336@InitExec() 	801a462c
GeoAirJet::@336@MoveExec() 	801a4680
GeoAirJet::@336@~GeoAirJet	801a46a0
BlurScreen::BlurScreen() 	801a46c4
BlurScreen::draw(const JUtility::TColor &, unsigned char, unsigned char, float, float) 	801a46e8
BlurScreen::captureScene() 	801a470c
BlurScreen::captureBlur() 	801a486c
GeoRabbitMarkSupervisor::~GeoRabbitMarkSupervisor() 	801a4964
GeoRabbitMarkSupervisor::reset() 	801a4bfc
GeoRabbitMarkSupervisor::calc() 	801a4c24
GeoRabbitMarkSupervisor::getRabbitKartNo() 	801a4c9c
GeoRabbitMarkSupervisor::release() 	801a4cf8
GeoRabbitMarkSupervisor::getMarkPosition(JGeometry::TVec3<float> *) 	801a4eb8
GeoRabbitMarkSupervisor::changeOwner(int) 	801a4eec
GeoRabbitMarkSupervisor::startWinnerEffect() 	801a4f1c
GeoRabbitMarkSupervisor::setWinnerPosition() 	801a505c
GeoRabbitMark::GeoRabbitMark(const CrsData::SObject &) 	801a50c8
GeoRabbitMark::reset() 	801a5134
GeoRabbitMark::resetPose(bool) 	801a5140
GeoRabbitMark::createColModel(J3DModelData *) 	801a56d0
GeoRabbitMark::doKartColCallBack(int) 	801a5738
GeoRabbitMark::equip(int) 	801a5b3c
GeoRabbitMark::calc() 	801a5e64
GeoRabbitMark::release() 	801a5ee0
GeoRabbitMark::startWinnerEffect() 	801a6310
GeoRabbitMark::setWinnerPosition() 	801a6350
GeoRabbitMark::InitExec() 	801a6404
GeoRabbitMark::MoveExec() 	801a649c
GeoRabbitMark::initFuncWait() 	801a64a4
GeoRabbitMark::doFuncWait() 	801a64b0
GeoRabbitMark::isRidingBossPakkun() 	801a6658
GeoRabbitMark::initFuncEquip() 	801a6660
GeoRabbitMark::doFuncEquip() 	801a6668
GeoRabbitMark::initFuncRelease() 	801a6670
GeoRabbitMark::doFuncRelease() 	801a6678
GeoRabbitMark::isResetGndAttr(CrsGround::EAttr) 	801a6728
GeoRabbitMark::setBoundSE() 	801a676c
GeoRabbitMark::~GeoRabbitMark() 	801a681c
GeoRabbitMark::getSupervisor() 	801a6890
GeoRabbitMark::initClassCreateNum() 	801a68ec
__sinit_GeoRabbitMark_cpp	801a6ac0
GeoRabbitMarkSupervisor::@36@~GeoRabbitMarkSupervisor	801a6ac4
GeoRabbitMark::@336@InitExec() 	801a6be0
GeoRabbitMark::@336@MoveExec() 	801a6c48
GeoRabbitMarkSupervisor::@36@__dt() 	801a6c4c
KartMtxPerspective(float (*) [4], float, float, float, float, bool) 	801a6d3c
DemoTimeKeeper::reset() 	801a6e24
DemoTimeKeeper::calc() 	801a6ea4
AwardDemoTimeKeeper::AwardDemoTimeKeeper() 	801a6f08
AwardDemoTimeKeeper::reset() 	801a6f0c
AwardDemoTimeKeeper::calc() 	801a6f50
RivalSpeedCtrl::set_speeddown() 	801a6f94
AwardDemoTimeKeeper::doOpening() 	801a7014
AwardDemoTimeKeeper::doPark() 	801a7084
AwardDemoTimeKeeper::doFront() 	801a7414
AwardDemoTimeKeeper::doEnding() 	801a744c
AwardDemoTimeKeeper::doNext() 	801a74dc
AwardDemoTimeKeeper::jumpEndingCut() 	801a7534
AwardDemoTimeKeeper::stopAllKart() 	801a7668
RivalSpeedCtrl::stop_immediately() 	801a7814
AwardDemoTimeKeeper::fadeOutSE() 	801a7988
AwardDemoTimeKeeper::requestDemoCameraID() const 	801a7b34
StaffRollTimeKeeper::StaffRollTimeKeeper() 	801a7ca8
StaffRollTimeKeeper::reset() 	801a7e1c
StaffRollTimeKeeper::calc() 	801a7f74
StaffRollTimeKeeper::jump() 	801a8120
StaffRollTimeKeeper::setLastBlanking(int) 	801a8294
StaffRollTimeKeeper::requestDemoCameraID() const 	801a83ec
StaffRollTimeKeeper::doOpening() 	801a8560
StaffRollTimeKeeper::doMarioTitle() 	801a86d4
StaffRollTimeKeeper::doExecProducer() 	801a882c
StaffRollTimeKeeper::doProducer() 	801a8a48
StaffRollTimeKeeper::doChiefDirector() 	801a8c64
StaffRollTimeKeeper::doDirector() 	801a8e90
StaffRollTimeKeeper::doProgramDirector() 	801a90ac
StaffRollTimeKeeper::doProgram() 	801a920c
StaffRollTimeKeeper::doDesignManager() 	801a949c
StaffRollTimeKeeper::doCourseDesign() 	801a94a4
StaffRollTimeKeeper::doGraphicDesign() 	801a94b4
StaffRollTimeKeeper::doScreenDesign() 	801a973c
StaffRollTimeKeeper::doMusic() 	801a9800
StaffRollTimeKeeper::doVoice() 	801a9a64
StaffRollTimeKeeper::doProgress() 	801a9ac4
StaffRollTimeKeeper::doDebugSupport() 	801a9b64
StaffRollTimeKeeper::doSpecial() 	801a9cb8
StaffRollTimeKeeper::doLocalization() 	801a9d2c
StaffRollTimeKeeper::doLast() 	801a9dac
StaffRollTimeKeeper::isStartFadeIn() 	801a9df0
StaffRollTimeKeeper::isPlayingEndingWinAnm() const 	801a9e5c
__sinit_DemoTimeKeeper_cpp	801a9ec8
GeoKinojii::GeoKinojii(const CrsData::SObject &) 	801a9ecc
GeoKinojii::reset() 	801aa134
GeoKinojii::resetAnimation() 	801aa208
GeoKinojii::loadAnimation() 	801aa214
GeoKinojii::createModel(JKRSolidHeap *, unsigned long) 	801aa220
GeoKinojii::setCurrentViewNo(unsigned long) 	801aa368
GeoKinojii::calc() 	801aa370
GeoKinojii::update() 	801aa378
GeoKinojii::InitExec() 	801aa380
GeoKinojii::MoveExec() 	801aa43c
GeoKinojii::initFuncWait() 	801aa440
GeoKinojii::doFuncWait() 	801aa444
GeoKinojii::~GeoKinojii() 	801aa480
GeoKinojii::getBmdFileName() 	801aa570
GeoKinojii::getJ3DModelDataTevStageNum() const 	801aa76c
__sinit_GeoKinojii_cpp	801aa7e4
GeoKinojii::@336@InitExec() 	801aa850
GeoKinojii::@336@MoveExec() 	801aa8bc
GeoKinojii::@336@~GeoKinojii	801aa8c4
GeoSplashSupervisor::~GeoSplashSupervisor() 	801aa8c8
GeoSplashSupervisor::reset() 	801aa8cc
GeoSplashSupervisor::calc() 	801aa978
GeoSplashSupervisor::search(unsigned char) 	801aa980
GeoSplash::GeoSplash(const CrsData::SObject &) 	801aa98c
GeoSplash::reset() 	801aaad4
GeoSplash::calc() 	801aaadc
GeoSplash::InitExec() 	801aaae4
GeoSplash::MoveExec() 	801aaaec
GeoSplash::getSurfaceHeight() 	801aaaf4
GeoSplash::initFuncWait() 	801aabb0
GeoSplash::doFuncWait() 	801aabb4
GeoSplash::~GeoSplash() 	801aace0
GeoSplash::getSupervisor() 	801aad74
GeoSplash::initClassCreateNum() 	801aaea0
__sinit_GeoSplash_cpp	801aaee4
GeoSplashSupervisor::@36@~GeoSplashSupervisor	801aaee8
GeoSplash::@336@InitExec() 	801aaeec
GeoSplash::@336@MoveExec() 	801aaf84
GeoSplash::@336@~GeoSplash	801aaf8c
GeoTideSensorSupervisor::~GeoTideSensorSupervisor() 	801ab098
GeoTideSensorSupervisor::reset() 	801ab0a0
GeoTideSensorSupervisor::calc() 	801ab13c
GeoTideSensorSupervisor::searchNearSensor(int, const JGeometry::TVec3<float> &, float) 	801ab148
GeoTideSensor::GeoTideSensor(const CrsData::SObject &) 	801ab1bc
GeoTideSensor::reset() 	801ab208
GeoTideSensor::createColModel(J3DModelData *) 	801ab4ec
GeoTideSensor::calc() 	801ab65c
GeoTideSensor::~GeoTideSensor() 	801ab6c0
GeoTideSensor::getSupervisor() 	801ab770
__sinit_GeoTideSensor_cpp	801ab8bc
GeoTideSensorSupervisor::@36@__dt() 	801ab8f8
GhostScreen::GhostScreen() 	801abd70
GhostScreen::reset() 	801abe2c
GhostScreen::captureScene() 	801abe30
GhostScreen::captureGhost() 	801abe34
GhostScreen::draw() 	801abe70
ShimmerScreen::ShimmerScreen(ResTIMG *) 	801ac03c
ShimmerScreen::calc() 	801ac080
ShimmerScreen::draw() 	801ac0a8
ShimmerScreen::drawInit() 	801ac174
ShimmerScreen::drawEnd() 	801ac234
ShimmerScreen::levelDraw(int) 	801ac2cc
GeoPullerSupervisor::~GeoPullerSupervisor() 	801ac2d4
GeoPullerSupervisor::reset() 	801ac3e0
GeoPullerSupervisor::calc() 	801ac3e8
GeoPullerSupervisor::search(unsigned long) 	801ac490
GeoPuller::GeoPuller(const CrsData::SObject &) 	801ac494
GeoPuller::reset() 	801ac498
GeoPuller::createColModel(J3DModelData *) 	801ac4bc
GeoPuller::calc() 	801ac63c
GeoPuller::getVelocity(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	801ac680
GeoPuller::~GeoPuller() 	801ac684
GeoPuller::getSupervisor() 	801ac78c
__sinit_GeoPuller_cpp	801ac7b0
GeoPullerSupervisor::@36@~GeoPullerSupervisor	801ac830
GeoShimmerSupervisor::~GeoShimmerSupervisor() 	801ac838
GeoShimmerSupervisor::reset() 	801ac944
GeoShimmerSupervisor::calc() 	801ac94c
GeoShimmerSupervisor::drawScreen() 	801aca08
GeoShimmer::GeoShimmer(const CrsData::SObject &) 	801aca0c
GeoShimmer::reset() 	801aca10
GeoShimmer::createColModel(J3DModelData *) 	801acc34
GeoShimmer::calc() 	801acc78
GeoShimmer::drawScreen() 	801acca0
GeoShimmer::~GeoShimmer() 	801acccc
GeoShimmer::getSupervisor() 	801acd64
__sinit_GeoShimmer_cpp	801acd6c
GeoShimmerSupervisor::@36@~GeoShimmerSupervisor	801ace78
GeoSoundGenSupervisor::~GeoSoundGenSupervisor() 	801ace80
GeoSoundGenSupervisor::reset() 	801acee4
GeoSoundGenSupervisor::calc() 	801ad124
GeoSoundGen::GeoSoundGen(const CrsData::SObject &) 	801ad334
GeoSoundGen::reset() 	801ad354
GeoSoundGen::createColModel(J3DModelData *) 	801ad358
GeoSoundGen::calc() 	801ad380
GeoSoundGen::~GeoSoundGen() 	801ad384
GeoSoundGen::getSupervisor() 	801ad3b0
__sinit_GeoSoundGen_cpp	801ad3b4
GeoSoundGenSupervisor::@36@~GeoSoundGenSupervisor	801ada7c
GeoShine::GeoShine() 	801adaa4
GeoShine::reset() 	801adb24
GeoShine::calcShadowModel() 	801adb30
GeoShine::getShadowBmdFileName() 	801adc58
GeoShine::loadAnimation() 	801adca8
GeoShine::createColModel(J3DModelData *) 	801add08
GeoShine::createModel(JKRSolidHeap *, unsigned long) 	801add0c
GeoShine::simpleDraw(unsigned long) 	801ade24
GeoShine::calc() 	801adf18
GeoShine::move() 	801adf5c
GeoShine::startFastRot() 	801adf8c
GeoShine::~GeoShine() 	801adfd0
GeoShine::getBmdFileName() 	801ae13c
__sinit_GeoShine_cpp	801ae178
DarkAnmMgr::DarkAnmMgr() 	801ae26c
DarkAnmMgr::~DarkAnmMgr() 	801ae670
DarkAnmMgr::reset() 	801ae978
DarkAnmPlayer::DarkAnmPlayer(ECharID, EGhostKind) 	801af274
DarkAnmPlayer::DarkAnmPlayer(EKartID, EGhostKind) 	801af718
DarkAnmPlayer::setKartColorData(EGhostKind, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *, KartTevColor *) 	801af738
DarkAnmPlayer::reset() 	801af7c0
DarkAnmPlayer::calc(const CrsArea &) 	801af844
DarkAnmPlayer::calc(int, float) 	801af848
DarkAnmPlayer::setTevColor(ExModel *) 	801af890
ObjDarkAnmPlayer::ObjDarkAnmPlayer(unsigned long) 	801af918
ItemDarkAnmPlayer::ItemDarkAnmPlayer(unsigned long) 	801af940
ItemDarkAnmPlayer::calc(const CrsArea &, float) 	801af9f4
__sinit_DarkAnmMgr_cpp	801afa18
MovieJugemActor::MovieJugemActor() 	801afaa0
GeographyObj::reset() 	801afb00
MovieJugemActor::setCurViewNo(unsigned long) 	801afb5c
MovieJugemActor::calc() 	801afcd0
TJugemHeadItem::calc() 	801afcf0
MovieJugemActor::update() 	801afd14
MovieJugemActor::viewCalc(unsigned long) 	801aff1c
MovieApp::getArchive(const char *) 	801aff78
MoviePlayer::create(JKRHeap *) 	801b0084
MoviePlayer::MoviePlayer(VideoMode, VideoFrameMode, JKRHeap *) 	801b00e0
MoviePlayer::~MoviePlayer() 	801b01d4
MoviePlayer::reset() 	801b024c
MoviePlayer::calc() 	801b0290
MoviePlayer::draw() 	801b02b0
MoviePlayer::drawDone() 	801b0314
MoviePlayer::quit() 	801b0334
MoviePlayer::play() 	801b0370
MoviePlayer::replay() 	801b03b0
MoviePlayer::pause() 	801b03dc
MoviePlayer::audioFadeOut(int) 	801b0408
MoviePlayer::getFrameNumber() 	801b0438
THPGXRestore	801b0458
THPGXYuv2RgbSetup	801b0570
THPGXYuv2RgbDraw	801b0a28
MVGrafPort::setPort() 	801b0c04
MVCamera::MVCamera(MdlViewer *) 	801b0c6c
MVCamera::calc() 	801b0ee0
MVGrafPort::~MVGrafPort() 	801b1118
MVLight::reset() 	801b1184
MVLight::calc() 	801b1188
MVLight::setGXObj() 	801b11a8
MVChaseLight::reset() 	801b1230
MVChaseLight::calc() 	801b1234
MVDrawBuffer::drawIn(unsigned long) 	801b16d4
MVDrawBuffer::update() 	801b16f8
MVDrawBuffer::viewCalc(unsigned long) 	801b172c
MVActor::MVActor() 	801b1750
MdlViewer::MdlViewer() 	801b1794
MdlViewer::reset() 	801b192c
MdlViewer::calc() 	801b1970
MdlViewer::draw() 	801b19e8
MdlViewer::append(MVActor *) 	801b1c24
MdlViewer::setCurViewNoActor(unsigned long) 	801b1c4c
MdlViewer::calcActor() 	801b1ca0
MdlViewer::updateActor() 	801b1cec
MdlViewer::viewCalcActor(unsigned long) 	801b1d38
MVChaseLight::getEffectMtx() 	801b1d8c
MVLight::getEffectMtx() 	801b1d94
RaceTime::get(int *, int *, int *) const 	801b1d9c
MaskScreenNode::draw() 	801b1df0
MaskScreen::MaskScreen() 	801b2060
MaskScreen::reset() 	801b2150
MaskScreen::resetAllMask() 	801b2190
MaskScreen::requestMask(float, float, bool) 	801b21d0
MaskScreen::capture() 	801b2298
MaskScreen::draw() 	801b2314
audioCallback(long) 	801b2558
THPPlayerInit	801b25fc
THPPlayerQuit	801b26c0
THPPlayerOpen	801b26f4
THPPlayerClose	801b2a18
THPPlayerCalcNeedMemory	801b2a6c
THPPlayerSetBuffer	801b2b1c
PrepareReady(int) 	801b2c94
THPPlayerPrepare	801b2cc4
THPPlayerPlay	801b3010
THPPlayerStop	801b3070
THPPlayerPause	801b3130
PlayControl(unsigned long) 	801b316c
ProperTimingForStart() 	801b34fc
ProperTimingForGettingNextFrame() 	801b3550
THPPlayerDrawCurrentFrame	801b3680
THPPlayerGetVideoInfo	801b3758
THPPlayerGetTotalFrame	801b37a0
THPPlayerGetState	801b37c4
PushUsedTextureSet(void *) 	801b37d4
PopUsedTextureSet() 	801b3804
THPPlayerPostDrawDone	801b3848
MixAudio(short *, unsigned long) 	801b38b4
THPPlayerSetVolume	801b3a9c
__sinit_THPPlayer_c	801b3bb4
CreateVideoDecodeThread	801b3c88
VideoDecodeThreadStart	801b3d60
VideoDecodeThreadCancel	801b3d94
VideoDecoder(void *) 	801b3dd0
VideoDecoderForOnMemory(void *) 	801b3e98
VideoDecode(THPReadBuffer *) 	801b3fc8
PopFreeTextureSet	801b4104
PushFreeTextureSet	801b4138
PopDecodedTextureSet	801b4168
PushDecodedTextureSet	801b41ac
CreateReadThread	801b41dc
ReadThreadStart	801b427c
ReadThreadCancel	801b42b0
Reader::JHICommBufReader(unsigned long, unsigned long, unsigned long) 	801b42ec
PopReadedBuffer	801b43cc
PushReadedBuffer	801b4400
PopFreeReadBuffer	801b4430
PushFreeReadBuffer	801b4464
PopReadedBuffer2	801b4494
PushReadedBuffer2	801b44c8
CreateAudioDecodeThread	801b44f8
AudioDecodeThreadStart	801b45cc
AudioDecodeThreadCancel	801b4600
AudioDecoder(void *) 	801b463c
AudioDecoderForOnMemory(void *) 	801b4664
AudioDecode(THPReadBuffer *) 	801b4704
PopFreeAudioBuffer	801b47d0
PushFreeAudioBuffer	801b4804
PopDecodedAudioBuffer	801b4834
PushDecodedAudioBuffer	801b4878
DriverDataChild::DriverDataChild() 	801b48a8
DriverData::create() 	801b48f4
DriverData::~DriverData() 	801b49ec
DriverDataChild::~DriverDataChild() 	801b4a4c
__sinit_driverData_cpp	801b4a94
__arraydtor$2267	801b4aec
DriverModel::DriverModel(KartLoader *, int, unsigned short, bool, int) 	801b4b24
OneShotAnimator2::reset() 	801b4f10
OneShotAnimator2::OneShotAnimator2() 	801b4f24
DriverModel::convCharIDToDataID(ECharID) 	801b4f74
DriverModel::init_ik(int) 	801b503c
DriverModel::init(int) 	801b5288
DriverModel::initMtxCalc() 	801b58b8
DriverModel::initAnmTrans_BossPakkun(J3DAnmTransform *) 	801b5994
DriverModel::InitMpaMtxCalc(DriverModel::StateEnum, J3DAnmTransform *, J3DAnmTransform *, J3DAnmTransform *, J3DAnmTransform *) 	801b59e4
DriverModel::restart(int) 	801b5b7c
DriverModel::setDriveAnm(float) 	801b5b9c
DriverModel::setTandemAnm(float, float) 	801b5c8c
DriverModel::Start1ShotAnm_base(DriversAnimator *, DriverModel::StateEnum) 	801b66d8
OneShotAnimator2::start() 	801b687c
DriverModel::StartAnimation2() 	801b6888
DriverModel::StartAnimation(DriverModel::StateEnum) 	801b6edc
DriverModel::updateFrame_base(DriversAnimator *, DriverModel::StateEnum) 	801b7000
DriverModel::updateSetFrame() 	801b8804
DriverModel:::updateLoad_Animation	801b8c78
DriverModel::updateLoad() 	801b90fc
DriverModel::updateCheckRenew_Animation() 	801b91c8
DriverModel::updateCheckRenew() 	801b9704
DriverModel::updateBlendCount() 	801b97e0
DriverModel::updateSetBlendWeight_GetBlendTime(DriverModel::StateEnum) 	801ba04c
DriverModel::updateSetBlendWeight() 	801ba2c0
DriverModel::update(unsigned short) 	801bbd58
DriverModel::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801bcf60
DriverModel::setCurrentViewNo(unsigned long) 	801bd040
DriverModel::setItem(ItemObj *) 	801bd0f4
DriverModel::resetItem() 	801bd13c
DriverModel::getMtxP_HandR() 	801bd14c
DriverModel::getMtxP_HandR2() 	801bd170
DriverModel::getMtxP(int) 	801bd194
DriverModel::getAnmTransformPtr(int) 	801bd1d4
DriverModel::IsAnmResInMRAM(int) 	801bd23c
DriverModel::IsAnmSoundResInMRAM(int) 	801bd27c
DriverModel::~DriverModel() 	801bd2bc
NullAnimator::start() 	801bd314
NullAnimator::stop() 	801bd318
NullAnimator::reset() 	801bd31c
NullAnimator::update() 	801bd320
__sinit_driver_cpp	801bd324
DriverLoader::DriverLoader(int) 	801bd430
DriverLoader::convAnmIDToKeepID(DriverLoader::AnmEnum) 	801bd578
DriverLoader::getAnmFile(int) 	801bd5b8
DriverLoader::convSndIDToKeepID(DriverLoader::AnmSoundEnum) 	801bd670
DriverLoader::getSoundDataFile(int) 	801bd68c
DriverLoader::createModelData(int, int) 	801bd730
DriverManager::DriverManager() 	801bd820
DriverManager::~DriverManager() 	801bdc4c
DriverManager::ptr() 	801bdcac
DriverManager::getFolderName_Sound(int, int) 	801bdcf4
DriverManager::SetDriverModelPtr(DriverModel *) 	801bdd50
__sinit_driverMgr_cpp	801bdd70
OneShotAnimator2::update() 	801bde7c
DriverModel::goBack() 	801bdf08
DriverModel::goFront() 	801bdfcc
DriverModel::TurnFront() 	801be0a4
DriverModel::StartThrow(int) 	801be0c8
DriverModel::StartDriverThrow(int, int) 	801be120
DriverModel::StartJump(int) 	801be164
DriverModel::StartSit() 	801be1c8
DriverModel::StartStand() 	801be218
DriverModel::StartStart() 	801be268
DriverModel::StartAttackL() 	801be28c
DriverModel::StartAttackR() 	801be2e0
DriverModel::StartLoopAnm(DriverModel::StateEnum, DriversAnimator *, float, float, float, float) 	801be334
DriverModel::StartLoopAnm2(DriversAnimator *, float, float, float, float) 	801be378
DriverModel::StartDWait() 	801be3b8
DriverModel::StartDemo() 	801be434
DriverModel::StartDemo2() 	801be448
DriverModel::StartDemo2Front() 	801be45c
DriverModel::StartDemo2Back() 	801be470
DriverModel::StartDrift(int) 	801be484
DriverModel::StartDriftEnd(int) 	801be4a4
DriverModel::StartDamage(int, int) 	801be4c4
DriverModel::StartDamage_GetUp(int, int) 	801be5c0
DriverModel::StartDash() 	801be5f8
DriverModel::StartHang() 	801be648
DriverModel::StartDashEnd() 	801be698
DriverModel::StartHang2(float, unsigned char) 	801be6e8
DriverModel::StartDashEnd2(float, unsigned char) 	801be77c
DriverModel::StartDangerL() 	801be860
DriverModel::StartDangerR() 	801be890
DriverModel::StartDangerEnd(int) 	801be8c0
DriverModel::StartDriverDamage() 	801be8f8
DriverModel::StartDriverDrive() 	801be91c
DriverModel::StartGoalMotion() 	801be940
DriverModel::StartGood() 	801bea98
DriverModel::StartGood1st() 	801beae8
DriverModel::StartBad() 	801beb38
DriverModel::StartFire() 	801beb88
DriverModel::StartFireEnd() 	801bebd8
DriverModel::StartHappy() 	801bec28
DriverModel::StartAppeal() 	801becb4
DriverModel::StartJuggle() 	801becd8
DriverModel::StartSpeak() 	801bed84
DriverModel::IsMove() 	801bee30
DriverModel::IsChange() 	801bee7c
DriverModel::IsChangeFront() 	801beec8
DriverModel::IsChangeBack() 	801bef30
DriverModel::IsTurn() 	801bef98
DriverModel::IsTurnBack() 	801befe4
DriverModel::IsTurnFront() 	801bf010
DriverModel::IsThrow() 	801bf03c
DriverModel::IsTire() 	801bf064
DriverModel::IsAttack() 	801bf09c
DriverModel::IsJump() 	801bf0ec
DriverModel::IsSit() 	801bf124
DriverModel::IsStand() 	801bf15c
DriverModel::IsBack() 	801bf19c
DriverModel::IsStart() 	801bf204
DriverModel::IsBeforeStart() 	801bf24c
DriverModel::IsNormalStart() 	801bf2a0
DriverModel::IsRocketStart() 	801bf2b4
DriverModel::IsDamage() 	801bf2c8
DriverModel::IsDamageS() 	801bf354
DriverModel::IsDamageL() 	801bf3ec
DriverModel::IsDamageS12() 	801bf448
DriverModel::IsDamageL12() 	801bf49c
DriverModel::IsRun() 	801bf4e4
DriverModel::IsDrift(DriverModel::StateEnum) 	801bf51c
DriverModel::IsDrift() 	801bf550
DriverModel::IsDriftStart() 	801bf588
DriverModel::IsDriftEnd() 	801bf5dc
DriverModel::IsDriftFinish() 	801bf614
DriverModel::IsDriftLeft() 	801bf64c
DriverModel::IsDriftRight() 	801bf6a0
DriverModel::IsTandemAnmStartOK() 	801bf6f4
DriverModel::IsDanger() 	801bf7b0
DriverModel::IsDangerPlus() 	801bf828
DriverModel::IsDash() 	801bf8a4
DriverModel::IsDash1() 	801bf8cc
DriverModel::IsDash2() 	801bf8f4
DriverModel::IsJuggle() 	801bf91c
DriverModel::IsDriverDamage() 	801bf96c
DriverModel::IsPiyo() 	801bf980
DriverModel::IsFire() 	801bf994
DriverModel::IsDrive(DriverModel::StateEnum) 	801bf9bc
DriverModel::IsDrive() 	801bf9e8
DriverModel::IsGoal() 	801bfa18
DriverModel::IsGoalFront() 	801bfa9c
DriverModel::IsGoalBack() 	801bfb0c
DriverModel::IsHappy() 	801bfb90
DriverModel::IsHappyFront() 	801bfbe8
DriverModel::IsHappyBack() 	801bfca4
DriverModel::IsAppeal() 	801bfd60
DriverModel::IsFront() 	801bfd80
DriverModel::IsItemThrowOK() 	801bfe30
DriverModel::IsTandem(DriverModel::StateEnum) 	801bfe70
DriverModel::IsTandem() 	801bfebc
DriverModel::IsWait() 	801bff0c
DriverModel::IsDemo(DriverModel::StateEnum) 	801bff44
DriverModel::IsDemo() 	801bff68
DriverModel::IsDemoFront() 	801bff90
__sinit_driverAnim_cpp	801bffb0
DriverAnimBuf::DriverAnimBuf() 	801c00bc
DriverAnimBuf::reset() 	801c0100
DriverAnimBuf::~DriverAnimBuf() 	801c01a0
DriverAnimBufMgr::DriverAnimBufMgr() 	801c01dc
DriverAnimBufMgr::reset() 	801c0270
DriverAnimBufMgr::CheckAndLoadAnimAvailable(int, int) 	801c0368
DriverAnimBufMgr::CheckAndLoadAnimSoundAvailable(int, int) 	801c03dc
DriverAnimBufMgr::loadAnimation(int, int) 	801c03fc
DriverAnimBufMgr::LoadAnimationSound(int, int) 	801c04f0
DriverAnimBufMgr::CheckRenew() 	801c0574
DriverAnimBufMgr::CheckRenewSound() 	801c0604
DriverAnimBufMgr::Check() 	801c0644
DriverAnimBufMgr::resetFrame() 	801c0648
DriverAnimBufMgr::resetFrameSound() 	801c066c
DriverAnimBufMgr::GetPtr(int) 	801c0678
DriverAnimBufMgr::GetSoundPtr(int) 	801c0704
DriverModel::calcMPos(JGeometry::TVec3<float> &, JGeometry::TVec3<float> &, JGeometry::TVec3<float> &, float, float, JGeometry::TVec3<float> *) 	801c0754
DriverModel::calc1stJnt(J3DModel *, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) 	801c0a28
DriverModel::calc2ndJnt(J3DModel *, unsigned short, unsigned short, unsigned short) 	801c0d58
DriverModel::koshiCallBack(J3DJoint *, int) 	801c0fc0
DriverModel::spinCallBack(J3DJoint *, int) 	801c10f8
DriverModel::footL1CallBack(J3DJoint *, int) 	801c1178
DriverModel::footL2CallBack(J3DJoint *, int) 	801c1248
DriverModel::footL3CallBack(J3DJoint *, int) 	801c1310
DriverModel::footLPosCallBack(J3DJoint *, int) 	801c14a4
DriverModel::footR1CallBack(J3DJoint *, int) 	801c1644
DriverModel::footR2CallBack(J3DJoint *, int) 	801c1714
DriverModel::footR3CallBack(J3DJoint *, int) 	801c17dc
DriverModel::footRPosCallBack(J3DJoint *, int) 	801c1970
DriverModel::armL1CallBack(J3DJoint *, int) 	801c1a78
DriverModel::armL2CallBack(J3DJoint *, int) 	801c1b70
DriverModel::armL3CallBack(J3DJoint *, int) 	801c1c60
DriverModel::armR1CallBack(J3DJoint *, int) 	801c1dec
DriverModel::armR2CallBack(J3DJoint *, int) 	801c1f44
DriverModel::armR3CallBack(J3DJoint *, int) 	801c2094
DriverModel::faceCallBack(J3DJoint *, int) 	801c2280
DriverModel::handRCallBack(J3DJoint *, int) 	801c2498
DriverModel::mouthCallBack(J3DJoint *, int) 	801c25ec
DriverModel::skirtCallBack(J3DJoint *, int) 	801c2680
DriverModel::skirtPosCallBack(J3DJoint *, int) 	801c27e4
DriverModel::dHair1CallBack(J3DJoint *, int) 	801c28ec
DriverModel::dHair2CallBack(J3DJoint *, int) 	801c29f8
DriverModel::pHair1CallBack(J3DJoint *, int) 	801c2af8
DriverModel::pHair2CallBack(J3DJoint *, int) 	801c2c04
DriverModel::tie1CallBack(J3DJoint *, int) 	801c2d04
DriverModel::IsFootLIKOn(DriverModel *) 	801c2e40
DriverModel::IsFootRIKOn(DriverModel *) 	801c2ee8
DriverModel::IsArmLIKOn(DriverModel *) 	801c2f90
DriverModel::IsArmRIKOn(DriverModel *) 	801c30d8
DriverModel::IsAllIKOff(DriverModel *) 	801c3168
DriverModel::IsAllIKOffWithoutFace(DriverModel *) 	801c323c
__sinit_driver_ik_cpp	801c3264
DriverTPAnim::DriverTPAnim(DriverModel *, int) 	801c3370
J3DAnmObjMatTexPattern::~J3DAnmObjMatTexPattern() 	801c3404
J3DAnmObjMatTexPattern::J3DAnmObjMatTexPattern() 	801c3484
J3DAnmObjMaterialBase<J3DAnmTexPattern>::~J3DAnmObjMaterialBase() 	801c34f4
DriverTPAnim::~DriverTPAnim() 	801c3564
DriverTPAnim::LoadBTP() 	801c35f8
DriverTPAnim::setDriverTPAnim(DriverTPAnim::TPAStateEnum) 	801c37ec
DriverTPAnim::startDriverTPAnim(DriverTPAnim::TPAStateEnum) 	801c3868
DriverTPAnim::update() 	801c38c0
DriverTPAnim::update_TPAWink() 	801c4304
J3DAnmObjMaterialBase<J3DAnmTexPattern>::anmFrameProc() 	801c43cc
DriverTPAnim::update_TPASmile() 	801c43dc
DriverTPAnim::update_TPASpeak() 	801c44f0
DriverTPAnim::update_TPAFire() 	801c454c
DriverTPAnim::update_TPAPiyo() 	801c4550
DriverTPAnim::update_TPAADamage() 	801c4658
DriverTPAnim::update_TPABDamageA() 	801c4814
DriverTPAnim::update_TPABDamageB() 	801c491c
DriverTPAnim::update_basic() 	801c4a50
DriverTPAnim::setup(DriverModel *) 	801c4aac
__sinit_driverTPAnim_cpp	801c4b60
DriverModel::CheckDriverFlags() 	801c4c6c
DriverModel::SetDriverFlags(DriverModel::StateEnum) 	801c4c90
DriverModel::CheckDriverFlags_Hokan(DriverModel::StateEnum) 	801c4cfc
DriverModel::CheckDriverFlags_Loop(DriverModel::StateEnum) 	801c4d1c
DriverModel::IsItemWithTurn() 	801c4e10
__sinit_driverState_cpp	801c4e4c
DriverModel::InitDriverOffsetPosition() 	801c4f58
DriverModel::SetDriverOffsetPosition_Change(DriverData *) 	801c4fb8
DriverModel::SetDriverOffsetPosition_Demo(DriverData *) 	801c5694
DriverModel::SetDriverOffsetPosition() 	801c5834
__sinit_driverOffset_cpp	801c651c
FeelingOne::updateF() 	801c6628
FeelingOne::setCurrentViewNo(unsigned long) 	801c670c
Feeling::Feeling(DriverModel *) 	801c6730
Feeling::update(int) 	801c697c
Feeling::getBtpFrame() 	801c6d08
FeelingMgr::FeelingMgr() 	801c6d3c
FeelingMgr::~FeelingMgr() 	801c6f18
FeelingMgr::ptr() 	801c6f78
FeelingMgr::getBrkFile(int) 	801c6fc0
FeelingMgr::getBtpFile() 	801c700c
FeelingMgr::init(DriverModel *) 	801c7050
FeelingMgr::createModelData(int) 	801c70e4
FeelingMgr::update() 	801c715c
FeelingMgr::createModel(DriverModel *, JKRSolidHeap *, unsigned long, unsigned long) 	801c7220
FeelingMgr::setCurrentViewNo(unsigned long) 	801c73c8
FeelingMgr::getJ3DModelDataPtr(int) 	801c7450
Feeling::~Feeling() 	801c7460
FeelingOne::~FeelingOne() 	801c74d0
__sinit_feeling_cpp	801c75b8
FeelingOne::@24@setCurrentViewNo(unsigned long) 	801c76c4
Osage::Osage(DriverModel *) 	801c76cc
Osage::update(unsigned short) 	801c7794
Osage::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801c7870
Osage::setCurrentViewNo(unsigned long) 	801c78a0
Osage::kHairRootCallBack(J3DJoint *, int) 	801c791c
Osage::kHairL1CallBack(J3DJoint *, int) 	801c79a8
Osage::kHairL2CallBack(J3DJoint *, int) 	801c7a90
Osage::kHairL3CallBack(J3DJoint *, int) 	801c7b64
Osage::kHairR1CallBack(J3DJoint *, int) 	801c7bf0
Osage::kHairR2CallBack(J3DJoint *, int) 	801c7cd8
Osage::kHairR3CallBack(J3DJoint *, int) 	801c7dac
OsageMgr::~OsageMgr() 	801c7e38
OsageMgr::ptr() 	801c7eb0
OsageMgr::init(DriverModel *) 	801c7fcc
OsageMgr::setCallBack(int) 	801c8090
OsageMgr::createModel(DriverModel *, JKRSolidHeap *, unsigned long, unsigned long) 	801c80fc
OsageMgr::setCurrentViewNo(DriverModel *, unsigned long) 	801c81ac
OsageMgr::CheckNoIK() 	801c8218
OsageMgr::IsOsageExist(DriverModel *) 	801c822c
__sinit_osage_cpp	801c8270
OsageMgr::@24@__dt() 	801c837c
Accessory::Accessory(DriverModel *) 	801c8384
Accessory::update(unsigned short) 	801c84d4
Accessory::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801c8610
Accessory::setCurrentViewNo(unsigned long) 	801c8644
AccessoryMgr::~AccessoryMgr() 	801c8668
AccessoryMgr::ptr() 	801c86c8
AccessoryMgr::createModelData() 	801c87d4
AccessoryMgr::init(DriverModel *) 	801c8844
AccessoryMgr::update() 	801c88f4
AccessoryMgr::setCurrentViewNo(unsigned long) 	801c8958
AccessoryMgr::simpleDraw(unsigned long) 	801c89c0
Accessory::~Accessory() 	801c8a5c
__sinit_accessory_cpp	801c8b1c
Accessory::@24@setCurrentViewNo(unsigned long) 	801c8c28
Accessory::@24@update(unsigned short) 	801c8c30
Accessory::@24@createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801c8c38
Laurel::updateOffset() 	801c8c40
Laurel::update(unsigned short) 	801c8e98
Laurel::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801c8f04
Laurel::setCurrentViewNo(unsigned long) 	801c8f38
LaurelMgr::~LaurelMgr() 	801c8fb8
LaurelMgr::ptr() 	801c9030
LaurelMgr::init(DriverModel *) 	801c90d8
LaurelMgr::update(DriverModel *) 	801c9224
LaurelMgr::createModel(DriverModel *, JKRSolidHeap *, unsigned long, unsigned long) 	801c9290
LaurelMgr::setCurrentViewNo(DriverModel *, unsigned long) 	801c9338
Laurel::~Laurel() 	801c93a4
__sinit_laurel_cpp	801c9414
Laurel::@24@setCurrentViewNo(unsigned long) 	801c9520
Laurel::@24@update(unsigned short) 	801c9528
Laurel::@24@createMode	801c9530
LaurelMgr::@24@~LaurelMgr	801c9538
DriverObj::DriverObj() 	801c9540
DriverObj::~DriverObj() 	801c957c
DriverObj::createModelData(char *) 	801c95d4
__sinit_driverObj_cpp	801c9654
SceneTitleLine::SceneTitleLine(JKRArchive *, JKRHeap *, char *) 	801c9760
SceneTitleLine::~SceneTitleLine() 	801c98d0
SceneTitleLine::init_titleline(int) 	801c9934
SceneTitleLine::drawTitleLine(J2DOrthoGraph *) 	801c9994
SceneTitleLine::calcAnmTitleLine(int) 	801c99e8
SceneTitleLine::calcMatAnmTitleLine() 	801c9ab0
PrintPal::PrintPal(JKRHeap *) 	801c9b18
PrintPal::init(PrintPal::MessageID) 	801ca030
PrintPal::draw() 	801ca554
PrintPal::calc(int) 	801ca5d4
PrintPal::isMessage() 	801caa2c
PrintPal::isChoice() 	801caa60
PrintPal::getCounter() 	801caa8c
__sinit_PrintPal_cpp	801caac8
StaffRoll2D::StaffRoll2D(JKRHeap *, Language, VideoMode, int) 	801cab9c
ExitBoxInfo::ExitBoxInfo() 	801cb698
StaffRoll2D::init() 	801cb69c
StaffRoll2D::reset() 	801cb6f0
StaffRoll2D::draw() 	801cb748
StaffRoll2D::calc() 	801cb9a4
StaffRoll2D::start(int) 	801cbc84
StaffRoll2D::getExitBoxInfoPtr(int, int) 	801cbd88
StaffRoll2D::getExitBoxNum(int) 	801cbdc0
StaffRoll2D::getVersion(Language, VideoMode) 	801cbdf0
StaffRoll2D::getSceneDataID(int, int) 	801cbe0c
Clock::move() 	801cbe60
AnimatorWind::start() 	801cbef8
AnimatorWind::stop() 	801cbf04
AnimatorWind::reset() 	801cbf10
LoopAnimatorWind::update() 	801cbf20
TestApp::create() 	801cc01c
TestApp::TestApp() 	801cc06c
TestApp::~TestApp() 	801cc0b4
TestApp::draw() 	801cc114
TestApp::calc() 	801cc118
ShadowModel::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801cc11c
KartShadowModel::calc() 	801cc198
KartShadowModel::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	801cc2f4
__sinit_shadowModel_cpp	801cc398
GameApp::GameApp(unsigned long, const char *, void *) 	801cc4a4
GameApp::~GameApp() 	801cc548
GameApp::draw() 	801cc5b4
GameApp::calc() 	801cc5b8
Main() 	801cc5bc
MainMenuApp::create() 	801cc5e0
MainMenuApp::call() 	801cc630
MainMenuApp::MainMenuApp() 	801cc654
MainMenuApp::~MainMenuApp() 	801cc6dc
MainMenuApp::draw() 	801cc73c
MainMenuApp::calc() 	801cc740
__sinit_MainMenuApp_cpp	801cc744
PlayerSelectApp::create() 	801cc850
PlayerSelectApp::reset() 	801cc8a0
PlayerSelectApp::PlayerSelectApp() 	801cc9ac
PlayerSelectApp::~PlayerSelectApp() 	801cca0c
PlayerSelectApp::draw() 	801cca6c
PlayerSelectApp::calc() 	801cca70
__sinit_PlayerSelectApp_cpp	801cca74
MapSelectApp::create() 	801ccb80
MapSelectApp::MapSelectApp() 	801ccbd0
MapSelectApp::~MapSelectApp() 	801ccc30
MapSelectApp::draw() 	801ccc90
MapSelectApp::calc() 	801ccc94
__sinit_MapSelectApp_cpp	801ccc98
RaceApp::create() 	801ccda4
RaceApp::call() 	801ccdf4
RaceApp::RaceApp() 	801cce18
RaceApp::~RaceApp() 	801cd748
RaceApp::draw() 	801cd7fc
RaceApp::calc() 	801cd840
AwardApp::~AwardApp() 	801cdaf4
RaceApp::ctrlRace() 	801cdb54
RaceApp::ctrlRecorder() 	801cde4c
RaceApp::setAudioRaceMode() 	801ce168
__sinit_RaceApp_cpp	801ce1f4
ResMgr::getCrsArcName(ECourseID) 	801ce300
ResMgr::create(JKRHeap *) 	801ce530
ResMgr::loadKeepTask(void *) 	801ce610
ResMgr::loadCourseTask(void *) 	801ce7d8
ResMgr::loadAwardTask(void *) 	801ce994
ResMgr::loadOpeningTask(void *) 	801cead8
ResMgr::loadKeepData() 	801ceb3c
ResMgr::loadCourseData(ECourseID, ResMgr::CourseOrder) 	801cebac
ResMgr::loadAwardData(ERaceGpCup, JKRHeap *) 	801cec50
ResMgr::loadOpeningData(JKRHeap *) 	801cece0
ResMgr::isFinishLoadingArc(ResMgr::ArchiveId) 	801ced5c
ResMgr::isLoadingArc(ResMgr::ArchiveId) 	801ced78
ResMgr::getPtr(ResMgr::KartDataId, EKartID) 	801ced94
ResMgr::getPtr(ResMgr::DriverDataId, ResMgr::DriverId) 	801cefec
ResMgr::getPtr(ResMgr::ShadowDataId, EKartID) 	801cf148
ResMgr::getPtr(ResMgr::CourseDataId) 	801cf310
ResMgr::getPtr(ResMgr::MessageDataId) 	801cf434
ResMgr::getPtr(ResMgr::ArchiveId, const char *) 	801cf524
ResMgr::getResSize(ResMgr::ArchiveId, const void *) 	801cf560
ResMgr::readResourceAsync(void *, unsigned long, char *, char *, ResMgr::AramAsyncState *) 	801cf59c
ResMgr::readAnmResTask(void *) 	801cf680
ResMgr::findResource(ResMgr::ArchiveId, char *) 	801cf73c
ResMgr::isFinishLoadingAram() 	801cf77c
__sinit_ResMgr_cpp	801cf7b8
LogoApp::create() 	801cf8c4
LogoApp::call() 	801cf914
LogoApp::LogoApp() 	801cf938
LogoApp::~LogoApp() 	801cf9d8
LogoApp::draw() 	801cfa38
LogoApp::calc() 	801cfa5c
LogoApp::createMoviePlayer(void *) 	801cfff8
LogoApp::reset() 	801d0024
LogoApp::restart() 	801d0028
LogoApp::controlLoading() 	801d00b8
__sinit_LogoApp_cpp	801d01ec
System::startAudioTask(void *) 	801d02f8
System::init() 	801d0388
System::reset() 	801d07b4
System::changeEuRgb60() 	801d07e0
System::changePal50() 	801d085c
System::changeMovieRenderMode() 	801d08d8
System::changeNormalRenderMode() 	801d0950
System::callbackException(unsigned short, OSContext *, unsigned long, unsigned long) 	801d09c8
System::run() 	801d0ae8
System::get2DVpX() 	801d0bf8
System::get2DVpY() 	801d0c04
System::get2DVpW() 	801d0c14
System::get2DVpH() 	801d0c24
System::get3DVpX() 	801d0c34
System::get3DVpY() 	801d0c40
System::get3DVpW() 	801d0c50
System::get3DVpH() 	801d0c60
System::get3DVpDiv2X(unsigned char) 	801d0c70
System::get3DVpDiv2Y(unsigned char) 	801d0c84
System::get3DVpDiv2W(unsigned char) 	801d0c9c
System::get3DVpDiv2H(unsigned char) 	801d0cb4
System::get3DVpDiv4X(unsigned char) 	801d0ccc
System::get3DVpDiv4Y(unsigned char) 	801d0ce0
System::get3DVpDiv4W(unsigned char) 	801d0cf8
System::get3DVpDiv4H(unsigned char) 	801d0d10
System::get2DScisX() 	801d0d28
System::get2DScisY() 	801d0d38
System::get2DScisW() 	801d0d48
System::get2DScisH() 	801d0d58
System::get2DScisX	801d0d68
System::get3DScisY() 	801d0d78
System::get3DScisW() 	801d0d88
System::get3DScisH() 	801d0d98
System::get3DAwardScisX() 	801d0da8
System::get3DAwardScisY() 	801d0db8
System::get3DAwardScisW() 	801d0dc8
System::get3DAwardScisH() 	801d0dd8
System::get3DScisDiv2X(unsigned char) 	801d0de8
System::get3DScisDiv2Y(unsigned char) 	801d0dfc
System::get3DScisDiv2W(unsigned char) 	801d0e14
System::get3DScisDiv2H(unsigned char) 	801d0e2c
System::get3DScisDiv4X(unsigned char) 	801d0e44
System::get3DScisDiv4Y(unsigned char) 	801d0e58
System::get3DScisDiv4W(unsigned char) 	801d0e70
System::get3DScisDiv4H(unsigned char) 	801d0e88
System::getOrthoL() 	801d0ea0
System::getOrthoR() 	801d0eac
System::getOrthoT() 	801d0ebc
System::getOrthoB() 	801d0ecc
System::getPerspAspect() 	801d0edc
System::getPerspAspectDiv2() 	801d0ee4
System::getPerspAspectDiv4() 	801d0eec
__sinit_system_cpp	801d0ef4
KartGamePad::compress(const PADStatus &, KartPadData *) 	801d1000
KartGamePad::compress(const LGPosition &, KartPadData *) 	801d1184
KartGamePad::expand(const KartPadData &) 	801d139c
__sinit_kartPad_cpp	801d1528
AppMgr::draw() 	801d1a9c
AppMgr::calc() 	801d1af4
AppMgr::setNextApp(AppMgr::KartAppEnum) 	801d1d04
AppMgr::insertErrorViewApp() 	801d1d48
AppMgr::createApp(AppMgr::KartAppEnum) 	801d1d7c
AppMgr::restartApp() 	801d1e28
AppMgr::isRestartable() 	801d2024
__sinit_AppMgr_cpp	801d209c
FontMgr::create(JKRHeap *) 	801d21a8
ErrorViewApp::create() 	801d2240
ErrorViewApp::call(ErrorViewApp::ErrorId) 	801d2290
ErrorViewApp::ErrorViewApp() 	801d2384
ErrorViewApp::~ErrorViewApp() 	801d23f8
ErrorViewApp::draw() 	801d2458
ErrorViewApp::calc() 	801d247c
ErrorViewApp::reset() 	801d2648
__sinit_ErrorViewApp_cpp	801d2674
CardMgr::create() 	801d2780
CardMgr::probe() 	801d27fc
CardMgr::mount(long) 	801d28a0
CardMgr::mountTask(void *) 	801d2910
CardMgr::check(long) 	801d29d4
CardMgr::checkTask(void *) 	801d2a34
CardMgr::format(long) 	801d2ad8
CardMgr::formatTask(void *) 	801d2b38
CardMgr::openFile(long, SaveFile *) 	801d2bb0
CardMgr::createFile(long, SaveFile *) 	801d2ce4
CardMgr::createTask(void *) 	801d2d50
CardMgr::read(long, SaveFile::FilePart) 	801d2e5c
CardMgr::readTask(void *) 	801d2ee8
CardMgr::write(long, SaveFile::FilePart) 	801d2fa8
CardMgr::writeTask(void *) 	801d306c
CardMgr::setStatus(long) 	801d3150
CardMgr::setStatusTask(void *) 	801d31b0
CardMgr::renameFile(long) 	801d338c
CardMgr::renameTask(void *) 	801d33ec
CardMgr::deleteFile(long) 	801d3490
CardMgr::deleteTask(void *) 	801d34f0
CardMgr::closeFile(long) 	801d35c0
CardMgr::unmount(long) 	801d3640
CardAgent::create(JKRHeap *) 	801d36b0
CardAgent::ask(CardAgent::Command, long) 	801d3704
CardAgent::draw() 	801d38f0
CardAgent::calc() 	801d3938
CardAgent::waitMessage() 	801d3a10
CardAgent::waitButton() 	801d3b30
CardAgent::waitSelect() 	801d3c40
CardAgent::check0() 	801d3ff8
CardAgent::waitMount() 	801d40f8
CardAgent::waitCheck() 	801d4224
CardAgent::waitFormat() 	801d437c
CardAgent::checkFree() 	801d4474
CardAgent::open() 	801d459c
CardAgent::waitCreate() 	801d4850
CardAgent::waitWrite() 	801d4a34
CardAgent::waitRead() 	801d4c30
CardAgent::waitRename() 	801d4fac
CardAgent::waitDelete() 	801d50d0
CardAgent::waitSetStatus() 	801d51e4
CardAgent::waitQuit() 	801d54b8
CardAgent::reset() 	801d5548
CardAgent::isGhostSavable() 	801d5560
CardAgent::errorNoCard() 	801d55f0
CardAgent::errorWrongDevice() 	801d56b0
CardAgent::errorIOError() 	801d5770
CardAgent::errorEncoding() 	801d5834
__sinit_CardAgent_cpp	801d5918
SystemFile::FileData::FileData() 	801d5930
TARecord::TARecord() 	801d59b0
SystemFile::~SystemFile() 	801d59c8
SystemFile::setPart(SaveFile::FilePart) 	801d5a10
SystemFile::fetch() 	801d5a18
SystemFile::store() 	801d5c74
SystemFile::getAccessWay() 	801d5d88
SystemFile::getFileName() 	801d5d90
SystemFile::getFileNo() 	801d5d98
SystemFile::getBannerFormat() 	801d5da0
SystemFile::getCommentOffset() 	801d5da8
SystemFile::getIconNum() 	801d5dc4
SystemFile::getIconOffset() 	801d5dcc
SystemFile::getIconAnim() 	801d5dd4
SystemFile::getIconFormat(unsigned char) 	801d5ddc
SystemFile::getIconSpeed(unsigned char) 	801d5de4
SystemFile::getBuf() 	801d5dec
SystemFile::getFileSize() 	801d5e2c
SystemFile::getLength() 	801d5e34
SystemFile::getOffset() 	801d5e78
SystemFile::init() 	801d5ecc
SystemFile::initHeader() 	801d5f18
SystemFile::initData(unsigned char) 	801d5fd0
SystemFile::setCheckData(long long) 	801d604c
SystemFile::setCheckDataSub(unsigned char, OSTimeDivider &, OSCalendarTime &) 	801d6138
SystemFile::checkData() 	801d6284
SystemFile::isSavable() 	801d6404
__sinit_SystemFile_cpp	801d6480
__sinit_systemData_cpp	801d6520
NetGameMgr::create(JKRHeap *) 	801d66a8
NetGameMgr::NetGameMgr() 	801d66f4
NetGameMgr::constructFifo() 	801d671c
NetGameMgr::initPadConv() 	801d68c4
NetGameMgr::start() 	801d68f8
NetGameMgr::end(bool) 	801d6a28
NetGameMgr::doStart() 	801d6a8c
NetGameMgr::startSearch() 	801d6acc
NetGameMgr::doLink() 	801d6b04
NetGameMgr::finishLink() 	801d6cfc
NetGameMgr::recvLink() 	801d6ec8
NetGameMgr::recvSync() 	801d7070
NetGameMgr::distributePadData(NetPadPkt &) 	801d72b0
NetGameMgr::appendPadData(unsigned char, NetPadPkt *) 	801d7440
NetGameMgr::recv() 	801d7744
NetGameMgr::recvTask(void *) 	801d7b00
NetGameMgr::sendTask(void *) 	801d7bd8
NetGameMgr::framework() 	801d7c98
NetGameMgr::syncwork() 	801d8238
NetGameMgr::retraceCallback(unsigned long) 	801d84b4
NetGameMgr::callbackNotify(const char *, const SOInAddr *) 	801d84e0
NetGameMgr::callbackSearch(const char *, const SOInAddr *, const SSDPSearchInfo *) 	801d8688
NetGameMgr::appendGCInfo(const SOInAddr *) 	801d881c
NetGameMgr::removeGCInfo(const SOInAddr *) 	801d88d4
NetGameMgr::getKartPad(unsigned char, KartPadData *) 	801d8944
NetGameMgr::getPadData(unsigned char, KartPadData *) 	801d8970
NetGameMgr::adjustFrame() 	801d8a18
NetGameMgr::progressReadData() 	801d8c10
NetGameMgr::fetchPadData() 	801d8d70
NetGameMgr::sleep() 	801d8e30
NetGameMgr::awake() 	801d8e48
NetGameMgr::handleError() 	801d8f30
NetGameMgr::initLogBuffer() 	801d9084
NetGameMgr::logNet(NetGameMgr::NetActionType, NetGameMgr::NetPkt &) 	801d90ec
__sinit_NetGameMgr_cpp	801d91fc
SequenceApp::create() 	801d9308
SequenceApp::call(Scene::SceneType) 	801d9358
SequenceApp::SequenceApp() 	801d93a4
SequenceApp::~SequenceApp() 	801d9478
SequenceApp::freeForMovieApp() 	801d958c
SequenceApp::draw() 	801d96a0
SequenceApp::calc() 	801d96e8
SequenceApp::reset() 	801d983c
SequenceApp::loadTask(void *) 	801d9840
SequenceApp::ready(Scene::SceneType) 	801d98ac
SequenceApp::checkFinishAllLoading() 	801d9928
SequenceApp::createScene(Scene::SceneType) 	801d9990
__sinit_SequenceApp_cpp	801d99e0
NetGateApp::create() 	801d9aec
NetGateApp::call(bool) 	801d9b3c
NetGateApp::NetGateApp() 	801d9b64
NetGateApp::~NetGateApp() 	801d9bd4
NetGateApp::loadTask(void *) 	801d9c5c
NetGateApp::draw() 	801d9d6c
NetGateApp::calc() 	801d9df0
NetGateApp::reset() 	801da214
__sinit_NetGateApp_cpp	801da218
TestViewApp::create() 	801da324
TestViewApp::TestViewApp() 	801da374
TestViewApp::~TestViewApp() 	801da3d4
TestViewApp::reset() 	801da434
TestViewApp::draw() 	801da458
TestViewApp::calc() 	801da45c
ShadowManager::ShadowManager() 	801da460
ShadowManager::getShadowModelList(ShadowModel::ShadowKind) 	801da544
ShadowManager::regist(ShadowModel *) 	801da594
ShadowManager::draw(unsigned long, JGadget::TList<ShadowModel *, JGadget::TAllocator<ShadowModel *>> &) 	801da664
ShadowManager::calc() 	801da988
ShadowManager::viewCalc(unsigned long) 	801daaa0
ShadowManager::setDstAlpha() 	801dab90
ShadowManager::~ShadowManager() 	801dabec
ShadowScreen::ShadowScreen() 	801daf04
ShadowScreen::draw() 	801daff0
TARecord::TARecord(unsigned char, unsigned char, unsigned char, unsigned char) 	801db44c
TARecord::setName(const char *) 	801db488
TARecord::setStatus(unsigned char, unsigned char, unsigned char, unsigned char) 	801db4b0
TARecord::setRaceTime(RaceTime) 	801db4c4
TARecord::less(const TARecord &) 	801db4d0
SystemRecord::init() 	801db504
SystemRecord::applyAudioSetting() 	801db630
SystemRecord::crypt(unsigned short) 	801db6fc
SystemRecord::convCourseID(ECourseID) 	801db778
SystemRecord::getTARecord(ECourseID, int) 	801db824
SystemRecord::rankTARecord(ECourseID, TARecord &) 	801db8e8
SystemRecord::getBestLap(ECourseID) 	801dba60
SystemRecord::setBestLap(ECourseID, TARecord &) 	801dbb1c
SystemRecord::getGPRecord(ERaceGpCup, ERaceLevel) 	801dbbfc
SystemRecord::setGPRecord(ERaceGpCup, ERaceLevel, GPRecord &) 	801dbc18
SystemRecord::tstSecretKart(EKartID, unsigned short) 	801dbc74
SystemRecord::setDefaultName(const char *) 	801dbd2c
__sinit_SystemRecord_cpp	801dbd54
GPRecord::GPRecord() 	801dbecc
GPRecord::setName(const char *) 	801dbef0
GPRecord::set(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, bool, const char *, RaceTime) 	801dbf18
GPRecord::less(const GPRecord &) 	801dbfa4
SaveFile::getCRC(unsigned char *, unsigned char *) 	801dc010
PadMgr::init() 	801dc0b4
PadMgr::framework() 	801dc140
PadMgr::processKartPad() 	801dc1c4
PadMgr::getPadData(unsigned char, PadMgr::KartPadInput, KartPadData *) 	801dc290
PadMgr::setKartPadInput(PadMgr::KartPadInput) 	801dc354
PadMgr::resetPort() 	801dc384
__sinit_PadMgr_cpp	801dc47c
PadRecorder::PadRecorder() 	801dc588
PadRecorder::~PadRecorder() 	801dc6cc
PadRecorder::setRecord(int, KartPadRecord *) 	801dc758
PadRecorder::setGhostPad(int, KartGamePad *) 	801dc768
PadRecorder::setGhostRecord(int, KartPadRecord *) 	801dc778
PadRecorder::play() 	801dc788
PadRecorder::standby() 	801dc794
PadRecorder::rec() 	801dc84c
PadRecorder::stop() 	801dc858
PadRecorder::finalizeRecord(int, RaceTime) 	801dc864
PadRecorder::initRecord() 	801dc8d0
PadRecorder::line(unsigned char, KartPadData *) 	801dc900
PadRecorder::framework() 	801dcacc
PadRecorder::nextFrame() 	801dcc2c
ForceEffectMgr::ForceEffectMgr() 	801dcdf4
ForceEffectMgr::~ForceEffectMgr() 	801dce40
ForceEffectMgr::start() 	801dcea8
ForceEffectMgr::end() 	801dcf1c
alloc(unsigned long, JKRAramHeap::EAllocMode) 	801dcf90
free(void *) 	801dcffc
BBAMgr::create(JKRHeap *) 	801dd058
BBAMgr::BBAMgr(JKRHeap *) 	801dd0b8
BBAMgr::processDHCP() 	801dd1b4
BBAMgr::processAutoIP() 	801dd3c4
BBAMgr::disconnecting(bool) 	801dd628
BBAMgr::startUPnP() 	801dd720
BBAMgr::startMSearch() 	801dd74c
BBAMgr::sendTo(void *, int, const void *) 	801dd774
BBAMgr::recvFrom(void *, int, void *) 	801dd7a0
BBAMgr::getState() 	801dd7cc
BBAMgr::createBasicDevice() 	801dd844
BBAMgr::loadHttpFile() 	801dd9ec
__sinit_BBAMgr_cpp	801dda58
AwardApp::create() 	801ddb68
AwardApp::call() 	801ddbb8
AwardApp::AwardApp() 	801ddbdc
AwardApp::calc() 	801ddc30
AwardApp::draw() 	801ddca8
__sinit_AwardApp_cpp	801ddcac
GhostFile::~GhostFile() 	801dddb8
GhostFile::setup() 	801dde00
GhostFile::updateKartPadRecord(const KartPadRecord &) 	801ddfd0
GhostFile::available(ECourseID) 	801de0bc
GhostFile::isValidGhostOnRace() 	801de0f4
GhostFile::makeFileName(char *, const GIRecord *) 	801de144
GhostFile::analysisFileName(GIRecord *, const char *) 	801de1ac
GhostFile::remakeFileName() 	801de214
GhostFile::uuencode(char *, unsigned char, const unsigned char *, unsigned char) 	801de28c
GhostFile::uudecode(unsigned char *, unsigned char, const char *, unsigned char) 	801de378
GhostFile::getAccessWay() 	801de484
GhostFile::getFileName() 	801de490
GhostFile::getFileNo() 	801de49c
GhostFile::getBannerFormat() 	801de4a8
GhostFile::getCommentOffset() 	801de4b0
GhostFile::getIconNum() 	801de4c0
GhostFile::getIconOffset() 	801de4c8
GhostFile::getIconAnim() 	801de4d0
GhostFile::getIconFormat(unsigned char) 	801de4d8
GhostFile::getIconSpeed(unsigned char) 	801de4e0
GhostFile::getBuf() 	801de4e8
GhostFile::getFileSize() 	801de4f0
GhostFile::getLength() 	801de4fc
GhostFile::getOffset() 	801de508
GhostFile::setCheckData(long long) 	801de510
GhostFile::checkData() 	801de560
GhostFile::setPart(SaveFile::FilePart) 	801de5bc
GhostFile::fetch() 	801de5c0
GhostFile::store() 	801de5c4
__sinit_GhostFile_cpp	801de5c8
Kart2DCommon::changeNumberTexture(int, J2DPicture **, unsigned char, bool, bool) 	801de664
Kart2DCommon::getAsciiTexture(char) 	801de75c
Kart2DCommon::changeStringTexture(const char *, J2DPicture **, unsigned char) 	801de834
Kart2DCommon::Kart2DCommon() 	801de8f4
Kart2DCommon::~Kart2DCommon() 	801dec28
ResetAgent::callbackReset(int, void *) 	801dec78
ResetAgent::reset(bool) 	801deca4
ResetAgent::draw() 	801deccc
ResetAgent::calc() 	801decd0
__sinit_ResetAgent_cpp	801def2c
Award2D::Award2D(JKRHeap *) 	801df038
Award2D::calc() 	801dfae0
Award2D::draw() 	801dfdec
Award2D::OKButton::calcAnm() 	801dfe64
Award2D::OKButton::zoomIn() 	801dff70
Award2D::OKButton::zoomOut() 	801dff8c
__sinit_Award2D_cpp	801dffa0
NameEntryHelper::NameEntryHelper(J2DPane **, char *, JKRHeap *, JUTGamePad *, bool) 	801e00ac
NameEntryHelper::init(char *) 	801e0198
NameEntryHelper::startEdit() 	801e01f4
NameEntryHelper::edit() 	801e0228
NameEntryHelper::calc() 	801e03b4
NameEntryHelper::draw(J2DGrafContext *) 	801e0428
NameEntryHelper::NameEntryDrum::NameEntryDrum(J2DPane *, unsigned char, char, JKRHeap *) 	801e0490
NameEntryHelper::NameEntryDrum::init(char) 	801e0984
NameEntryHelper::NameEntryDrum::selectIn() 	801e0ae8
NameEntryHelper::NameEntryDrum::selectOut() 	801e0b04
NameEntryHelper::NameEntryDrum::scrollUp() 	801e0b18
NameEntryHelper::NameEntryDrum::scrollDown() 	801e0ba8
NameEntryHelper::NameEntryDrum::getUpPattern(int) 	801e0c34
NameEntryHelper::NameEntryDrum::getChar() 	801e0c48
NameEntryHelper::NameEntryDrum::calc() 	801e0c9c
NameEntryHelper::NameEntryDrum::draw(J2DGrafContext *) 	801e1120
__sinit_NameEntryHelper_cpp	801e1150
LANBackground::setup(JKRArchive *) 	801e125c
LANBackground::calc() 	801e133c
LANBackground::entry() 	801e13e4
LANBackground::unentry() 	801e13f4
LANSelectMode::Item::changeColor(LANSelectMode::Color) 	801e1404
LANSelectMode::Item::calc() 	801e14a8
LANSelectMode::SelectableItem::SelectableItem(unsigned long, J2DScreen *, void *, void *, void *, int, int, unsigned long) 	801e1558
LANSelectMode::SelectableItem::changeValueUp() 	801e18d4
LANSelectMode::SelectableItem::changeValueDown() 	801e19c4
LANSelectMode::SelectableItem::update() 	801e1ab0
LANSelectMode::SelectableItem::calc() 	801e1b08
LANSelectMode::SelectableItem1::changeColor(LANSelectMode::Color) 	801e1d6c
LANSelectMode::SelectableItem1::calc() 	801e1e80
LANSelectMode::SelectableItem2::changeColor(LANSelectMode::Color) 	801e2138
LANSelectMode::SelectableItem2::calc() 	801e22bc
LANSelectMode::SelectableItemSw::changeValueMode(LANSelectMode::SelectableItemSw::ValueMode) 	801e25bc
LANSelectMode::SelectableItemDisp::changeColor(LANSelectMode::Color) 	801e2684
LANSelectMode::SelectableItemDisp::calc() 	801e28e8
LANSelectMode::LANSelectMode(JKRArchive *) 	801e2c28
LANSelectMode::Item::update() 	801e3aec
LANSelectMode::directView(int) 	801e3af0
LANSelectMode::calc() 	801e3ed8
LANSelectMode::Item::changeValueUp() 	801e4254
LANSelectMode::Item::changeValueDown() 	801e425c
LANSelectMode::calcAnm() 	801e4264
LANSelectMode::draw(const J2DGrafContext *) 	801e43e8
LANSelectMode::start(bool) 	801e4450
LANSelectMode::setDisplayMax() 	801e4594
__sinit_LANSelectMode_cpp	801e4664
LANTitle::Item::calc() 	801e4770
LANTitle::LANTitle(JKRArchive *) 	801e487c
LANTitle::calc() 	801e4a68
LANTitle::calcAnm() 	801e4ca8
LANTitle::draw(const J2DGrafContext *) 	801e4d50
LANTitle::start() 	801e4d7c
__sinit_LANTitle_cpp	801e4e38
LANEntry::LANEntry(JKRArchive *, JKRArchive *) 	801e4f0c
LANEntry::waitEntry() 	801e53cc
LANEntry::endReceipt() 	801e5894
LANEntry::setRaceInfo() 	801e58e8
LANEntry::calc() 	801e5ce4
LANEntry::calcAnm() 	801e5de4
LANEntry::draw(const J2DGrafContext *) 	801e6350
LANEntry::start() 	801e63a0
LANEntry::entry() 	801e6570
LANEntry::unentry() 	801e6584
LANEntry::startTimer() 	801e6590
LANEntry::stopTimer() 	801e659c
__sinit_LANEntry_cpp	801e65a8
LANPlayInfo::init() 	801e66b4
LANPlayInfo::getCrsID() 	801e6790
LANPlayInfo::getCrsOrder() 	801e6a38
LANPlayInfo::resumeInfo(LANSelectMode *) 	801e6a40
LANPlayInfo::saveInfo(LANSelectMode *) 	801e6ad8
LANPlayInfo::getRandomMap(int, unsigned long) 	801e6b7c
LANPlayInfo::shuffleKart(int) 	801e6be8
LANPlayInfo::getMaskedRandom(int, unsigned long) 	801e6d18
LANPlayInfo::getRideKart(unsigned char) 	801e6dc8
LANPlayInfo::getFront(int) 	801e6f7c
LANPlayInfo::getBack(int) 	801e6f9c
LANPlayInfo::getDisplayNum() 	801e6fbc
__sinit_LANPlayInfo_cpp	801e7004
MenuBackground::MenuBackground(JKRArchive *) 	801e7124
MenuBackground::calc() 	801e71a8
MenuTitleLine::MenuTitleLine(JKRArchive *) 	801e7210
MenuTitleLine::drop(MenuTitleLine::Title) 	801e73a0
MenuTitleLine::lift() 	801e7480
MenuTitleLine::calc() 	801e748c
GIRecord::GIRecord(TARecord &) 	801e758c
GIRecord::isValid() 	801e7638
Password::make(EKartID, ECharID, ECharID, ECourseID, RaceTime, RaceTime) 	801e76a8
BridgeNode::~BridgeNode() 	801e7a8c
BridgeNode::BridgeNode() 	801e7ae4
BridgeNodeManager::setPosition(JGeometry::TVec3<float> &, JGeometry::TVec3<float> &, unsigned long) 	801e7b38
StringBridge::StringBridge(const CrsData::SObject &) 	801e7cf8
BridgeNodeManager::~BridgeNodeManager() 	801e7f68
BridgeNodeManager::BridgeNodeManager() 	801e7fe4
ExGeographyObj::~ExGeographyObj() 	801e8020
StringBridge::reset() 	801e80b8
StringBridge::init() 	801e80f4
StringBridge::setParam() 	801e86b4
StringBridge::loadmodel_base(J3DModelData *) 	801e8784
StringBridge::createColModel(J3DModelData *) 	801e8b64
StringBridge::loadmodel(J3DModelData *) 	801e8c18
StringBridge::createModel(JKRSolidHeap *, unsigned long) 	801e8c38
StringBridge::makeSharedDL() 	801e8d88
StringBridge::lockDisplayList() 	801e8df8
StringBridge::calc() 	801e8efc
StringBridge::update() 	801e94b4
StringBridge::simpleDraw(unsigned long) 	801e9528
StringBridge::simpleDrawString(unsigned long) 	801e9884
StringBridge::updateString() 	801e9bd0
StringBridge::calcMtx(float (*) [4], JGeometry::TVec3<float>, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801e9cc8
StringBridge::calcBridgeModelMtx(float (*) [4], JGeometry::TVec3<float>, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801e9d00
StringBridge::calcStringMtx(float (*) [4], JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801e9e70
StringBridge::calcVertiMtx(float (*) [4], JGeometry::TVec3<float> &, BridgeNode *, BridgeNode *) 	801ea054
StringBridge::calcparallel(BridgeNode *, BridgeNode *) 	801ea22c
StringBridge::findNthCenter(const JGeometry::TVec3<float> &) 	801ea310
StringBridge::getcollideNormalandDir(unsigned long, JGeometry::TVec3<float> &, JGeometry::TVec3<float> &) 	801ea55c
StringBridge::AddVel(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ea7fc
StringBridge::addVelNode() 	801ea934
StringBridge::getWaveNodeNum(unsigned char) 	801eabfc
StringBridge::Search_Bound(const JGeometry::TVec3<float> &) 	801eac84
StringBridge::Search_BoundRadius(const JGeometry::TVec3<float> &, float) 	801ead54
StringBridge::Search(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801eae40
StringBridge::Search_Wall(const JGeometry::TVec3<float> &, float) 	801eb150
StringBridge::calcXZLength(JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801eb360
StringBridge::getSidePlaneParam(const JGeometry::TVec3<float> &, unsigned long) 	801eb3b4
StringBridge::getplaneHeight(stPlaneParam &, const JGeometry::TVec3<float> &) 	801eb55c
StringBridge::getplaneHeight(stPlaneParam &, JGeometry::TVec3<float>, unsigned long, const JGeometry::TVec3<float> &, float &) 	801eb598
StringBridge::getRightnodeVelRatio(const JGeometry::TVec3<float> &) 	801eb6a0
StringBridge::getBmdFileName() 	801eb834
StringBridge::getLopeBmdFileName() 	801eb85c
StringBridge::~StringBridge() 	801eb884
StringBridge::getMaxHeight() const 	801eb9e0
ExGeographyObj::draw(float (*) [4]) 	801eb9e8
ExGeographyObj::Search_Bound(const JGeometry::TVec3<float> &) 	801eb9ec
ExGeographyObj::Search_BoundRadius(const JGeometry::TVec3<float> &, float) 	801eb9f4
ExGeographyObj::AddVel(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801eb9fc
ExGeographyObj::lockDisplayList() 	801eba00
__sinit_logbridge_cpp	801eba04
stVecNormalize(JGeometry::TVec3<float> &) 	801ebb10
stVecNormalize(JGeometry::TVec3<float> *) 	801ebbc0
stClampVecMax(JGeometry::TVec3<float> &, float) 	801ebc70
stClampVecMin(JGeometry::TVec3<float> &, float) 	801ebda4
stLength2(float, float) 	801ebed8
stMakeDirectionMtx(JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> *, const JGeometry::TVec3<float> &, char) 	801ebefc
stMakeRMtx(float (*) [4], const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ec1cc
stQt2Mtx(float (*) [4], const Quaternion *) 	801ec228
stVec2QtUpdate(Quaternion &, Quaternion &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ec334
stVec2QtUpdate(Quaternion &, const Vec &, const Vec &) 	801ec450
stVec2Qt(Quaternion &, const Vec &, const Vec &) 	801ec558
stMtx2Qt(Quaternion *, const float (*) [4]) 	801ec610
stQtLerp(Quaternion *, const Quaternion *, const Quaternion *, float) 	801ec8ec
stQtNormalize(Quaternion *, const Quaternion *) 	801ec9c0
stMakePlaneParam(stPlaneParam &, JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ecb18
stMakePlaneParam(stPlaneParam &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ecc28
stSearchInSurface(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801ecd64
stSearchInSurface(const JGeometry::TVec3<float> &, const stPlaneParam &) 	801ecdc0
stCollideSurfaceAndSphere(const JGeometry::TVec3<float> &, float, const stPlaneParam &, float &) 	801ece0c
stCollideLineToPlaneIn(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const stPlaneParam &) 	801ece80
stGetCollidePosFromT(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, float) 	801ecf48
stGetCollideDepthFromT(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, float) 	801ecfa8
stMTXRotDeg(float (*) [4], char, float) 	801ed004
stMTXRotRad(float (*) [4], char, float) 	801ed050
stRandom::createAllRandom() 	801ed09c
stRandom::getRandomMax(unsigned long) 	801ed108
stRandom::getArbitUnitVec(JGeometry::TVec3<float> &, float, float) 	801ed180
stRandom::getArbitUnitVecSimple(JGeometry::TVec3<float> &, float) 	801ed294
stRandom::getArbitUnitVecXZ(JGeometry::TVec3<float> &, float) 	801ed3a8
stGetRnd(unsigned long) 	801ed444
stSetRndPermission(unsigned long, bool) 	801ed458
GeographyObj::NewS<GeoItemBox>(const CrsData::SObject &) 	801ed470
GeographyObj::NewS<GeoDoubleItemBox>(const CrsData::SObject &) 	801ed4a8
GeographyObj::New<GeoF_ItemBox>(const CrsData::SObject &) 	801ed4e0
GeographyObj::NewS<GeoStartLine>(const CrsData::SObject &) 	801ed528
GeographyObj::New<GeoMarioTree1>(const CrsData::SObject &) 	801ed560
GeographyObj::New<GeoMarioKinoko1>(const CrsData::SObject &) 	801ed5a8
GeographyObj::New<GeoMarioFlower1>(const CrsData::SObject &) 	801ed5f0
GeographyObj::New<TMapObjDossun>(const CrsData::SObject &) 	801ed638
GeographyObj::New<GeoNormCar>(const CrsData::SObject &) 	801ed680
GeographyObj::NewS<GeoCarShadow>(const CrsData::SObject &) 	801ed6c8
GeographyObj::NewS<GeoBombShadow>(const CrsData::SObject &) 	801ed700
GeographyObj::NewS<GeoKinoShadow>(const CrsData::SObject &) 	801ed738
GeographyObj::NewS<GeoHanaShadow>(const CrsData::SObject &) 	801ed770
GeographyObj::NewS<GeoHanaBodyShadow>(const CrsData::SObject &) 	801ed7a8
GeographyObj::New<GeoTruck>(const CrsData::SObject &) 	801ed7e0
GeographyObj::New<GeoBus>(const CrsData::SObject &) 	801ed828
GeographyObj::New<GeoBombCar>(const CrsData::SObject &) 	801ed870
GeographyObj::New<GeoKinoCar>(const CrsData::SObject &) 	801ed8b8
GeographyObj::New<GeoKuriCar>(const CrsData::SObject &) 	801ed900
GeographyObj::New<GeoItemCar>(const CrsData::SObject &) 	801ed948
GeographyObj::New<GeoHanaCar>(const CrsData::SObject &) 	801ed990
GeographyObj::NewS<GeoHanaBody>(const CrsData::SObject &) 	801ed9d8
GeographyObj::NewS<TJugem>(const CrsData::SObject &) 	801eda10
GeographyObj::NewS<TJugemVoidRod>(const CrsData::SObject &) 	801eda48
GeographyObj::NewS<TJugemHeadHear>(const CrsData::SObject &) 	801eda80
GeographyObj::NewS<TJugemRodBoard>(const CrsData::SObject &) 	801edab8
GeographyObj::NewS<TJugemRodBoard2>(const CrsData::SObject &) 	801edaf0
GeographyObj::NewS<TJugemRodBoardRev>(const CrsData::SObject &) 	801edb28
GeographyObj::NewS<TJugemRodSignal>(const CrsData::SObject &) 	801edb60
GeographyObj::NewS<TJugemRodPukuPuku>(const CrsData::SObject &) 	801edb98
GeographyObj::NewS<TJugemFlag>(const CrsData::SObject &) 	801edbd0
GeographyObj::NewS<TJugemHeadLamp>(const CrsData::SObject &) 	801edc08
GeographyObj::New<GeoSignal>(const CrsData::SObject &) 	801edc40
GeographyObj::New<GeoCannon>(const CrsData::SObject &) 	801edc88
GeographyObj::New<TMapObjWanwan>(const CrsData::SObject &) 	801edcd0
GeographyObj::NewS<TMapObjWanwanChain>(const CrsData::SObject &) 	801edd18
GeographyObj::NewS<TMapObjWanwanPile>(const CrsData::SObject &) 	801edd50
GeographyObj::New<TMapObjSkyShip>(const CrsData::SObject &) 	801edd88
GeographyObj::NewS<TMapObjDonkyRock>(const CrsData::SObject &) 	801eddd0
GeographyObj::New<TMapObjDonkyTree>(const CrsData::SObject &) 	801ede08
GeographyObj::New<GeoDkCloud>(const CrsData::SObject &) 	801ede50
GeographyObj::NewS<GeoWaterUp>(const CrsData::SObject &) 	801ede98
GeographyObj::NewS<GeoWaterUp2>(const CrsData::SObject &) 	801eded0
GeographyObj::New<GeoWater>(const CrsData::SObject &) 	801edf08
GeographyObj::New<TMapObjFireBar>(const CrsData::SObject &) 	801edf50
GeographyObj::New<GeoVision>(const CrsData::SObject &) 	801edf9c
GeographyObj::New<TMapObjPoihana>(const CrsData::SObject &) 	801edfe4
GeographyObj::New<TMapObjWall>(const CrsData::SObject &) 	801ee02c
GeographyObj::NewS<TSMAButterfly>(const CrsData::SObject &) 	801ee074
GeographyObj::NewS<TSMADonkyBird>(const CrsData::SObject &) 	801ee0ac
GeographyObj::NewS<TSMAKamome>(const CrsData::SObject &) 	801ee0e4
GeographyObj::New<TMapObjGeyser>(const CrsData::SObject &) 	801ee11c
GeographyObj::New<TMapObjGeyserSearch>(const CrsData::SObject &) 	801ee164
GeographyObj::NewS<TTestStrBarrel>(const CrsData::SObject &) 	801ee1bc
GeographyObj::NewS<TTestStrItem>(const CrsData::SObject &) 	801ee208
GeographyObj::New<TMapObjPeachTree>(const CrsData::SObject &) 	801ee254
GeographyObj::New<TMapObjSnowRock>(const CrsData::SObject &) 	801ee29c
GeographyObj::New<TTestRollObj>(const CrsData::SObject &) 	801ee2e4
GeographyObj::New<TMapObjFountain>(const CrsData::SObject &) 	801ee32c
GeographyObj::New<TMapObjHeyho>(const CrsData::SObject &) 	801ee374
GeographyObj::NewS<TMapObjSubHeyho>(const CrsData::SObject &) 	801ee3bc
GeographyObj::New<TMapObjSanbo>(const CrsData::SObject &) 	801ee3f4
GeographyObj::New<TMapObjWlArrow>(const CrsData::SObject &) 	801ee43c
GeographyObj::New<TMapObjSnowMan>(const CrsData::SObject &) 	801ee484
GeographyObj::New<TMapObjIceBlock>(const CrsData::SObject &) 	801ee4cc
GeographyObj::New<TMapObjNoMove>(const CrsData::SObject &) 	801ee514
GeographyObj::New<GeoKuribo>(const CrsData::SObject &) 	801ee55c
GeographyObj::New<TMapObjSun>(const CrsData::SObject &) 	801ee5a4
GeographyObj::New<TMapObjBubble>(const CrsData::SObject &) 	801ee5ec
GeographyObj::New<TMapObjDesun>(const CrsData::SObject &) 	801ee634
GeographyObj::New<TMapObjSandPillar>(const CrsData::SObject &) 	801ee67c
GeographyObj::New<TMapObjFerriswheel>(const CrsData::SObject &) 	801ee6c4
GeographyObj::New<TMapObjMoveItemBoxLimit>(const CrsData::SObject &) 	801ee70c
GeographyObj::NewS<GeoShine>(const CrsData::SObject &) 	801ee76c
GeographyObj::NewS<TBalloon>(const CrsData::SObject &) 	801ee7a4
GeographyObj::New<TMapObjJetCoasterHead>(const CrsData::SObject &) 	801ee7dc
GeographyObj::NewS<TMapObjJetCoasterBody>(const CrsData::SObject &) 	801ee824
GeographyObj::New<TMapObjPool>(const CrsData::SObject &) 	801ee870
GeographyObj::New<TMapObjDeBalloon>(const CrsData::SObject &) 	801ee8b8
GeographyObj::New<TMapObjKpFire>(const CrsData::SObject &) 	801ee900
GeographyObj::NewS<TMapObjSanboHead>(const CrsData::SObject &) 	801ee948
GeographyObj::NewS<TMapObjSanboBody>(const CrsData::SObject &) 	801ee9c4
GeographyObj::New<TMapObjRollTable>(const CrsData::SObject &) 	801eea40
GeographyObj::New<TMapObjMoveItemBox>(const CrsData::SObject &) 	801eea88
GeographyObj::New<TMapObjNossie>(const CrsData::SObject &) 	801eead0
GeographyObj::New<TMapObjMareA>(const CrsData::SObject &) 	801eeb18
GeographyObj::New<TMapObjMareB>(const CrsData::SObject &) 	801eeb70
GeographyObj::New<TMapObjMareC>(const CrsData::SObject &) 	801eebc8
GeographyObj::New<TMapObjMonteA>(const CrsData::SObject &) 	801eec20
GeographyObj::New<TMapObjMonteB>(const CrsData::SObject &) 	801eec78
GeographyObj::New<TMapObjMonteC>(const CrsData::SObject &) 	801eecd0
GeographyObj::New<TMapObjMonteD>(const CrsData::SObject &) 	801eed28
GeographyObj::New<TMapObjMonteE>(const CrsData::SObject &) 	801eed80
GeographyObj::New<TMapObjMareW_A>(const CrsData::SObject &) 	801eedd8
GeographyObj::New<TMapObjMareW_B>(const CrsData::SObject &) 	801eee28
GeographyObj::New<TMapObjMareW_C>(const CrsData::SObject &) 	801eee78
GeographyObj::New<TMapObjMareM_A>(const CrsData::SObject &) 	801eeec8
GeographyObj::New<TMapObjMeteor>(const CrsData::SObject &) 	801eef10
GeographyObj::New<TMapObjUkleleMonte>(const CrsData::SObject &) 	801eef58
GeographyObj::New<TMapObjDanceMonteA>(const CrsData::SObject &) 	801eefa0
GeographyObj::New<TMapObjDanceMonteB>(const CrsData::SObject &) 	801eeff0
GeographyObj::New<TMapObjAwardItemBox>(const CrsData::SObject &) 	801ef040
GeographyObj::NewS<TMapObjAwardCupKinoko>(const CrsData::SObject &) 	801ef088
GeographyObj::NewS<TMapObjAwardCupFlower>(const CrsData::SObject &) 	801ef0e4
GeographyObj::NewS<TMapObjAwardCupStar>(const CrsData::SObject &) 	801ef140
GeographyObj::NewS<TMapObjAwardCupSpecial>(const CrsData::SObject &) 	801ef19c
GeographyObj::NewS<TMapObjAwardCupReverse>(const CrsData::SObject &) 	801ef1f8
GeographyObj::NewS<TMapObjAwardCupAllTour>(const CrsData::SObject &) 	801ef254
GeographyObj::New<TMapObjAntLion>(const CrsData::SObject &) 	801ef2b0
GeographyObj::New<TMapObjPakkun>(const CrsData::SObject &) 	801ef2f8
GeographyObj::New<GeoKinojii>(const CrsData::SObject &) 	801ef340
GeographyObj::New<TMapObjDinoTree>(const CrsData::SObject &) 	801ef388
GeographyObj::New<TMapObjDemoFountain>(const CrsData::SObject &) 	801ef3d0
GeographyObj::New<TMapObjKpGear>(const CrsData::SObject &) 	801ef418
GeographyObj::New<TMapObjKpFireBar>(const CrsData::SObject &) 	801ef460
GeographyObj::New<TMapObjSwimNossie>(const CrsData::SObject &) 	801ef4a8
GeographyObj::New<TMapObjPtera>(const CrsData::SObject &) 	801ef4f0
GeographyObj::New<TMapObjPeachTree2>(const CrsData::SObject &) 	801ef538
GeographyObj::New<TMapObjYoshiHeli>(const CrsData::SObject &) 	801ef580
GeographyObj::New<TMapObjDesertTree>(const CrsData::SObject &) 	801ef5c8
GeographyObj::New<TMapObjWluSearchLight>(const CrsData::SObject &) 	801ef610
GeographyObj::New<TMapObjVentilator>(const CrsData::SObject &) 	801ef658
GeographyObj::NewS<TShineArrow>(const CrsData::SObject &) 	801ef6a0
GeographyObj::New<TMapObjUFO>(const CrsData::SObject &) 	801ef6d8
GeographyObj::New<TMapObjMashBalloon>(const CrsData::SObject &) 	801ef720
GeographyObj::New<TMapObjPathYoshiHeli>(const CrsData::SObject &) 	801ef770
GeographyObj::NewS<TMapObjFireBall>(const CrsData::SObject &) 	801ef804
GeographyObj::NewS<TMapObjKpFireBarBall>(const CrsData::SObject &) 	801ef850
GeographyObj::NewS<TMapObjKpFireBall>(const CrsData::SObject &) 	801ef8d8
TMapObjAwardCup::~TMapObjAwardCup() 	801ef910
TMapObjSanboParts::~TMapObjSanboParts() 	801ef9ec
TMapObjHioNode::~TMapObjHioNode() 	801efa94
GeographyObj::NewS<GeoWaterDown>(const CrsData::SObject &) 	801efb14
GeographyObj::NewS<GeoWaterMiddleD>(const CrsData::SObject &) 	801efb4c
GeographyObj::New<TMapObjDonkyRockGen>(const CrsData::SObject &) 	801efb84
GeographyObj::New<TMapObjFireCircle>(const CrsData::SObject &) 	801efbcc
GeographyObj::New<GeoItemGen>(const CrsData::SObject &) 	801efc14
GeographyObj::New<TSMAButterflyGen>(const CrsData::SObject &) 	801efc5c
GeographyObj::New<TSMADonkyBirdGen>(const CrsData::SObject &) 	801efca4
GeographyObj::New<TSMABoidBirdManager>(const CrsData::SObject &) 	801efcec
GeographyObj::New<TTestString>(const CrsData::SObject &) 	801efd34
GeographyObj::NewS<TBalloonString>(const CrsData::SObject &) 	801efd7c
GeographyObj::New<TLensFlare>(const CrsData::SObject &) 	801efdb4
GeographyObj::New<TDistSnow>(const CrsData::SObject &) 	801efdfc
GeographyObj::NewS<TBalloonManager>(const CrsData::SObject &) 	801efe44
GeographyObj::New<GeoAirJet>(const CrsData::SObject &) 	801efe7c
GeographyObj::NewS<TMapObjNossieColHead>(const CrsData::SObject &) 	801efec4
GeographyObj::NewS<TMapObjNossieColFootFront>(const CrsData::SObject &) 	801eff3c
GeographyObj::NewS<TMapObjNossieColFootRear>(const CrsData::SObject &) 	801effc0
GeographyObj::NewS<TMapObjNossieColBody>(const CrsData::SObject &) 	801f0044
GeographyObj::New<TMapObjHanabi>(const CrsData::SObject &) 	801f00b4
GeographyObj::New<GeoSplash>(const CrsData::SObject &) 	801f00fc
GeographyObj::New<GeoTideSensor>(const CrsData::SObject &) 	801f0144
GeographyObj::New<GeoPuller>(const CrsData::SObject &) 	801f018c
GeographyObj::New<GeoShimmer>(const CrsData::SObject &) 	801f01d4
GeographyObj::NewS<TMapObjPakkunColHead>(const CrsData::SObject &) 	801f021c
GeographyObj::New<GeoSoundGen>(const CrsData::SObject &) 	801f027c
GeographyObj::New<GeoRabbitMark>(const CrsData::SObject &) 	801f02c4
TMapObjNossieColFoot::~TMapObjNossieColFoot() 	801f030c
TMapObjNossieColBase::~TMapObjNossieColBase() 	801f03bc
TMapObjStamper::~TMapObjStamper() 	801f045c
ExGeographyObj::ExNew<GeoJumpNarrow>(const CrsData::SObject &) 	801f04ec
ExGeographyObj::ExNew<StringBridge>(const CrsData::SObject &) 	801f0534
GeographyObjManager::GeographyObjManager(const CrsData &) 	801f057c
JSUList<GeographyObj>::JSUList() 	801f07cc
JSUList<GeoObjSupervisor>::~JSUList() 	801f07fc
JSUList<GeographyObj>::~JSUList() 	801f0848
GeographyObjManager::checkMiniGameMode() 	801f0894
GeographyObjManager::~GeographyObjManager() 	801f0930
GeographyObjManager::clrKartHittingList() 	801f0a48
GeographyObjManager::setKartHitItemBoxTrigger(int) 	801f0ac4
GeographyObjManager::tstKartHitItemBoxTrigger(int) 	801f0ad4
GeographyObjManager::setNewItemBoxObj(GeographyObj *) 	801f0ae0
GeographyObjManager::resetAllGeoObj() 	801f0bec
GeographyObjManager::checkObjList(const CrsData &) 	801f0d54
GeographyObjManager::checkItemBoxObjList(const CrsData &) 	801f0ea4
GeographyObjManager::chkCreateNormalObj(const CrsData::SObject *, unsigned long) 	801f11e4
GeographyObjManager::chkCreateItemBoxObj(const CrsData::SObject *, unsigned long) 	801f1240
GeographyObjManager::appendKindObjList(GeographyObj *) 	801f129c
GeographyObjManager::checkJugemObjList(const CrsData &) 	801f12bc
GeographyObjManager::setSequentialID() 	801f155c
GeographyObjManager::countObjNum(const CrsData::SObject *) 	801f16e8
GeographyObjManager::createObj(unsigned long, const CrsData::SObject *) 	801f184c
GeographyObjManager::createSubObj(unsigned long) 	801f18d0
GeographyObjManager::createPrevDrawSubObj(unsigned long) 	801f1968
GeographyObjManager::createGenSubObj(unsigned long) 	801f1a00
GeographyObjManager::checkGenObjList(const CrsData &) 	801f1aa8
GeographyObjManager::createAppendGenObj(unsigned long, const CrsData::SObject *) 	801f1c00
GeographyObjManager::createAllBalloonObj() 	801f1cc4
GeographyObjManager::setObjectByCrsData(const CrsData &) 	801f1e40
GeographyObjManager::setGeoObjNum(const CrsData &) 	801f23ac
GeographyObjManager::setModelData(GeographyObj *) 	801f2434
GeographyObjManager::createModel_norm(const JSUListIterator<GeographyObj> &, GeographyObj **, JKRSolidHeap *, unsigned long) 	801f26f8
GeographyObjManager::createModel_shadow(GeographyObj *, GeographyObj **, JKRSolidHeap *, unsigned long) 	801f27c4
GeographyObjManager::loadAnimation(GeographyObj *, GeographyObj **) 	801f2898
GeoObjTransAnmInfo::GeoObjTransAnmInfo() 	801f30bc
GeographyObjManager::chkAnmTableNum(GeographyObj *, unsigned char *, MatAnmInfo *) 	801f30d0
GeographyObjManager::registerAnimation(GeographyObj *) 	801f3240
GeographyObjManager::makeSharedDL(GeographyObj *, GeographyObj **) 	801f350c
GeographyObjManager::makeShadowSharedDL(GeographyObj *, GeographyObj **) 	801f3564
GeographyObjManager::getKartCollidePosRadius(JGeometry::TVec3<float> &, float &, int) 	801f35a4
GeographyObjManager::calc() 	801f35d4
GeographyObjManager::IsCheckKartToObject(int) const 	801f3b40
GeographyObjManager::Collide_norm(const JSUListIterator<GeographyObj> &, const int &, const JGeometry::TVec3<float> &, const float &) 	801f3b4c
GeographyObjManager::Calc_norm(const JSUListIterator<GeographyObj> &) 	801f3c50
GeographyObjManager::load() 	801f3cd0
GeographyObjManager::loadObjects<JSUList<ExGeographyObj>, JSUListIterator<ExGeographyObj>>(JSUList<ExGeographyObj> *, JSUListIterator<ExGeographyObj> &) 	801f41bc
GeographyObjManager::loadObjects<JSUList<GeographyObj>, JSUListIterator<GeographyObj>>(JSUList<GeographyObj> *, JSUListIterator<GeographyObj> &) 	801f45ec
GeographyObjManager::getModelData(unsigned long) 	801f4a1c
GeographyObjManager::getShadowModelData(unsigned long) 	801f4a2c
GeographyObjManager::dispose() 	801f4a3c
GeographyObjManager::reset(const CrsData &) 	801f4a48
GeographyObjManager::append(GeographyObj *) 	801f4bb4
GeographyObjManager::prevdraw_append(GeographyObj *) 	801f4bf0
GeographyObjManager::genappend(GeographyObj *) 	801f4c18
GeographyObjManager::jugemappend(GeographyObj *) 	801f4c40
GeographyObjManager::blockappend(ExGeographyObj *) 	801f4c7c
GeographyObjManager::spappend(ExGeographyObj *) 	801f4ca4
GeographyObjManager::boxappend(GeographyObj *) 	801f4ccc
GeographyObjManager::boxremove(GeographyObj *, unsigned long) 	801f4d08
GeographyObjManager::update() 	801f4d74
GeographyObjManager::update_foreground() 	801f4dd4
GeographyObjManager::update_groundObj() 	801f4e14
GeographyObjManager::viewCalc(unsigned long) 	801f4eb4
GeographyObjManager::viewCalc_foreground(unsigned long) 	801f4fb0
GeographyObjManager::viewCalc_groundObj(unsigned long) 	801f5068
GeographyObjManager::setCurrentViewNo(unsigned long) 	801f51c0
GeographyObjManager::setCurrentViewNo_foreground(unsigned long) 	801f5244
GeographyObjManager::setCurrentViewNo_groundObj(unsigned long) 	801f5298
GeographyObjManager::search_boundEx(const JGeometry::TVec3<float> &, GeographyObj *) 	801f5348
GeographyObjManager::search_boundSp(const JGeometry::TVec3<float> &, GeographyObj *) 	801f53e4
GeographyObjManager::search_boundSp(const JGeometry::TVec3<float> &, float) 	801f5458
GeographyObjManager::drawPrim(unsigned long) 	801f54d0
GeographyObjManager::drawSimpleModel(unsigned long) 	801f54d4
GeographyObjManager::drawSimpleModel_groundObj(unsigned long) 	801f55dc
GeographyObjManager::drawGXObj(unsigned long) 	801f56e0
GeographyObjManager::getJugem(int) const 	801f572c
GeographyObjManager::getBalloonMgr(int) const 	801f573c
TMapObjNossieColFootRear::~TMapObjNossieColFootRear() 	801f574c
TMapObjNossieColFootRear::getShadowBmdFileName() 	801f580c
TMapObjNossieColFoot::getReaction() 	801f5818
TMapObjStamper::checkFrame(int) 	801f5820
TMapObjStamper::getReleaseFrame() 	801f5874
TMapObjStamper::startStamp(int) 	801f587c
TMapObjStamper::endStamp(int) 	801f58c4
TMapObjNossieColFootFront::~TMapObjNossieColFootFront() 	801f58d4
TMapObjNossieColFootFront::getShadowBmdFileName() 	801f5994
TMapObjAwardCupAllTour::getBmdFileName() 	801f59a0
TMapObjAwardCupAllTour::getBtpFileName() 	801f59ac
TMapObjAwardCup::getJ3DModelDataTevStageNum() const 	801f59b8
TMapObjAwardCup::getSupervisor() 	801f59c0
TMapObjAwardCupAllTour::~TMapObjAwardCupAllTour() 	801f59c8
TMapObjAwardCupReverse::getBmdFileName() 	801f5ac4
TMapObjAwardCupReverse::getBtpFileName() 	801f5ad0
TMapObjAwardCupReverse::~TMapObjAwardCupReverse() 	801f5adc
TMapObjAwardCupSpecial::getBmdFileName() 	801f5bd8
TMapObjAwardCupSpecial::getBtpFileName() 	801f5be4
TMapObjAwardCupSpecial::~TMapObjAwardCupSpecial() 	801f5bf0
TMapObjAwardCupStar::getBmdFileName() 	801f5cec
TMapObjAwardCupStar::getBtpFileName() 	801f5cf8
TMapObjAwardCupStar::~TMapObjAwardCupStar() 	801f5d04
TMapObjAwardCupFlower::getBmdFileName() 	801f5e00
TMapObjAwardCupFlower::getBtpFileName() 	801f5e0c
TMapObjAwardCupFlower::~TMapObjAwardCupFlower() 	801f5e18
TMapObjAwardCupKinoko::getBmdFileName() 	801f5f14
TMapObjAwardCupKinoko::getBtpFileName() 	801f5f20
TMapObjAwardCupKinoko::~TMapObjAwardCupKinoko() 	801f5f2c
TMapObjDanceMonteB::~TMapObjDanceMonteB() 	801f6028
TMapObjDanceMonteB::getBmdFileName() 	801f6080
TMapObjDanceMonte::getShadowBmdFileName() 	801f608c
TMapObjDemoObj::getJ3DModelDataTevStageNum() const 	801f6098
TMapObjDanceMonteA::~TMapObjDanceMonteA() 	801f60a4
TMapObjDanceMonteA::getBmdFileName() 	801f60fc
TMapObjMareW_C::~TMapObjMareW_C() 	801f6108
TMapObjMareW_C::getBmdFileName() 	801f6160
TMapObjMareWBase::getShadowBmdFileName() 	801f616c
TMapObjMareW_B::~TMapObjMareW_B() 	801f6178
TMapObjMareW_B::getBmdFileName() 	801f61d0
TMapObjMareW_A::~TMapObjMareW_A() 	801f61dc
TMapObjMareW_A::getBmdFileName() 	801f6234
TMapObjMonteE::getBmdFileName() 	801f6240
TMapObjMonteBase::getShadowBmdFileName() 	801f624c
TMapObjMonteE::~TMapObjMonteE() 	801f6258
TMapObjMonteD::getBmdFileName() 	801f62b8
TMapObjMonteD::~TMapObjMonteD() 	801f62c4
TMapObjMonteC::getBmdFileName() 	801f6324
TMapObjMonteC::~TMapObjMonteC() 	801f6330
TMapObjMonteB::getBmdFileName() 	801f6390
TMapObjMonteB::~TMapObjMonteB() 	801f639c
TMapObjMonteA::getBmdFileName() 	801f63fc
TMapObjMonteA::~TMapObjMonteA() 	801f6408
TMapObjMareC::getBmdFileName() 	801f6468
TMapObjMareBase::getShadowBmdFileName() 	801f6474
TMapObjMareC::~TMapObjMareC() 	801f6480
TMapObjMareB::getBmdFileName() 	801f64e0
TMapObjMareB::~TMapObjMareB() 	801f64ec
TMapObjMareA::getBmdFileName() 	801f654c
TMapObjMareA::~TMapObjMareA() 	801f6558
__sinit_GeographyObjMgr_cpp	801f65b8
TMapObjMareA::@364@~TMapObjMareA	801f66c4
TMapObjMareB::@364@~TMapObjMareB	801f66cc
TMapObjMareBase::@364@InitExec	801f66d4
TMapObjMareBase::@364@MoveExec	801f66dc
TMapObjMareC::@364@~TMapObjMareC	801f66e4
TMapObjMonteA::@364@~TMapObjMonteA	801f66ec
TMapObjMonteB::@364@~TMapObjMonteB	801f66f4
TMapObjMonteC::@364@~TMapObjMonteC	801f66fc
TMapObjMonteD::@364@~TMapObjMonteD	801f6704
TMapObjMonteBase::@364@InitExec	801f670c
MapObjMonteBase::@364@MoveExec	801f6714
TMapObjMonteE::@364@~TMapObjMonteE	801f671c
TMapObjAwardCupKinoko::@364@~TMapObjAwardCupKinoko	801f6724
TMapObjAwardCupKinoko::@376@~TMapObjAwardCupKinoko	801f672c
TMapObjAwardCupFlower::@364@~TMapObjAwardCupFlower	801f6734
TMapObjAwardCupFlower::@376@~TMapObjAwardCupFlower	801f673c
TMapObjAwardCupStar::@364@~TMapObjAwardCupStar	801f6744
TMapObjAwardCupStar::@376@~TMapObjAwardCupStar	801f674c
TMapObjAwardCupSpecial::@364@~TMapObjAwardCupSpecial	801f6754
TMapObjAwardCupSpecial::@376@~TMapObjAwardCupSpecial	801f675c
TMapObjAwardCupReverse::@364@__dt	801f6764
TMapObjAwardCupReverse::@376@__dt	801f676c
TMapObjAwardCup::@364@InitExec	801f6774
TMapObjAwardCup::@364@MoveExec	801f677c
TMapObjAwardCupAllTour::@364@~TMapObjAwardCupAllTour	801f6784
TMapObjAwardCupAllTour::@376@~TMapObjAwardCupAllTour	801f678c
GeographyObj::GeographyObj(const CrsData::SObject &) 	801f6794
GeographyObj::GeographyObj(unsigned long) 	801f6868
GeographyObj::setDefaultItemReaction() 	801f6920
GeographyObj::calc_norm() 	801f6a08
GeographyObj::update_norm() 	801f6a48
GeographyObj::update() 	801f6a9c
GeographyObj::viewCalc(unsigned long) 	801f6aec
GeographyObj::setCurrentViewNo(unsigned long) 	801f6b18
GeographyObj::loadShadowModel(J3DModelData *, unsigned long) 	801f6b44
GeographyObj::setModelMatrixAndScale() 	801f6bf8
GeographyObj::getAssignedModelXYZdir(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *) 	801f6c50
GeographyObj::getAssignedModelMatrix(float (*) [4]) 	801f6d80
GeographyObj::resetObject() 	801f6fe4
GeographyObj::IsHitKart(const JGeometry::TVec3<float> &, float, JGeometry::TVec3<float> *) 	801f720c
GeographyObj::IsHitObject(const JGeometry::TVec3<float> &, ObjColBase *) 	801f7364
GeographyObj::setIsHitKartFlg(int) 	801f7440
GeographyObj::clrIsHitKartSoundFlg(int) 	801f7490
GeographyObj::tstUserFlg1(int) const 	801f74b8
GeographyObj::clrUserFlg1(int) 	801f74d4
GeographyObj::setUserFlg1(int) 	801f74ec
GeographyObj::getHitSoundDegree() 	801f7504
GeographyObj::getSoundID() const 	801f753c
GeographyObj::createMultiBoundsPtrAll(unsigned char) 	801f7548
GeographyObj::calcBoundsGlPos() 	801f7654
GeographyObj::createBoundsSphere(J3DModelData *) 	801f76cc
GeographyObj::createBoundsSphere(float, float) 	801f77b0
GeographyObj::createMultiBoundsSphere(unsigned char, float, float) 	801f78a0
GeographyObj::createBoundsCylinder(J3DModelData *, float, float) 	801f7930
GeographyObj::createBoundsCylinder(float, float, float) 	801f7a50
GeographyObj::createMultiBoundsCylinder(unsigned char, J3DModelData *, float, float) 	801f7b68
GeographyObj::createBoundsCube(J3DModelData *) 	801f7c38
GeographyObj::setColObjPos(const JGeometry::TVec3<float> &, unsigned char) 	801f7d54
GeographyObj::createColModel(J3DModelData *) 	801f7d90
GeographyObj::createShadowModel(JKRSolidHeap *, unsigned long) 	801f7d94
GeographyObj::getGeoRnd() 	801f7e48
GeographyObj::moveShadowModel() 	801f7e6c
GeographyObj::doKartColCallBack(int) 	801f7f1c
GeographyObj::createSoundMgr() 	801f7f20
GeographyObj::getColScaleRadius() 	801f7f78
GeographyObj::getAxisMaxScale() 	801f7fe8
GeographyObj::simpleDraw(unsigned long) 	801f8010
GeographyObj::lockMdl() 	801f808c
GeographyObj::getSRTMtx(float (*) [4]) 	801f80bc
GeographyObj::setBoundScaleAll() 	801f8124
GeographyObj::getAllBoundDepth() 	801f8188
GeographyObj::getItemThrowDirPow(JGeometry::TVec3<float> *, float *, const ItemObj &) 	801f81c0
GeographyObj::getKartThrowDirPow(JGeometry::TVec3<float> *, float *, int) 	801f81c4
GeographyObj::setObjData(const CrsData::SObject &, bool) 	801f81c8
ItemColReaction::init() 	801f8200
ItemColReaction::setFlg(unsigned long, unsigned char) 	801f8228
ItemColReaction::tstFlg(unsigned long) 	801f8260
GeoObjSupervisor::createModel(JKRSolidHeap *, unsigned long) 	801f8280
__sinit_GeographyObj_cpp	801f8284
GeoTree::reset() 	801f8390
GeoTree::createColModel(J3DModelData *) 	801f83c4
GeoTree::getBmdFileName() 	801f83ec
GeoTree::calc() 	801f8414
GeoTree::availBckAnm() 	801f8418
GeoMarioTree1::GeoMarioTree1(const CrsData::SObject &) 	801f8448
GeoTree::~GeoTree() 	801f849c
GeoMarioTree1::reset() 	801f851c
GeoMarioTree1::createColModel(J3DModelData *) 	801f85c0
GeoMarioTree1::createModel(JKRSolidHeap *, unsigned long) 	801f86c8
GeoMarioTree1::getBmdFileName() 	801f86f8
GeoMarioTree1::calc() 	801f8720
GeoMarioTree1::doKartColCallBack(int) 	801f8724
GeoMarioTree1::getAnmTbl() 	801f8790
GeoMarioTree1::getSizeAnmTbl() 	801f87c4
GeoMarioKinoko1::GeoMarioKinoko1(const CrsData::SObject &) 	801f87cc
GeoMarioKinoko1::createColModel(J3DModelData *) 	801f8814
GeoMarioKinoko1::getBmdFileName() 	801f883c
GeoMarioKinoko1::calc() 	801f8864
GeoMarioKinoko1::~GeoMarioKinoko1() 	801f8868
GeoMarioTree1::~GeoMarioTree1() 	801f88f8
__sinit_GeoTree_cpp	801f8988
ObjColBase::ObjColBase(J3DModelData *, JGeometry::TVec3<float>, ObjColBase::CKind) 	801f8a94
ObjColBase::initRadius(J3DModelData *) 	801f8b04
ObjColBase::ObjColBase(float, float, ObjColBase::CKind) 	801f8b68
ObjColBase::setScale(const JGeometry::TVec3<float> &) 	801f8b98
ObjColSphere::IsHitSphere(JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801f8bc4
ObjColSphere::IsHitCylinder(JGeometry::TVec3<float>, JGeometry::TVec3<float>, const ObjColCylinder &) 	801f8c7c
ObjColCylinder::IsHitSphere(JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801f8d6c
ObjColCylinder::IsHitCylinder(JGeometry::TVec3<float>, JGeometry::TVec3<float>, const ObjColCylinder &) 	801f8e4c
ObjColCube::makeParameter(J3DModelData *, float (*) [4]) 	801f8f3c
ObjColCube::updateParameter(float (*) [4]) 	801f911c
ObjColCube::chkIsHitQuad(const JGeometry::TVec3<float> &, const float &) 	801f91f8
ObjColCube::IsHitSphere(JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801f93cc
ObjColCube::IsHitCylinder(JGeometry::TVec3<float>, JGeometry::TVec3<float>, const ObjColCylinder &) 	801f9480
ExObjColBase::IsHitBound(JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801f94ec
ExObjColBase::IsHitBoundRadius(JGeometry::TVec3<float>, float) 	801f95ec
ExObjColBase::setBottom(float) 	801f9670
ObjColJump1::makeParameter(J3DModelData *, float (*) [4]) 	801f9680
ObjColJump1::SearchWall(JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801f994c
ObjColJump1::Search(JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801f9c14
ObjColJump1::IsHitSphere(JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801f9d20
ObjColJump1::IsHitCylinder(JGeometry::TVec3<float>, JGeometry::TVec3<float>, const ObjColCylinder &) 	801f9d28
ObjColBlock::makeParameter(J3DModelData *, float (*) [4]) 	801f9d30
ObjColBlock::SearchWall(JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801fa020
ObjColBlock::Search(JGeometry::TVec3<float>, JGeometry::TVec3<float>) 	801fa4b8
ObjColBlock::IsHitSphere(JGeometry::TVec3<float>, JGeometry::TVec3<float>, float) 	801fa5ac
ObjColBlock::IsHitCylinder(JGeometry::TVec3<float>, JGeometry::TVec3<float>, const ObjColCylinder &) 	801fa5b4
ExObjColBase::IsOnDashPlane(JGeometry::TVec3<float>) 	801fa5bc
__sinit_ObjCollision_cpp	801fa5c4
GeoMarioFlower1::GeoMarioFlower1(const CrsData::SObject &) 	801fa6d0
GeoMarioFlower1::reset() 	801fa734
GeoMarioFlower1::loadAnimation() 	801fa7e0
GeoMarioFlower1::createColModel(J3DModelData *) 	801fa82c
GeoMarioFlower1::createModel(JKRSolidHeap *, unsigned long) 	801fa830
GeoMarioFlower1::getBmdFileName() 	801fa904
GeoMarioFlower1::calc() 	801fa92c
GeoMarioFlower1::~GeoMarioFlower1() 	801fa930
__sinit_GeoRFlower_cpp	801fa9b0
GeoJumpNarrow::GeoJumpNarrow(const CrsData::SObject &) 	801faabc
GeoJumpNarrow::reset() 	801fab28
GeoJumpNarrow::createColModel(J3DModelData *) 	801fab5c
GeoJumpNarrow::getBmdFileName() 	801fac50
GeoJumpNarrow::calc() 	801fac78
GeoJumpNarrow::~GeoJumpNarrow() 	801fac7c
__sinit_GeoJumpNarrow_cpp	801fad24
RotAnimationObj::RotAnimationObj() 	801fae30
RotAnimationObj::resetRotAnimation(stRandom *) 	801fae6c
RotAnimationObj::setModelXYZDir(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	801faea0
RotAnimationObj::calcRotAnimation(JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &) 	801faed4
GeoItemBox::GeoItemBox(const CrsData::SObject &) 	801fb114
GeoItemBox::GeoItemBox() 	801fb19c
GeoItemBox::initialize() 	801fb228
GeoItemBox::getAnmTbl() 	801fb27c
GeoItemBox::getSizeAnmTbl() 	801fb304
GeoItemBox::setInactiveTime() 	801fb390
GeoItemBox::reset() 	801fb39c
GeoItemBox::createModel(JKRSolidHeap *, unsigned long) 	801fb528
GeoItemBox::createColModel(J3DModelData *) 	801fb570
GeoItemBox::createShadowModel(JKRSolidHeap *, unsigned long) 	801fb598
GeoItemBox::getBmdName() 	801fb5dc
GeoItemBox::getShadowBmdName() 	801fb66c
GeoItemBox::getBmdFileName() 	801fb694
GeoItemBox::getShadowBmdFileName() 	801fb724
GeoItemBox::calc() 	801fb74c
GeoItemBox::rotAnimation() 	801fb780
GeoItemBox::doMode() 	801fb9c4
GeoItemBox::doInactive() 	801fba20
GeoItemBox::setOpeningPos() 	801fbbd0
GeoItemBox::doOpening() 	801fbbd4
GeoItemBox::doEnding() 	801fbcb4
GeoItemBox::doHide() 	801fbd70
GeoItemBox::doKartColCallBack(int) 	801fbdc8
GeoItemBox::getInactiveTime() 	801fbfb0
GeoF_ItemBox::GeoF_ItemBox(const CrsData::SObject &) 	801fbfb8
GeoItemBox::~GeoItemBox() 	801fc118
GeoF_ItemBox::reset() 	801fc198
GeoF_ItemBox::calc() 	801fc3b0
GeoDoubleItemBox::GeoDoubleItemBox() 	801fc868
GeoDoubleItemBox::getBmdFileName() 	801fc950
GeoDoubleItemBox::createColModel(J3DModelData *) 	801fc9e0
GeoDoubleItemBox::getAnmTbl() 	801fca08
GeoDoubleItemBox::getSizeAnmTbl() 	801fca80
GeoDoubleItemBox::~GeoDoubleItemBox() 	801fcb0c
GeoItemBox::getJ3DModelDataTevStageNum() const 	801fcb9c
GeoF_ItemBox::~GeoF_ItemBox() 	801fcba4
__sinit_GeoItemBox_cpp	801fcc34
JPSnowEmitterCallBack::execute(JPABaseEmitter *) 	801fcd40
JPSnowEmitterCallBack::draw(JPABaseEmitter *) 	801fcee0
JPEffectMgr::JPEffectMgr(JKRHeap *, bool, unsigned char) 	801fcee4
JPEffectMgr::reset() 	801fcf9c
JPEffectMgr::reset_forMenu() 	801fd304
JPEffectMgr::getHashValue(const char *) 	801fd368
JPEffectMgr::create2DEmtMgr(JPAResourceManager *, unsigned short, unsigned short) 	801fd38c
JPEffectMgr::create_forMenu() 	801fd4d0
JPEffectMgr::createEmt(unsigned short, const JGeometry::TVec3<float> &) 	801fd650
JPEffectMgr::createEmt(const char *, const JGeometry::TVec3<float> &) 	801fd688
JPEffectMgr::createEmtCameraClip(const char *, const JGeometry::TVec3<float> &) 	801fd6d4
JPEffectMgr::createEmt2D(const char *, const JGeometry::TVec3<float> &) 	801fd744
JPEffectMgr::createEmt(const char *, const JGeometry::TVec3<float> &, float (*) [4]) 	801fd790
JPEffectMgr::createEmtThunder(const char *, const JGeometry::TVec3<float> &) 	801fd804
JPEffectMgr::createEmtCam(const char *, const JGeometry::TVec3<float> &, unsigned char) 	801fd850
JPEffectMgr::createEmtBefore2DMulti(const char *, const JGeometry::TVec3<float> &, unsigned char) 	801fd8a8
JPEffectMgr::deleteEmt(JPABaseEmitter *) 	801fd900
JPEffectMgr::deleteEmtThunder(JPABaseEmitter *) 	801fd924
JPEffectMgr::deleteEmt2D(JPABaseEmitter *) 	801fd948
JPEffectMgr::deleteEmtCam(JPABaseEmitter *, unsigned char) 	801fd96c
JPEffectMgr::deleteEmtBefore2DMulti(JPABaseEmitter *, unsigned char) 	801fd998
JPEffectMgr::clipEmitterCameraNumFlg(JPABaseEmitter *) 	801fd9c4
JPEffectMgr::calc() 	801fda20
JPEffectMgr::calc_forMenu() 	801fdaa0
JPEffectMgr::draw(int) 	801fdb04
JPEffectMgr::draw_thunder(int) 	801fdbc4
JPEffectMgr::draw_for2D() 	801fdc74
JPEffectMgr::draw_forBefore2D() 	801fdd44
JPEffectMgr::draw_forBefore2D(unsigned char) 	801fde14
JPEffectMgr::createSnowEmt() 	801fdfb4
JPEffectMgr::createAwardDemoEmt(bool) 	801fe108
JPEffectMgr::createRainbowEmt() 	801fe1b4
JPEffectMgr::createCupStartDemoEmt() 	801fe214
JPEffectMgr::resetSnowCamVel() 	801fe2d8
JPEffectMgr::calcSnowCamVel() 	801fe334
JPSnowEmitterCallBack::~JPSnowEmitterCallBack() 	801fe41c
__sinit_JPEffectMgr_cpp	801fe474
stParticleDynamics::stParticleDynamics() 	801fe5ac
stParticleDynamics::Remove(JSUList<stParticle> &, JSUListIterator<stParticle> &) 	801fe628
stParticleDynamics::update() 	801fe67c
stParticleDynamics::createParticles() 	801fe6e0
stParticleDynamics::getRndDir(JGeometry::TVec3<float> *) 	801fede4
stParticleDynamics::doLife() 	801feea4
stParticleDynamics::doAirFric() 	801fef30
stParticleDynamics::doGravity() 	801fef68
stParticleDynamics::doMove() 	801fef98
stParticleDynamics::doInterpolation60() 	801ff014
stParticleDynamics::doRotate() 	801ff040
stParticleDraw::GXInitDraw() 	801ff0b0
stParticleDraw::setBillBoard() 	801ff1e0
stParticleDraw::setBillBoardXZ() 	801ff2f4
stParticleDraw::setDirectional() 	801ff408
stParticleDraw::setLine() 	801ff538
stParticleDraw::setChild() 	801ff5c4
stParticleDraw::draw() 	801ff6b4
stParticleDraw::drawParticles() 	801ff6d4
stParticleDraw::drawEachParticle(JSUListIterator<stParticle> &) 	801ff710
stParticleDraw::drawOrder() 	801ffc18
stParticleDraw::drawRev() 	801ffd5c
stParticleDraw::drawParentBillBoardCommon(JSUListIterator<stParticle> &, float (*) [4]) 	801ffdb8
stParticleDraw::drawParentBillBoard(JSUListIterator<stParticle> &) 	80200070
stParticleDraw::drawParentBillBoardXZ(JSUListIterator<stParticle> &) 	80200134
stParticleDraw::drawParentDirectional(JSUListIterator<stParticle> &) 	802001f8
JGeometry::TRotation3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>>::setRotate(const JGeometry::TVec3<float> &, float) 	80200894
stParticleDraw::drawParentLine(JSUListIterator<stParticle> &) 	80200a18
stParticleDraw::drawChild(JSUListIterator<stParticle> &) 	80200ec4
stParticleDraw::GXDrawBegin(unsigned long) 	8020148c
stParticleDraw::setPresetTevMode(stParticleDraw::cKindTevMode) 	802015a4
stParticleDraw::dsSetTevBlendMode() 	802016a0
stParticleMgr::stParticleMgr() 	80201744
stParticleMgr::init(int) 	80201814
__sinit_stParticle_cpp	802018f8
stEmitterCallBack::setIpData(stEmitterCallBack::stFileParamPtrList *) 	80201a1c
stEmitter::operator= (const stEmitter &) 	80201a74
stEmitterCallBack::getTirePos(JGeometry::TVec3<float> *) 	80201c58
stEmitterCallBack::getDriftPos(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	80201ca8
stEmitterCallBack::calc_lineIp(float, float, float, float, float, bool, float) 	80201e18
stEmitterCallBack::calc_lineIpFollow(float, float, float, float, float, bool, float) 	80202124
stEmitterCallBack::strategy(float, float, float, float, bool, float) 	8020231c
stEmitterCallBack::calcParam(float, float, float, float) 	80202398
stEmitterCallBack::getLerpLineRate(const float &, const float &, const float &, const float &) 	802023ec
stEmitterCallBack::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8020242c
stEmitterParamLineIP::Init(unsigned char, stEmitter *, stEmitter *) 	80202434
stEmitterParamLineIP::AddFunc(stEmitterParamLineIP::cIpParam) 	802024c8
stEmitterParamLineIP::DoIp(float) 	802026c0
stEmitterParamLineIP::doLife() 	80202724
stEmitterParamLineIP::doCreateRate() 	80202790
stEmitterParamLineIP::doRateStep() 	802027ec
stEmitterParamLineIP::doFirstVel() 	80202848
stEmitterParamLineIP::doSize() 	80202870
stEmitterParamLineIP::doSizeFirst() 	802028bc
stEmitterParamLineIP::doSizeLast() 	802028e4
stEmitterParamLineIP::doLifeRndRate() 	8020290c
stEmitterParamLineIP::doFirstVelRndAngle() 	80202934
stEmitterParamLineIP::doAlphaStdRate() 	8020295c
stEmitterParamLineIP::doGravity() 	80202984
stEmitterParamLineIP::doAirFric() 	802029ac
stEmitter::stEmitter() 	802029d4
stEmitterPtclMgr::calc() 	80202aac
stEmitterPtclMgr::draw(unsigned long) 	80202c20
stEmitterPtclMgr::Create(stEmitterCallBack *, unsigned short) 	80202ca4
stEmitterPtclMgr::RemoveEmt(JSUList<stEmitterPtcl> &, JSUListIterator<stEmitterPtcl> &) 	80202db0
stEmitterPtclMgr::ChkRemoveBecomeInvalidEmt(JSUList<stEmitterPtcl> &, JSUListIterator<stEmitterPtcl> &) 	80202e48
stEmitterPtclMgr::removeAllEmt() 	80202f00
__sinit_stEmitter_cpp	80202fa4
stEffectMgr::stEffectMgr() 	802030b0
stEffectMgr::stWaterEffectStatus::stWaterEffectStatus() 	80203348
stEffectMgr::stTireEffectStatus::stTireEffectStatus() 	80203380
stEffectMgr::stTireEfctStatusSet::stTireEfctStatusSet() 	80203414
stEffectMgr::createEmitterAndParticles() 	80203458
stParticle::~stParticle() 	802035fc
stParticle::stParticle() 	80203654
stEmitterPtcl::~stEmitterPtcl() 	8020368c
stEmitterPtcl::stEmitterPtcl() 	80203704
stEffectMgr::createKartExhaustMtx() 	80203758
stEffectMgr::createModel(JKRSolidHeap *, unsigned long) 	802038f0
stEffectMgr::init() 	80203a74
stEfctCrsWaterBubble::~stEfctCrsWaterBubble() 	80204000
stEfctCrsWaterSpray::~stEfctCrsWaterSpray() 	8020407c
stEfctWaterBubble::~stEfctWaterBubble() 	802040f8
stEfctWaterBubble::__defctor() 	80204164
stEfctWaterSpray::~stEfctWaterSpray() 	80204188
stEfctWaterSprayCenter::~stEfctWaterSprayCenter() 	802041f4
stEfctWaterTrack::~stEfctWaterTrack() 	80204260
stEfctKinokoDash3::~stEfctKinokoDash3() 	802042cc
stEfctKinokoDash2::~stEfctKinokoDash2() 	80204348
stEfctKinokoDash1::~stEfctKinokoDash1() 	802043c4
stEffectMgr::initCallBackPtr(stEmitterCallBack *, short, short) 	80204440
stEffectMgr::reset() 	8020444c
stEffectMgr::calc() 	802047cc
stEffectMgr::calcGndAttrEffect() 	802048ac
stEffectMgr::calcGndCenterEffect(int, bool) 	802049a8
stEffectMgr::calcGndTireEffect(int, bool, stEffectMgr::stTireEfctStatusSet *) 	80204b54
stEffectMgr::calcDriftSparkEfct(int, unsigned char, stEffectMgr::stTireEffectStatus *, unsigned long) 	80204f18
stEffectMgr::calcSideGEfct(int, int, stEffectMgr::stTireEffectStatus *, bool) 	80204fe4
stEffectMgr::calcSpinTurnEfct(int, int, stEffectMgr::stTireEffectStatus *, bool) 	80205184
stEffectMgr::calcDriftEfct(int, int, stEffectMgr::stTireEffectStatus *, bool) 	80205298
stEffectMgr::createDriftEfct(int, int, stEffectMgr::stTireEffectStatus *, int) 	802053d4
stEffectMgr::calcGndCharEffect(int, bool) 	8020543c
stEffectMgr::calcWaterAttrEffect(int) 	8020561c
stEffectMgr::findParamPtrTire(int, CrsGround *, stEffectMgr::stTireEffectStatus *, unsigned char) 	802058a8
stEffectMgr::findParamPtrCenter(int, CrsGround *, stEffectMgr::stTireEffectStatus *, unsigned char) 	80205ad4
stEffectMgr::findParamPtrChar(int, CrsGround *, stEffectMgr::stTireEffectStatus *, unsigned char) 	80205d7c
stEffectMgr::findParamPtrCommon(int) 	80205e94
stEffectMgr::chkAvailablePtrList(int, int) 	80205ea4
stEffectMgr::calcAttrRoad(int, int, stEffectMgr::stTireEffectStatus *, unsigned char) 	80205f54
stEffectMgr::calcAttrRoadCenter(int, stEffectMgr::stTireEffectStatus *, unsigned char) 	8020602c
stEffectMgr::calcAttrRoadCharCenter(int, stEffectMgr::stTireEffectStatus *, unsigned char) 	802060bc
stEffectMgr::calcAttrWeedCharCenter(int, stEffectMgr::stTireEffectStatus *, unsigned char) 	80206114
stEffectMgr::setDriftStatus(int, int, stEffectMgr::stTireEffectStatus *) 	8020616c
stEffectMgr::draw(unsigned long) 	80206200
stEffectMgr::update() 	80206220
stEffectMgr::viewCalc(unsigned long) 	80206224
stEffectMgr::setCurrentViewNo(unsigned long) 	80206228
stEffectMgr::getWaterTrack(int) 	8020622c
stEffectMgr::getKartExhaustMtxL(int) 	8020623c
stEffectMgr::getKartExhaustMtxR(int) 	8020624c
stEffectMgr::getEfctCarSpeed(int) const 	8020625c
stEffectMgr::getExhaustAccelCounter(int) 	8020626c
stEffectMgr::getExhaustPosDir(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, int, unsigned char) 	8020627c
stEffectMgr::createEmitter(stEmitterCallBack *, unsigned short) 	802062f4
stEffectMgr::createKartCommonEmitter(int, stEmitterCallBack *, unsigned short, bool) 	8020635c
stEffectMgr::createKinokoDashEmt(int) 	8020646c
stEffectMgr::tstUseMufllerL(int) 	80206570
stEffectMgr::tstUseMufllerR(int) 	8020657c
stEffectMgr::setExhaustStopFlg(int, bool) 	80206588
stEffectMgr::tstIsAvailableDistance(int) const 	802065cc
stEffectMgr::resetIndex() 	802065d8
stEffectMgr::loadCourseParam(unsigned long) 	80206888
stEffectMgr::stClipParam::stClipParam() 	80206c04
stEffectMgr::setIndexToList_Common(unsigned char, const stEffectMgr::stGndAttrParam &) 	80206c14
stEffectMgr::setIndexToList_StdGnd(unsigned char, const stEffectMgr::stGndAttrParam &, stEffectMgr::stGndAttrDataIndex &) 	80206cdc
stEffectMgr::getEmitterPtr(char *) 	80206d84
stEffectMgr::getBtiPtr(char *) 	80206dd0
stEffectMgr::getSnpName(unsigned long) 	80206e1c
stEfctMuffler::init() 	80206e38
__sinit_stEffectMgr_cpp	80206e3c
stExhaustAccelCounter::stExhaustAccelCounter() 	80206f48
stExhaustAccelCounter::init() 	80206f78
stExhaustAccelCounter::calc(int) 	80206fa4
stEfctExhaust::stEfctExhaust(unsigned char, unsigned char) 	80207240
stEfctExhaust::init() 	80207374
stEfctExhaust::calc() 	80207388
stEfctExhaust::doAccel() 	8020753c
stEfctExhaust::calcParamByKartRpm() 	80207670
stEfctKinokoDashBase::init() 	80207738
stEfctKinokoDashBase::calc() 	8020775c
stEfctKinokoDashBase::calcParamByFrame() 	80207808
stEfctKinokoDash1::stEfctKinokoDash1() 	8020789c
stEfctKinokoDash1::init() 	80207940
stEfctKinokoDash2::stEfctKinokoDash2() 	802079e8
stEfctKinokoDash3::stEfctKinokoDash3() 	80207a8c
__sinit_stEfctExhaust_cpp	80207b30
ItemObjMgr::ItemObjMgr() 	80207c54
JSUList<ItemObj>::~JSUList() 	80207eac
JSUList<ItemObj>::JSUList() 	80207ef8
ItemObjMgr::~ItemObjMgr() 	80207f28
ItemObjMgr::initItemMaxNums() 	80208024
ItemObjMgr::createShuffleMgr() 	80208074
ItemShuffleMgr::~ItemShuffleMgr() 	802081f0
ItemObjMgr::reset() 	80208238
ItemObjMgr::resetLists() 	8020827c
ItemObjMgr::clrKartHittingList() 	80208454
ItemObjMgr::clrKartItemEquipTriggerList() 	802084d0
ItemObjMgr::clrKartItemUseTriggerList() 	80208528
ItemObjMgr::clrKartStockingEquipItemList() 	80208580
ItemObjMgr::createAllObj() 	80208628
ItemObjMgr::equipItemSuccession(unsigned long, int, unsigned char) 	80208cc0
ItemObjMgr::robRivalOfItem(int, int, unsigned char) 	80208e60
ItemObjMgr::transferPartnerOfItem(int, bool) 	80208fac
ItemObjMgr::stockItemToKart(int, int, unsigned char, bool, unsigned char) 	802090bc
ItemObjMgr::equipItemToKart(int, int, unsigned char, bool, unsigned char) 	802090f0
ItemObjMgr::occurItem(unsigned long, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8020926c
ItemObjMgr::delete_stockItemToKart(int, unsigned char) 	80209300
ItemObjMgr::removeItem(ItemObj *) 	80209328
JSUList<ItemObj>::append(JSULink<ItemObj> *) 	80209558
ItemObj::getKind() const 	80209578
JSUListIterator<ItemObj>::isAvailable() 	80209580
JSUListIterator<ItemObj>::operator= (JSULink<ItemObj> *) 	80209590
JSUList<ItemObj>::remove(JSULink<ItemObj> *) 	80209598
JSUListIterator<ItemObj>::JSUListIterator(JSULink<ItemObj> *) 	802095b8
JSUListIterator<ItemObj>::getObject() const 	802095c0
JSUListIterator<ItemObj>::operator-> () const 	802095cc
JSUList<ItemObj>::getFirst() const 	802095d8
JSULink<ItemObj>::getObject() const 	802095e0
ItemObjMgr::removeItem(JSUListIterator<ItemObj> &) 	802095e8
ItemObjMgr::deleteItemByMoveList(ItemObj *) 	802096c4
ItemObjMgr::deleteItemByKartEquipItemList(ItemObj *) 	80209720
ItemObjMgr::deleteItemByKartEquipItemListSuc(ItemObj *) 	8020976c
ItemObjMgr::deleteItemKeepMax(ItemObj *) 	8020978c
ItemObjMgr::deleteMaxOverItem(const JSUList<ItemObj> &) 	8020983c
ItemObjMgr::getDeleteObjByPriorityList(JSUList<ItemObj> *) 	802098ac
ItemObjMgr::releaseItemByKartEquipItemList(ItemObj *) 	802099b8
ItemObjMgr::getKartEquipItem(int, unsigned char) 	802099e8
ItemObjMgr::getKartEquipItem(int) 	80209a00
ItemObjMgr::getStockItem(int, unsigned char) 	80209a48
ItemObjMgr::tstColReactionKart(int, ItemObj *) 	80209a80
ItemObj::getModelDataAppendLoadFlg() 	80209aa4
ItemObjMgr::loadOtherModelData() 	80209aac
ItemObjMgr::getOtherBmdFileName(unsigned long) 	80209b58
ItemObjMgr::load() 	80209b78
ItemObjMgr::createModel(JKRSolidHeap *, unsigned long) 	80209e40
ItemObjMgr::initCharShadowModelData() 	8020a000
ItemObjMgr::createCharShadowModel(JKRSolidHeap *, unsigned long) 	8020a144
ItemObjMgr::calcCharShadowModel() 	8020a1fc
ItemObjMgr::calc() 	8020a540
ItemObjMgr::calcIsHitItem(JSUListIterator<ItemObj> &, JSUListIterator<ItemObj> &) 	8020ad04
ItemObjMgr::setKartHittingList(JSUListIterator<ItemObj> &, int) 	8020ae50
ItemObjMgr::checkItemByShuffle() 	8020af88
ItemObjMgr::abortItemShuffle(int) 	8020b2a8
ItemObjMgr::getItemWanWanObj(ItemObj *) 	8020b2e4
ItemObjMgr::getItemFireBall(ItemObj *) 	8020b300
ItemObjMgr::getItemFireBallSuc(ItemObj *) 	8020b31c
ItemObjMgr::getItemYoshiEgg(ItemObj *) 	8020b338
ItemObjMgr::setHeartItem(int, ItemHeart *) 	8020b354
ItemObjMgr::deleteHeartItem(int) 	8020b364
ItemObjMgr::tstHaveItemHeart(int) 	8020b3e0
ItemObjMgr::executeColHitHeart(ItemObj *, int) 	8020b410
ItemObjMgr::getHeartItem(int) 	8020b43c
ItemObjMgr::setItemUseTrigger(int, unsigned char) 	8020b44c
ItemObjMgr::tstItemUseTrigger(int, unsigned char) const 	8020b468
ItemObjMgr::setThunderDisableUseCounter() 	8020b480
ItemObjMgr::getNowTandemDriverUse	8020b4d8
ItemObjMgr::IsSpecialCharacter(long) 	8020b530
ItemObjMgr::IsRollingSlot(int) 	8020b554
ItemObjMgr::IsRollingSlot(int, unsigned char) 	8020b5b8
ItemObjMgr::IsAvailableRollingSlot(int, unsigned long) 	8020b5fc
ItemObjMgr::startItemShuffleSingle(int, bool) 	8020b7d0
ItemObjMgr::startItemShuffleDouble(int) 	8020b8a4
ItemObjMgr::getHandOffsetData(ItemObj *) 	8020b96c
ItemObjMgr::getRobberyItemNum(int, unsigned char) 	8020b9d4
ItemObjMgr::removeMiniGameList(ItemObj *) 	8020ba1c
ItemObjMgr::update(ItemObjMgr::eDrawSimplModelItemType, int) 	8020ba44
ItemObjMgr::viewCalc(unsigned long) 	8020bb88
ItemObjMgr::setCurrentViewNo(unsigned long) 	8020bc9c
ItemObjMgr::drawSimpleModel(unsigned long, ItemObjMgr::eDrawSimplModelItemType, int, LightObj *) 	8020bd3c
ItemObjMgr::drawColModel(unsigned long) 	8020bfac
ItemObjMgr::draw() 	8020bfb0
ItemShuffleMgr::getRndItemKindPossibilityGetting(stRandom *, int, unsigned char) 	8020c110
ItemShuffleMgr::loadSlotData() 	8020c25c
ItemShuffleMgr::calcBufOffset(unsigned char *, int) 	8020c564
ItemShuffleMgr::setToList(unsigned char *, ItemShuffleMgr::KartSlotData *) 	8020c59c
ItemShuffleMgr::KartSlotList::KartSlotList() 	8020c6b0
ItemShuffleMgr::setToListLAN(ItemShuffleMgr::KartSlotData *, const unsigned char &, const int *) 	8020c6c0
ItemShuffleMgr::setAllDynamicRate() 	8020c73c
ItemShuffleMgr::setDynamicRate(ItemShuffleMgr::KartSlotData *, bool) 	8020c790
ItemShuffleMgr::SlotItem(int, unsigned char) 	8020c9b8
ItemShuffleMgr::doShuffle() 	8020cbac
ItemShuffleMgr::resetRolling() 	8020ccd4
ItemShuffleMgr::calcRaceUseNormalItem(unsigned long *, ItemShuffleMgr::KartSlotRankDataSet *, int) 	8020ccf8
ItemShuffleMgr::calcSpecialItemNum(unsigned long *, ItemShuffleMgr::KartSlotRankDataSet *, int, int, bool) 	8020cd9c
ItemShuffleMgr::calcRank(ItemShuffleMgr::KartSlotRankDataSet) 	8020ced4
ItemShuffleMgr::calcSlot(ItemShuffleMgr::KartSlotRankDataSet &, int, int, bool) 	8020cfbc
ItemShuffleMgr::calcRndSpecialSlot(int, const ItemShuffleMgr::KartSlotData &, bool) 	8020d080
ItemRndSpecialShuffleMgr::calcRaceUseNormalItem(unsigned long *, ItemShuffleMgr::KartSlotRankDataSet *, int) 	8020d208
ItemRndSpecialShuffleMgr::calcSpecialItemNum(unsigned long *, ItemShuffleMgr::KartSlotRankDataSet *, int, int, bool) 	8020d2ac
ItemShuffleMgr::calcRndSpecialRank(ItemShuffleMgr::KartSlotRankDataSet) 	8020d450
ItemRndSpecialShuffleMgr::calcRank(ItemShuffleMgr::KartSlotRankDataSet) 	8020d520
ItemRndSpecialShuffleMgr::~ItemRndSpecialShuffleMgr() 	8020d618
ItemObjMgr::callbackColGeoObj() 	8020d674
__sinit_ItemObjMgr_cpp	8020d678
ItemGTurtle::ItemGTurtle(unsigned long) 	8020d834
ItemObj::~ItemObj() 	8020d8e4
ItemGTurtle::reset() 	8020d9cc
ItemGTurtle::getBmdFileName() 	8020dafc
ItemGTurtle::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8020db24
ItemGTurtle::doUniv() 	8020db28
ItemGTurtle::calcColReaction(ItemObj *) 	8020dc20
ItemGTurtle::callHitItemSound(ItemObj *) 	8020dc28
ItemGTurtle::initEquip() 	8020dc74
ItemGTurtle::doEquip() 	8020dd70
ItemGTurtle::initRelease() 	8020dd9c
ItemGTurtle::doUnivInitRelease(float, bool) 	8020ddc8
ItemGTurtle::setInitReleaseParam() 	8020df30
ItemGTurtle::initBlurEmt() 	8020e04c
ItemGTurtle::doUnivRelease() 	8020e0d0
ItemGTurtle::calcVel() 	8020e244
ItemGTurtle::calcRotQuat(Quaternion *) 	8020e248
ItemGTurtle::calcGndUpdateQuat() 	8020e290
ItemGTurtle::calcFlyingUpdateQuat() 	8020e328
ItemGTurtle::chkColWallDisappear() 	8020e37c
ItemGTurtle::moveNormal(CrsGround &) 	8020e48c
ItemGTurtle::calcMoveGndNormalVec(JGeometry::TVec3<float> *, CrsGround &) 	8020e7d8
ItemGTurtle::doRelease() 	8020e800
ItemGTurtle::initSpRelease() 	8020e82c
ItemGTurtle::doSpRelease() 	8020ea98
ItemGTurtle::initDisappear() 	8020eac4
ItemGTurtle::initForceDisappear() 	8020eb78
ItemGTurtle::doDisappear() 	8020ebb8
ItemObj::initEnd() 	8020ec38
ItemGTurtle::initCommonMoveFallMtx() 	8020ec3c
ItemGTurtle::doFall() 	8020ec70
ItemGTurtle::doDivested() 	8020ec90
ItemGTurtle::calcBalanceFlying() 	8020ecb0
ItemGTurtle::getMaxColWallNum() 	8020ed04
ItemGTurtle::initFirstRotate() 	8020ed54
ItemGTurtle::doFirstRotate() 	8020edc0
ItemGTurtle::doSound(unsigned long) 	8020ee4c
ItemGTurtle::deleteEffect() 	8020ee9c
ItemGTurtle::executeEquipHandFunc() 	8020eee0
ItemGTurtle::executeGeoObjHitCallBack(GeographyObj *) 	8020ef10
ItemGTurtleBig::ItemGTurtleBig(unsigned long) 	8020f090
ItemGTurtle::~ItemGTurtle() 	8020f15c
ItemGTurtleBig::reset() 	8020f254
ItemGTurtleBig::getBmdFileName() 	8020f40c
ItemGTurtleBig::doUniv() 	8020f434
ItemGTurtleBig::initEquip() 	8020f5b4
ItemGTurtleBig::initRelease() 	8020f6b8
ItemGTurtleBig::initSpRelease() 	8020f6e0
ItemGTurtleBig::initDisappear() 	8020f708
ItemGTurtleBig::calcColReaction(ItemObj *) 	8020f7e0
ItemGTurtleBig::getMaxColWallNum() 	8020f838
ItemGTurtleBig::calcBalanceFlying() 	8020f888
ItemGTurtleBig::checkKartColDisappear(int) 	8020f8dc
ItemGTurtleBig::getForceEfctOffsetScale() const 	8020f930
ItemGTurtleBig::executeGeoObjHitCallBack(GeographyObj *) 	8020f938
ItemGTurtleSuc::ItemGTurtleSuc(unsigned long) 	8020fb88
ItemObjSuc::~ItemObjSuc() 	8020fbdc
ItemGTurtleSuc::reset() 	8020fcd4
ItemGTurtleSuc::doSucReleaseFunc(ItemObj *) 	8020fd30
ItemGTurtleSuc::doSucSpReleaseFunc(ItemObj *) 	8020fd88
ItemRTurtle::ItemRTurtle(unsigned long) 	8020fdb4
ItemRTurtle::reset() 	8020fe98
ItemRTurtle::getBmdFileName() 	8021006c
ItemRTurtle::doUniv() 	80210094
ItemRTurtle::calcColReaction(ItemObj *) 	802101bc
ItemRTurtle::initRelease() 	802101c4
ItemRTurtle::searchTarget(float, bool) 	80210424
ItemRTurtle::checkOver1stKart() 	802106d4
ItemRTurtle::getKartCLDir(int, JGeometry::TVec3<float> *) 	80210888
ItemRTurtle::moveAttack() 	8021095c
ItemRTurtle::moveCenterLine() 	80210c80
ItemRTurtle::initCL() 	80210ee4
ItemRTurtle::calcVel() 	80210f8c
ItemRTurtle::getMiniGameSearchMaxLengthXZ() 	802110cc
ItemRTurtle::moveColWall(CrsGround &) 	802110d4
ItemRTurtle::calcMoveGndNormalVec(JGeometry::TVec3<float> *, CrsGround &) 	80211114
CLPointControllerRTurtle::CLPointControllerRTurtle(ItemObj *) 	8021112c
CLPointControllerRTurtle::findNextPointNo(CLPoint *) 	8021117c
ItemRTurtleSuc::ItemRTurtleSuc(unsigned long) 	802112a4
ItemGTurtleSuc::~ItemGTurtleSuc() 	80211304
ItemRTurtleSuc::reset() 	8021140c
ItemFireBall::ItemFireBall(unsigned long) 	80211450
ItemFireBall::reset() 	80211620
ItemFireBall::getBmdFileName() 	80211800
ItemFireBall::doUniv() 	80211828
ItemFireBall::deleteEffect() 	802119e4
ItemFireBall::deleteHaveEffect() 	80211a54
ItemFireBall::initEquip() 	80211abc
ItemFireBall::doEquip() 	80211cc8
ItemFireBall::moveBaseEfct() 	80211d7c
ItemFireBall::initRelease() 	80211df4
ItemFireBall::initSpRelease() 	80211eb0
ItemFireBall::initDisappear() 	80211f6c
ItemFireBall::doDisappear() 	80212038
ItemFireBall::initFall() 	80212078
ItemFireBall::doFall() 	8021212c
ItemFireBall::initForceDisappear() 	80212170
ItemFireBall::doDivested() 	802121b0
ItemFireBall::doUnivRelease() 	80212250
ItemFireBall::moveNormal(CrsGround &) 	80212538
ItemFireBall::calcColReaction(ItemObj *) 	802125d8
ItemFireBall::calcRotQuat(Quaternion *) 	80212608
ItemFireBall::getMaxColWallNum() 	80212650
ItemFireBall::executeGeoObjHitCallBack(GeographyObj *) 	80212658
ItemFireBallSuc::ItemFireBallSuc(unsigned long) 	8021277c
ItemFireBallSuc::reset() 	802127fc
ItemFireBallSuc::doSucReleaseFunc(ItemObj *) 	802128d4
ItemFireBallSuc::doSucSpReleaseFunc(ItemObj *) 	80212918
ItemFireBallSuc::initEquip() 	80212944
ItemFireBallSuc::doEquip() 	80212a04
ItemFireBallSuc::doDivested() 	80212b10
ItemFireBallSuc::initDisappear() 	80212b94
ItemFireBallSuc::initFall() 	80212bf0
ItemFireBallSuc::doFall() 	80212c18
ItemFireBallSuc::initForceDisappear() 	80212c78
ItemFireBallSuc::doForceDisappear() 	80212cac
ItemFireBallSuc::initEnd() 	80212cec
ItemFireBallSuc::deleteEffect() 	80212d3c
ItemFireBallSuc::moveEffect(bool) 	80212da4
ItemFireBallSuc::IsEfctTypeRed() const 	80212e24
ItemFireBallSuc::~ItemFireBallSuc() 	80212e54
ItemObj::getLockOnKartNo() const 	80212f5c
ItemObj::getForceEfctOffsetScale() const 	80212f64
ItemObj::initRelease() 	80212f6c
ItemObj::initSpRelease() 	80212f70
ItemObj::doRelease() 	80212f74
ItemObj::doSpRelease() 	80212f78
ItemObj::doDisappear() 	80212f7c
ItemObj::moveNormal(CrsGround &) 	80212f80
ItemObj::executeEquipHandFunc() 	80212f84
ItemFireBall::~ItemFireBall() 	80212fac
ItemObj::initDivested() 	802130b4
ItemRTurtleSuc::~ItemRTurtleSuc() 	802130d4
ItemObj::initDisappear() 	802131ec
ItemObj::deleteEffect() 	802131f0
ItemRTurtle::~ItemRTurtle() 	802131f4
ItemRTurtle::getLockOnKartNo() const 	802132fc
ItemGTurtleBig::~ItemGTurtleBig() 	80213304
__sinit_ItemGTurtle_cpp	8021340c
ItemObj::ItemObj(unsigned long) 	802135c0
ItemObj::reset() 	802136cc
ItemObj::update() 	802136ec
ItemObj::viewCalc(unsigned long) 	8021371c
ItemObj::setCurrentViewNo(unsigned long) 	80213748
ItemObj::getBmdFileName() 	80213774
ItemObj::IsJuggleItem() const 	8021377c
ItemObj::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80213784
ItemObj::loadmodel(J3DModelData *) 	802137b4
ItemObj::createColModel(J3DModelData *) 	80213800
ItemObj::getItemBoundRatio() const 	80213820
ItemObj::doUniv() 	80213828
ItemObj::doFall() 	80213850
ItemObj::initForceDisappear() 	80213870
ItemObj::doForceDisappear() 	80213984
ItemObj::initHeartDisappear() 	80213a80
ItemObj::checkKartColDisappear(int) 	80213b0c
ItemObj::selectSucChild() 	80213b14
ItemObj::getShadowBmdFileName(unsigned char) 	80213b20
ItemObj::loadshadowmodel(J3DModelData *) 	80213b5c
ItemObj::doStateUniv() 	80213be8
ItemObj::doDeleteList() 	80213c10
ItemObj::setStateEquip(bool, bool) 	80213c5c
ItemObj::initEquip() 	80213e20
ItemObj::setStateHeartWaiting(unsigned char) 	80213e24
ItemObj::setStateRelease(bool) 	80213ebc
ItemObj::setStateSpRelease(bool) 	80213f9c
ItemObj::setStateFall(bool) 	8021405c
ItemObj::setStateOccur(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	80214188
ItemObj::doOccur() 	80214220
ItemObj::setStateDivested(bool) 	8021424c
JSULink<ItemObj>::getNext() const 	80214580
JSUListIterator<ItemObj>::JSUListIterator(const JSUListIterator<ItemObj> &) 	80214588
JSUListIterator<ItemObj>::operator!= (const JSULink<ItemObj> *) const 	80214594
JSUList<ItemObj>::getEnd() const 	802145a8
JSUListIterator<ItemObj>::operator++ (int) 	802145b0
ItemObj::IsSuccessionItem() 	802145c4
ItemObj::IsSuccessionChildItem() 	802145dc
JSULink<ItemObj>::getSupervisor() const 	802145ec
ItemObj::setStateDisappear(bool) 	802145f4
ItemObj::setStateForceDisappear() 	802146e0
ItemObj::tstAnyObjectHitting() 	802147a4
ItemObj::doSucStateFunc(ItemObj::ItemState) 	802147e4
ItemObj::disappearAllChild(bool) 	80215008
ItemObj::doSucReleaseFunc(ItemObj *) 	8021516c
ItemObj::doSucSpReleaseFunc(ItemObj *) 	80215170
ItemObj::getSuccessionItemNum() 	80215174
ItemObj::setChildStateRelease() 	80215190
ItemObj::setChildStateSpRelease() 	802151b4
ItemObj::setChildStateFall() 	802151d8
ItemObj::setChildStateForceDisappear() 	802151fc
ItemObj::calc() 	80215220
ItemObj::calcDarkRatio() 	8021544c
ItemObj::checkPriorityNormal() 	80215574
ItemObj::checkPrioritySpecial() 	80215600
ItemObj::initFall() 	80215674
ItemObj::initOccur(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8021569c
ItemObj::createSoundMgr() 	80215710
ItemObj::createBoundSphere(J3DModelData *) 	80215768
ItemObj::createBoundSphere(float, float) 	802157e4
ItemObj::createBoundCylinder(J3DModelData *) 	80215854
ItemObj::getVelStickXThrow(JGeometry::TVec3<float> *, float, float) 	802158dc
ItemObj::createShadowModel(JKRSolidHeap *, unsigned long, unsigned long) 	802159c0
ItemObj::setModelMatrixAndScale(Quaternion) 	80215a78
ItemObj::setModelMatrixAndScale(float (*) [4]) 	80215b10
ItemObj::setScaleCol(float) 	80215bac
ItemObj::resetObject() 	80215bcc
ItemObj::resetNoColParam() 	80215e78
ItemObj::clearAllFlg() 	80215e90
ItemObj::chkSetFlgByKind() 	80215ec4
ItemObj::getModelLfDir(JGeometry::TVec3<float> *) 	80215f34
ItemObj::getModelUpDir(JGeometry::TVec3<float> *) 	80215f50
ItemObj::getModelFrDir(JGeometry::TVec3<float> *) 	80215f6c
ItemObj::rotationRad(float &, float) 	80215f88
ItemObj::QuatRotX(float, Quaternion *) 	80215fd8
ItemObj::QuatRotY(float, Quaternion *) 	8021601c
ItemObj::IsSpecialItem(int) 	80216060
ItemObj::getCompVecLength(JGeometry::TVec3<float> &, float &) 	80216090
ItemObj::setFrameNoColKart(unsigned char, bool) 	80216168
ItemObj::doFrameNoColKart() 	802161ac
ItemObj::calcColPos() 	80216248
ItemObj::IsHitKart(int, const JGeometry::TVec3<float> &, float) 	802162a8
ItemObj::IsHitObject(ObjColBase *, const JGeometry::TVec3<float> &, ObjColBase *) 	8021638c
ItemObj::checkStartColItemFrame(unsigned long) 	80216468
ItemObj::doHandOneEquip(bool, float) 	80216484
ItemObj::doPosLerp(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &, float) 	802166c0
ItemObj::doRotationLerp(JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> *, float (*) [4], float) 	802167a0
ItemObj::doEquipScaleUp(float) 	80216828
ItemObj::executeEquipScaleUp(unsigned long, float) 	802168f4
ItemObj::doForceDisappearScaleDown() 	80216978
ItemObj::calcEquipAnmScaleUp(JGeometry::TVec3<float> &, unsigned long) 	802169d8
ItemObj::calcForceDisappearScaleDown(JGeometry::TVec3<float> &, unsigned long) 	80216a50
ItemObj::doReflectGeoObj(GeographyObj *, float) 	80216abc
ItemObj::doMovePos() 	80216e84
ItemObj::doGeoObjectCol(GeographyObj *) 	80216ebc
ItemObj::executeGeoObjHitCallBack(GeographyObj *) 	80217054
ItemObj::setCollideAddVel(const JGeometry::TVec3<float> &, const float &) 	80217058
ItemObj::initmoveDivested() 	802170a4
ItemObj::moveDivested() 	80217148
ItemObj::initmoveFall() 	80217330
ItemObj::initCommonMoveFall(const JGeometry::TVec3<float> &) 	802174cc
ItemObj::initCommonMoveFallMtx() 	80217564
ItemObj::moveFall() 	802175e8
ItemObj::doHeartWaiting() 	80217844
ItemObj::doFallScaling() 	802178a0
ItemObj::calcColReaction(ItemObj *) 	802178c8
ItemObj::colItemReflect(ItemObj *, ItemObj *, ItemObj::ItemColFlag, ItemObj::ItemColFlag) 	80217900
ItemObj::doColMoveReflect(JGeometry::TVec3<float>, float) 	80217b6c
ItemObj::doColMoveReflectAndStopDisappear(JGeometry::TVec3<float>, float) 	80217ca0
ItemObj::doColMoveJumpDown(JGeometry::TVec3<float>, float) 	80217eec
ItemObj::doColMoveReflectJumpDownAndDisappear(JGeometry::TVec3<float>, float) 	80217f28
ItemObj::doColMoveCommonJumpAndReflect(JGeometry::TVec3<float>, float, bool) 	80218098
ItemObj::getHandAnmMtx() 	802183bc
ItemObj::getJuggleHandAnmMtx() 	80218400
ItemObj::IsAlwaysColItemToKart() 	80218444
ItemObj::initMoveColGround() 	8021846c
ItemObj::doMoveColGround(Quaternion *, bool) 	80218498
ItemObj::moveCommonAttr(CrsGround &, bool) 	802188b0
ItemObj::moveColWall(CrsGround &) 	80218a6c
ItemObj::moveRescue(CrsGround &) 	80218d98
ItemObj::moveCannon(CrsGround &) 	80218ec0
ItemObj::simpleDraw(unsigned long, float (*) [4], unsigned long) 	80218fa4
ItemObj::setMultiType(ItemObj::cMultiType) 	80219000
ItemObj::getCharaMultiType(int, unsigned char) 	8021902c
ItemObj::doMoveGndParallel(const JGeometry::TVec3<float> &, float) 	80219088
ItemObj::initThrowVel(float, float, float) 	80219318
ItemObj::setInitThrowDir(JGeometry::TVec3<float> *, float, bool) 	802196b0
ItemObj::setVelUpDown(float, float) 	80219774
ItemObj::setVelMax() 	80219840
ItemObj::calcVelUpDown(float) 	8021989c
ItemObj::calcGndNormal(JGeometry::TVec3<float> *, CrsGround &, float, float) 	80219968
ItemObj::calcBananaFirstQuat(const JGeometry::TVec3<float> &) 	80219a6c
ItemObj::calcScale(float, float, float) 	80219bbc
ItemObj::calcAllUseInitVel(unsigned char, float) 	80219ea8
ItemObj::callHitItemSound(ItemObj *) 	80219f88
ItemObj::callHitKartSound(int) 	80219f8c
ItemObj::getSpecialKind(const int &, const unsigned char &) 	8021a008
ItemObj::drawSimpleModel(unsigned long, float (*) [4], J3DUClipper *, float (*) [4]) 	8021a0b4
ItemObj::getItemRnd() 	8021a0b8
ItemObj::setHandOffsetData() 	8021a0dc
ItemObj::setHandOffsetPos(ItemObj::ItemHandOffsetData *) 	8021a1d4
ItemObj::getHandOffsetPos() 	8021a1f8
ItemObj::getThunderScale() 	8021a230
ItemObj::initMaxDivestedFrame() 	8021a2a0
ItemObj::doEquip() 	8021a2fc
ItemObj::doDivested() 	8021a324
__sinit_ItemObj_cpp	8021a344
ItemBanana::ItemBanana(unsigned long) 	8021a450
AnmController::~AnmController() 	8021a4a8
ItemBanana::reset() 	8021a4f0
ItemBanana::getBmdFileName() 	8021a5cc
ItemBanana::loadAnmData(J3DModelData *) 	8021a5f4
ItemBanana::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021a66c
ItemBanana::getBckName(int) 	8021a784
ItemBanana::update() 	8021a7d0
ItemBanana::doUniv() 	8021a818
ItemBanana::checkAnmState() 	8021a928
AnmControlTrans::changeAnm(unsigned char, bool) 	8021aa9c
ItemBanana::initEquip() 	8021ab08
ItemBanana::doEquip() 	8021aba4
ItemBanana::initRelease() 	8021abcc
ItemBanana::doRelease() 	8021add4
ItemBanana::calcBaseRotQt() 	8021ae68
ItemBanana::initSpRelease() 	8021ae70
ItemBanana::doSpRelease() 	8021af88
ItemBanana::initDisappear() 	8021b160
ItemBanana::doDisappear() 	8021b240
ItemBanana::doFall() 	8021b2c4
ItemBanana::moveNormal(CrsGround &) 	8021b320
ItemBanana::getItemBoundRatio() const 	8021b47c
ItemBanana::setAllUseBoundsScale() 	8021b484
ItemBanana::setAllUseInitReleaseVelMag() 	8021b4b4
ItemBanana::checkKartColDisappear(int) 	8021b4cc
ItemBanana::initOccur(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8021b4fc
ItemBanana::doSound(unsigned long) 	8021b534
ItemBananaBig::ItemBananaBig(unsigned long) 	8021b594
ItemBanana::~ItemBanana() 	8021b600
ItemBananaBig::reset() 	8021b710
ItemBananaBig::getBmdFileName() 	8021b838
ItemBananaBig::loadAnmData(J3DModelData *) 	8021b860
ItemBananaBig::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021b910
ItemBananaBig::doUniv() 	8021ba28
ItemBananaBig::initEquip() 	8021bcc0
ItemBananaBig::callHitItemSound(ItemObj *) 	8021bd64
ItemBananaBig::calcColReaction(ItemObj *) 	8021bdb0
ItemBananaBig::initDisappear() 	8021bde8
ItemFakeItemBox::ItemFakeItemBox(unsigned long) 	8021c098
ItemFakeItemBox::reset() 	8021c10c
ItemFakeItemBox::getBmdFileName() 	8021c314
ItemFakeItemBox::loadAnmData(J3DModelData *) 	8021c320
ItemFakeItemBox::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021c3ec
ItemFakeItemBox::doUniv() 	8021c4bc
TAnmControlBase<J3DAnmObjMatTexSRT>::frameProc() 	8021c694
ItemFakeItemBox::initEquip() 	8021c6d4
ItemFakeItemBox::callHitItemSound(ItemObj *) 	8021c778
ItemFakeItemBox::moveNormal(CrsGround &) 	8021c77c
ItemFakeItemBox::calcColReaction(ItemObj *) 	8021c984
ItemFakeItemBox::initDisappear() 	8021c98c
ItemFakeItemBox::doDisappear() 	8021c9a4
ItemFakeItemBox::calcBaseRotQt() 	8021caf4
ItemFakeItemBox::checkKartColDisappear(int) 	8021cb38
ItemFakeItemBox::createEfct(const JGeometry::TVec3<float> &) 	8021cb80
ItemFakeItemBox::getForceEfctOffsetScale() const 	8021ccf8
ItemFakeItemBox::initFall() 	8021cd00
ItemFakeItemBox::~ItemFakeItemBox() 	8021cd44
ItemFakeItemBox::createColModel(J3DModelData *) 	8021ce64
ItemBanana::getModelDataAppendLoadFlg() 	8021ce84
ItemBananaBig::~ItemBananaBig() 	8021ce8c
ItemBanana::createColModel(J3DModelData *) 	8021cfac
__sinit_ItemBanana_cpp	8021cfcc
stEfctWeedBase::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8021d0f4
stEfctWeed::stEfctWeed() 	8021d1ec
stEfctWeed::calc() 	8021d2a4
stEfctWeedBase::init() 	8021d2e8
__sinit_stEfctWeed_cpp	8021d2ec
ItemKinoko::ItemKinoko(unsigned long) 	8021d410
ItemKinoko::reset() 	8021d4c0
ItemKinoko::getBmdFileName() 	8021d524
ItemKinoko::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021d54c
ItemKinoko::doUniv() 	8021d550
ItemKinoko::initEquip() 	8021d5fc
ItemKinoko::doEquip() 	8021d6f8
ItemKinoko::initRelease() 	8021d724
ItemKinoko::doRelease() 	8021d748
ItemKinoko::initDisappear() 	8021d74c
ItemKinoko::doDisappear() 	8021d764
ItemKinoko::initFall() 	8021d768
ItemKinoko::executeEquipHandFunc() 	8021d7a4
ItemGoldenKinoko::ItemGoldenKinoko(unsigned long) 	8021d7d4
ItemKinoko::~ItemKinoko() 	8021d8d8
ItemGoldenKinoko::reset() 	8021d9d0
ItemGoldenKinoko::getBmdFileName() 	8021da48
ItemGoldenKinoko::loadAnmData(J3DModelData *) 	8021da70
ItemGoldenKinoko::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021da78
ItemGoldenKinoko::doUniv() 	8021daac
ItemGoldenKinoko::initRelease() 	8021db64
ItemGoldenKinoko::doRelease() 	8021db7c
ItemGoldenKinoko::initDisappear() 	8021dba8
ItemGoldenKinoko::update() 	8021dbc0
ItemKinokoSuc::ItemKinokoSuc(unsigned long) 	8021dbf0
ItemKinokoSuc::reset() 	8021dc44
ItemKinokoSuc::~ItemKinokoSuc() 	8021dc90
ItemGoldenKinoko::~ItemGoldenKinoko() 	8021dd98
ItemGoldenKinoko::executeEquipHandFunc() 	8021dea0
__sinit_ItemKinoko_cpp	8021dec8
ItemStar::ItemStar(unsigned long) 	8021dfec
ItemStar::reset() 	8021e03c
ItemStar::getBmdFileName() 	8021e0c8
ItemStar::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8021e0f0
ItemStar::doUniv() 	8021e128
ItemStar::initEquip() 	8021e1d4
ItemStar::doEquip() 	8021e258
ItemStar::initRelease() 	8021e324
ItemStar::doRelease() 	8021e348
ItemStar::initDisappear() 	8021e34c
ItemStar::doDisappear() 	8021e364
ItemStar::initFall() 	8021e368
ItemStar::doFall() 	8021e390
ItemStar::~ItemStar() 	8021e414
__sinit_ItemStar_cpp	8021e50c
J3DEffectObj::GetBmdName<J3DEfctBomb>() 	8021e618
J3DEffectObj::New<J3DEfctBomb>() 	8021e638
J3DEffectObj::LoadAnm<J3DEfctBomb>() 	8021e670
J3DEffectObj::GetBmdName<J3DEfctSplashDown>() 	8021e690
J3DEffectObj::New<J3DEfctSplashDown>() 	8021e6b0
J3DEffectObj::LoadAnm<J3DEfctSplashDown>() 	8021e6e8
J3DEffectObj::GetBmdName<J3DEfctMudSplashDown>() 	8021e708
J3DEffectObj::New<J3DEfctMudSplashDown>() 	8021e728
J3DEffectObj::LoadAnm<J3DEfctMudSplashDown>() 	8021e760
J3DEffectObj::GetBmdName<J3DEfctIceRock>() 	8021e780
J3DEffectObj::New<J3DEfctIceRock>() 	8021e7a0
J3DEffectObj::LoadAnm<J3DEfctIceRock>() 	8021e7d8
J3DEffectObj::GetBmdName<J3DEfctHeart>() 	8021e7f8
J3DEffectObj::New<J3DEfctHeart>() 	8021e818
J3DEffectObj::LoadAnm<J3DEfctHeart>() 	8021e850
J3DEffectMgr::J3DEffectMgr() 	8021e854
PermissionCounter::~PermissionCounter() 	8021e9ac
PermissionCounter::PermissionCounter() 	8021ea04
JSUList<J3DEffectObj>::~JSUList() 	8021ea4c
JSUList<J3DEffectObj>::JSUList() 	8021ea98
J3DEffectMgr::createModel(JKRSolidHeap *, unsigned long) 	8021eac8
J3DEffectMgr::reset() 	8021eb64
J3DEffectMgr::loadJ3DdataAll() 	8021ebf0
J3DEffectMgr::createAll() 	8021eca4
J3DEffectMgr::remove(J3DEffectObj *) 	8021ed30
J3DEffectMgr::setEffectKart(int, int, float (*) [4]) 	8021ed68
J3DEffectMgr::setEffectSplash(CrsGround *, int, float (*) [4]) 	8021ee0c
J3DEffectMgr::setEffect(int, float (*) [4], int) 	8021eee8
J3DEffectMgr::setModelDataAppend(J3DEffectObj *, int) 	8021ef74
J3DEffectMgr::calc() 	8021efcc
J3DEffectMgr::update() 	8021f04c
J3DEffectObj::update() 	8021f098
J3DEffectMgr::viewCalc(unsigned long) 	8021f0c8
J3DEffectMgr::setCurrentViewNo(unsigned long) 	8021f11c
J3DEfctKartAnmMgr::J3DEfctKartAnmMgr() 	8021f170
J3DEfctKartAnmMgr::initSimpleBrkEfctAnimation() 	8021f1ac
J3DEfctKartAnmMgr::loadSimpleBrkEfctAnimation() 	8021f23c
J3DEfctKartAnmMgr::loadSimpleCharBrkEfctFile(unsigned long, unsigned char) 	8021f2ac
J3DEfctKartAnmMgr::loadSimpleKartPartsBrkEfctFile(unsigned long, unsigned char) 	8021f330
J3DEfctKartAnmMgr::getBrkEfctCharName(unsigned char) 	8021f3b8
J3DEfctKartAnmMgr::getBrkEfctSimpleKartName(unsigned char) 	8021f3cc
J3DEfctKartAnmMgr::getBrkEfctEffectName(unsigned long) 	8021f3e0
J3DEfctKartAnmMgr::getSimpleCharBrkAnm(unsigned long, unsigned char) 	8021f3f4
J3DEfctKartAnmMgr::getSimpleKartBrkAnm(unsigned long, unsigned char) 	8021f408
__sinit_J3DEffectMgr_cpp	8021f420
StringNodeManager::StringNodeManager(unsigned char, float, bool, bool, unsigned char) 	8021f53c
StringNode::~StringNode() 	8021f6c8
StringNode::StringNode() 	8021f720
StringNodeManager::setAllNodePos(const JGeometry::TVec3<float> &) 	8021f7a0
StringNodeManager::calc() 	8021f828
StringNodeManager::calcBetweenNodePosAll(float) 	8021f894
StringNodeManager::calcBetweenNodePos(StringNode *, StringNode *, float, float) 	8021f938
StringNodeManager::resetNodeAll(JGeometry::TVec3<float> *) 	8021fb1c
StringNodeManager::moveNodeAll() 	8021fc04
StringNodeManager::doAirFricG(float, float) 	8021fc50
StringNodeManager::doHeightCol() 	8021fcfc
StringNodeManager::getNodeVel(unsigned long, JGeometry::TVec3<float> *) 	8021ff64
StringNodeManager::getNodePos(unsigned long, JGeometry::TVec3<float> *) 	8021ffa8
StringNodeManager::addNodeVel(unsigned long, JGeometry::TVec3<float>) 	8021ffec
StringNodeManager::setNodeVel(unsigned long, JGeometry::TVec3<float>) 	80220040
StringNodeManager::addNodePos(unsigned long, JGeometry::TVec3<float>) 	80220084
StringNodeManager::setNodePos(unsigned long, JGeometry::TVec3<float>) 	802200d8
ExStringNodeManager::calcBetweenNodePosAll(float) 	8022011c
ExStringNodeManager::setNodeLengthAll(float) 	802204b8
StringObj::StringObj(unsigned char, bool) 	802204d8
StringNodeManager::~StringNodeManager() 	8022073c
StringObj::createModel(JKRSolidHeap *, unsigned long) 	802207b0
StringObj::loadmodel(J3DModelData *) 	802207b4
StringObj::reset() 	80220834
StringObj::calc() 	8022088c
StringObj::update() 	80220bb4
StringObj::setCurrentViewNo(unsigned long) 	80220c1c
StringObj::drawSimpleModel(unsigned long, float (*) [4], J3DUClipper *, float (*) [4]) 	80220cdc
StringObj::~StringObj() 	80220de4
ExStringNodeManager::~ExStringNodeManager() 	80220e2c
__sinit_StringObj_cpp	80220eb0
ItemWanWanObj::ItemWanWanObj(unsigned long) 	80220fbc
J3DAnmObjCluster::~J3DAnmObjCluster() 	802210b8
ItemWanWanObj::reset() 	80221128
ItemWanWanObj::getBmdFileName() 	80221318
ItemWanWanObj::loadAnmData(J3DModelData *) 	80221340
ItemWanWanObj::getBckName(int) 	802213fc
ItemWanWanObj::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80221434
ItemWanWanObj::update() 	80221570
J3DAnmObjCluster::anmFrameProc() 	8022160c
ItemWanWanObj::drawSimpleModel(unsigned long, float (*) [4], J3DUClipper *, float (*) [4]) 	8022161c
ItemWanWanObj::viewCalc(unsigned long) 	80221640
ItemWanWanObj::setCurrentViewNo(unsigned long) 	8022166c
ItemWanWanObj::doUniv() 	802216d8
ItemWanWanObj::calcColReaction(ItemObj *) 	80221a48
ItemWanWanObj::initEquip() 	80221a50
ItemWanWanObj::doEquip() 	80221b0c
ItemWanWanObj::initRelease() 	80221b34
ItemWanWanObj::setInitReleaseParam() 	80221c80
ItemWanWanObj::doUnivRelease(bool) 	80221d6c
ItemWanWanObj::doRelease() 	80221f40
ItemWanWanObj::calcGravity() 	80221ff4
ItemWanWanObj::initDisappear() 	80222070
ItemWanWanObj::doDisappear() 	80222158
ItemWanWanObj::initFall() 	802221d8
ItemWanWanObj::doFall() 	8022220c
ItemWanWanObj::moveNormal(CrsGround &) 	80222250
ItemWanWanObj::calcBalanceFlying() 	802225c0
ItemWanWanObj::initmoveCenterLine() 	802226c8
ItemWanWanObj::setCLPoint() 	802227a0
ItemWanWanObj::moveCenterLine() 	802227d8
ItemWanWanObj::moveStraight() 	80222b48
ItemWanWanObj::getChainLength() 	80222bd8
ItemWanWanObj::getFirstNodePos(JGeometry::TVec3<float> *) 	80222c3c
ItemWanWanObj::checkKartColDisappear(int) 	80222c6c
ItemWanWanObj::separate() 	80222cc8
ItemWanWanObj::getChainLocatorPos(JGeometry::TVec3<float> *, float (*) [4]) 	80222dcc
ItemWanWanObj::getForceEfctOffsetScale() const 	80222ea8
ItemWanWanObj::executeGeoObjHitCallBack(GeographyObj *) 	80222eb0
ItemWanWanObj::doTraceEfct() 	80222fec
ItemWanWanObj::~ItemWanWanObj() 	802230f8
__sinit_ItemWanWan_cpp	80223244
ItemBomb::ItemBomb(unsigned long) 	8022336c
J3DAnmObjMatColor::~J3DAnmObjMatColor() 	802234b8
J3DAnmObjMaterialBase<J3DAnmColor>::~J3DAnmObjMaterialBase() 	80223538
ItemBomb::reset() 	802235a8
ItemBomb::getBmdFileName() 	80223778
ItemBomb::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80223784
ItemBomb::loadAnmData(J3DModelData *) 	80223800
ItemBomb::getBckName(int) 	802238d4
ItemBomb::update() 	80223920
J3DAnmObjMaterialBase<J3DAnmColor>::anmFrameProc() 	80223a6c
ItemBomb::setAnimation(ItemBomb::BombBck, int) 	80223a7c
ItemBomb::deleteEffect() 	80223a90
ItemBomb::IsHitKart(int, const JGeometry::TVec3<float> &, float) 	80223ad4
ItemBomb::doUniv() 	80223b48
ItemBomb::doScale() 	80223dec
ItemBomb::setSparkTranslation() 	80223ebc
ItemBomb::calcColReaction(ItemObj *) 	80223f78
ItemBomb::initEquip() 	80223f80
ItemBomb::setMiniGameBombColor() 	80224008
ItemBomb::doEquip() 	802240c8
ItemBomb::initRelease() 	80224118
ItemBomb::doRelease() 	802242b4
ItemBomb::initSpRelease() 	802245f4
ItemBomb::doSpRelease() 	802247d4
ItemBomb::initDisappear() 	80224800
ItemBomb::doDisappear() 	80224984
ItemBomb::initFall() 	80224a68
ItemBomb::initDivested() 	80224b7c
ItemBomb::doFall() 	80224c40
ItemBomb::initOccur(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	80224cb4
ItemBomb::initForceDisappear() 	80224d24
ItemBomb::moveNormal(CrsGround &) 	80224d64
ItemBomb::moveCannon(CrsGround &) 	80224fa8
ItemBomb::checkKartColDisappear(int) 	80224ff8
ItemBomb::setCurrentViewNo(unsigned long) 	80225018
ItemBomb::createEffect() 	80225078
ItemBomb::findAnyKart() 	802250e8
ItemBomb::getMaxBombReactFrame() 	80225140
ItemBombSuc::ItemBombSuc(unsigned long) 	80225148
ItemBombSuc::reset() 	8022519c
ItemBombSuc::~ItemBombSuc() 	802251e0
ItemBomb::~ItemBomb() 	802252e8
temBomb::createColModel(J3DModelData *) 	80225434
__sinit_ItemBomb_cpp	80225454
ObjUtility::getPtrMainArc(char *) 	80225590
ObjUtility::getPtrCourseArc(char *) 	802255b8
ObjUtility::getPtrMainLocaleArc(char *) 	802255e0
ObjUtility::setRMtx(float (*) [4], const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	80225608
ObjUtility::executeShakeCamera(const JGeometry::TVec3<float> &, float, float, float) 	8022567c
ObjUtility::getKartBodyMtx(int) 	80225804
ObjUtility::getKartPos(int, JGeometry::TVec3<float> *) 	8022581c
ObjUtility::getKartXdir(int, JGeometry::TVec3<float> *) 	80225848
ObjUtility::getKartYdir(int, JGeometry::TVec3<float> *) 	80225894
ObjUtility::getKartZdir(int, JGeometry::TVec3<float> *) 	802258e0
ObjUtility::getKartVel(int, JGeometry::TVec3<float> *) 	8022592c
ObjUtility::getKartEfctVel(int, JGeometry::TVec3<float> *) 	8022595c
ObjUtility::findNearKart(const JGeometry::TVec3<float> &, float, int) 	8022598c
ObjUtility::findNearKartAngle(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, float, float) 	80225a4c
ObjUtility::getCamDependLightMtx(unsigned long, const JGeometry::TVec3<float> &, float (*) [4]) 	80225bdc
ObjUtility::isPlayerDriver(const int &) 	80225c7c
ObjUtility::getReflectVec(JGeometry::TVec3<float>, JGeometry::TVec3<float>, JGeometry::TVec3<float> *, bool) 	80225ca0
ObjUtility::chkAvailableEnemyByDistande(bool *, float) 	80225f04
ObjUtility::concatSimpleFileName(char *, unsigned char) 	80226090
BombEffectObj::BombEffectObj() 	802260e4
BombEffectObj::reset() 	802261b8
BombEffectObj::init(const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, unsigned char, float) 	802261ec
BombEffectObj::setInitialize(JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, unsigned char, float) 	8022623c
BombEffectObj::setJPAEfct(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, unsigned char) 	802264c0
BombEffectObj::startEfct(const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, unsigned char) 	802265a8
BombEffectObj::execute() 	802265f0
BombEffectObj::calc(float, float, unsigned char, unsigned char) 	80226620
CLPointController::reset() 	802266e8
CLPointController::init_ByKartIndex(int) 	80226718
CLPointController::init_ByCLPointPtr(CLPoint *) 	80226764
CLPointController::chkArriveAtFwPoint(const JGeometry::TVec3<float> &, float) 	80226790
CLPointController::chkIsOverFwPoint(const JGeometry::TVec3<float> &) 	80226854
CLPointController::doNextChkIsOverFwPoint(const JGeometry::TVec3<float> &) 	80226948
CLPointController::getLengthFromCLDir(const JGeometry::TVec3<float> &) 	80226a4c
CLPointController::changeNextPoint() 	80226adc
CLPointController::calcCLDir() 	80226b20
CLPointController::calcFirstCLbyAngle(const JGeometry::TVec3<float> &, int, float) 	80226c10
CLPointController::calcNextPoint(CLPoint *) 	80226e94
CLPointController::findNextPointNo(CLPoint *) 	80226ef8
CLPointController::findRndPointNoExceptForShortCut(CLPoint *, stRandom *) 	80226f00
CLPointController::recursiveTargetCalc(CLPoint *, int, int *, unsigned char *, bool *) 	80227010
CLPoint::getDivPoint() 	802272e0
CLPoint::getGroupID() const 	802272e8
CLPoint::getPrevPoint(int) 	802272f4
CLPoint::getNextPoint(int) 	80227304
CLPointController::tstReverse() const 	80227314
BombEffectObj::~BombEffectObj() 	8022731c
__sinit_ObjUtility_cpp	80227364
TstEmitterModeNotAvailableFlg(int, JPABaseEmitter *) 	80227484
TstEmitterModeAndClipNotAvailableFlg(int, JPABaseEmitter *) 	80227540
JPTraceEmitterCallBack::execute(JPABaseEmitter *) 	80227648
JPTraceEmitterCallBack::draw(JPABaseEmitter *) 	80227708
JPRotateOffsetEmitterCallBack::execute(JPABaseEmitter *) 	8022770c
JPRotateOffsetEmitterCallBack::draw(JPABaseEmitter *) 	8022787c
JPRotateXZEmitterCallBack::execute(JPABaseEmitter *) 	80227880
JPRotateXZEmitterCallBack::draw(JPABaseEmitter *) 	80227a38
JPRotateEmitterCallBack::execute(JPABaseEmitter *) 	80227a3c
JPRotateEmitterCallBack::calc_common(JPABaseEmitter *) 	80227a5c
JPRotateEmitterCallBack::getKartIndex(JPABaseEmitter *) 	80227b08
JPRotateEmitterCallBack::draw(JPABaseEmitter *) 	80227b10
JPBonusKartEfctEmitterCallBack::execute(JPABaseEmitter *) 	80227b14
JPKinokoDashEmitterCallBack::execute(JPABaseEmitter *) 	80227c0c
JPKinokoDashEmitterCallBack::draw(JPABaseEmitter *) 	80227e04
JPKinokoDash2EmitterCallBack::execute(JPABaseEmitter *) 	80227e08
JPKinokoDash2EmitterCallBack::draw(JPABaseEmitter *) 	80228048
JPPtclTraceEmitterCallBack::execute(JPABaseEmitter *) 	8022804c
JPPtclTraceEmitterCallBack::execute_common(JPABaseEmitter *) 	8022806c
JPPtclTraceEmitterCallBack::draw(JPABaseEmitter *) 	8022811c
JPStarEmitterCallBack::execute(JPABaseEmitter *) 	80228120
JPTireTraceEmitterCallBack::draw(JPABaseEmitter *) 	80228228
JPWheelSpinEmitterCallBack::execute(JPABaseEmitter *) 	8022822c
JPWheelSpinEmitterCallBack::draw(JPABaseEmitter *) 	8022832c
JPWaterWaveEmitterCallBack::execute(JPABaseEmitter *) 	80228330
JPWaterWaveEmitterCallBack::draw(JPABaseEmitter *) 	8022852c
JPWaterRippleEmitterCallBack::execute(JPABaseEmitter *) 	80228530
JPWaterRippleEmitterCallBack::draw(JPABaseEmitter *) 	80228698
JPKoukasenEmitterCallBack::execute(JPABaseEmitter *) 	8022869c
JPKoukasenEmitterCallBack::draw(JPABaseEmitter *) 	802288b4
JPCharFireEmitterCallBack::execute(JPABaseEmitter *) 	802288b8
JPCharFireEmitterCallBack::draw(JPABaseEmitter *) 	80228aa0
JPTireSandEmitterCallBack::execute(JPABaseEmitter *) 	80228aa4
JPTireSandEmitterCallBack::draw(JPABaseEmitter *) 	80228b54
JPKartWetEmitterCallBack::execute(JPABaseEmitter *) 	80228b58
JPKartWetEmitterCallBack::draw(JPABaseEmitter *) 	80228cbc
JPTraceParticleCallBack::execute(JPABaseEmitter *, JPABaseParticle *) 	80228cc0
JPTraceParticleCallBack::draw(JPABaseEmitter *, JPABaseParticle *) 	80228d98
JPStartFootSmokeEmitterCallBack::execute(JPABaseEmitter *) 	80228d9c
JPStartFootSmokeEmitterCallBack::draw(JPABaseEmitter *) 	80228e58
PermissionCounterObserver::reset() 	80228e5c
PermissionCounterObserver::calc() 	80228eb0
calcEfct_KartOverTurn(int, const JGeometry::TVec3<float> &, unsigned char) 	80228f30
calcEfct_KartSpin(int, const JGeometry::TVec3<float> &, unsigned char) 	802290f0
calcEfct_KartHalfSpin(int, const JGeometry::TVec3<float> &, unsigned char) 	802292bc
calcEfct_KartLanding(int, const JGeometry::TVec3<float> &, unsigned char) 	80229488
calcEfct_ColKartAndKart(int, const JGeometry::TVec3<float> &, unsigned char) 	802294d0
calcEfct_ColKartAndObject(int, const JGeometry::TVec3<float> &, unsigned char) 	80229658
calcEfct_KartWaterSplashSmall(int, const JGeometry::TVec3<float> &, unsigned char) 	80229790
calcEfct_KartWaterMudSplashSmall(int, const JGeometry::TVec3<float> &, unsigned char) 	80229914
calcEfct_KartWaterDrainSplashSmall(int, const JGeometry::TVec3<float> &, unsigned char) 	80229a98
calcEfct_KartWaterMudDiddySplashSmall(int, const JGeometry::TVec3<float> &, unsigned char) 	80229c1c
calcEfct_KartFallLava(int, const JGeometry::TVec3<float> &, unsigned char) 	80229da0
calcEfct_KartAccelExhaustL(int, const JGeometry::TVec3<float> &, unsigned char) 	80229ea4
calcEfct_KartAccelExhaustR(int, const JGeometry::TVec3<float> &, unsigned char) 	80229f40
calcEfct_KartSlide(int, const JGeometry::TVec3<float> &, unsigned char) 	80229fe0
calcEfct_KartStar(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a044
calcEfct_KartKinokoDash1(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a10c
calcEfct_KartKinokoDash2(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a208
calcEfct_KartKinokoDash3(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a304
calcEfct_KartMiniDash1(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a554
calcEfct_KartMiniDash2(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a650
calcEfct_KartWheelSpin(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a74c
calcEfct_KartWaterWave(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a7f0
calcEfct_KartWaterRipple(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a860
calcEfct_CharFire(int, const JGeometry::TVec3<float> &, unsigned char) 	8022a8d0
calcEfct_HitFireBall(int, const JGeometry::TVec3<float> &, unsigned char) 	8022aa78
calcEfct_KartTireSand(int, const JGeometry::TVec3<float> &, unsigned char) 	8022ac04
calcEfct_KartMiniDash(int, const JGeometry::TVec3<float> &, unsigned char) 	8022ad40
calcEfct_KartStartDash(int, const JGeometry::TVec3<float> &, unsigned char) 	8022ade4
calcEfct_KartTagStartDash(int, const JGeometry::TVec3<float> &, unsigned char) 	8022ae88
calcEfct_KartDash(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b238
calcEfct_KartDisappear(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b23c
calcEfct_KartInvalidity(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b398
calcEfct_KartWet(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b3e8
calcEfct_KartFireSmoke(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b754
calcEfct_BonusKartEfct(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b81c
calcEfct_KartDriftFireChipL(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b920
calcEfct_KartDriftFireChipR(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b974
calcEfct_KartStartHit(int, const JGeometry::TVec3<float> &, unsigned char) 	8022b9cc
calcEfct_StartFootSmoke(int, const JGeometry::TVec3<float> &, unsigned char) 	8022bae4
JPEffectPerformer::init() 	8022bd34
JPKoukasenEmitterCallBack::~JPKoukasenEmitterCallBac	8022be28
JPKoukasenEmitterCallBack::JPKoukasenEmitterCallBack() 	8022be80
JPEffectPerformer::reset() 	8022be9c
JPEffectPerformer::loadCourseParam(unsigned long) 	8022c020
JPEffectPerformer::calc() 	8022c0b4
JPEffectPerformer::deleteKartEfctKoukasen(int, unsigned char) 	8022c138
JPEffectPerformer::deleteKartEfctTireSand(int) 	8022c18c
JPEffectPerformer::getNearestCamPtr(const JGeometry::TVec3<float> &) 	8022c1fc
JPEffectPerformer::setEffect(JPEffectPerformer::EffectType, int, const JGeometry::TVec3<float> &, unsigned char) 	8022c340
JPEffectPerformer::setEffectSplash(CrsGround *, int, const JGeometry::TVec3<float> &) 	8022c410
JPEffectPerformer::setEffectEachCam(JPEffectPerformer::EffectType, int, unsigned char, unsigned char) 	8022c580
JPEffectPerformer::setLandEffect(const JGeometry::TVec3<float> &, CrsGround *, int) 	8022c684
JPEffectPerformer::getLandingEfctName(CrsGround *) 	8022c758
JPEffectPerformer::getKartEfctEmts(int) 	8022c804
JPEffectPerformer::deleteKartEfctWet(int) 	8022c818
JPStartFootSmokeEmitterCallBack::~JPStartFootSmokeEmitterCallBack() 	8022c854
JPTraceParticleCallBack::~JPTraceParticleCallBack() 	8022c8ac
JPKartWetEmitterCallBack::~JPKartWetEmitterCallBack() 	8022c904
JPTireSandEmitterCallBack::~JPTireSandEmitterCallBack() 	8022c95c
JPCharFireEmitterCallBack::~JPCharFireEmitterCallBack() 	8022c9b4
JPWaterRippleEmitterCallBack::~JPWaterRippleEmitterCallBack() 	8022ca0c
JPWaterWaveEmitterCallBack::~JPWaterWaveEmitterCallBack() 	8022ca64
JPWheelSpinEmitterCallBack::~JPWheelSpinEmitterCallBack() 	8022cabc
JPTireTraceEmitterCallBack::execute(JPABaseEmitter *) 	8022cb24
JPTireTraceEmitterCallBack::~JPTireTraceEmitterCallBack() 	8022cbd4
JPStarEmitterCallBack::~JPStarEmitterCallBack() 	8022cc2c
JPPtclTraceEmitterCallBack::~JPPtclTraceEmitterCallBack() 	8022cc94
JPKinokoDash2EmitterCallBack::~JPKinokoDash2EmitterCallBack() 	8022ccec
JPKinokoDashEmitterCallBack::~JPKinokoDashEmitterCallBack() 	8022cd44
JPBonusKartEfctEmitterCallBack::~JPBonusKartEfctEmitterCallBack() 	8022cd9c
JPRotateEmitterCallBack::~JPRotateEmitterCallBack() 	8022ce04
JPRotateXZEmitterCallBack::~JPRotateXZEmitterCallBack() 	8022ce5c
JPRotateOffsetEmitterCallBack::~JPRotateOffsetEmitterCallBack() 	8022ceb4
JPTraceEmitterCallBack::~JPTraceEmitterCallBack() 	8022cf0c
__sinit_JPEffectPerformer_cpp	8022cf64
PermissionCounterObserver::~PermissionCounterObserver() 	8022d3f8
__arraydtor$6953	8022d448
JPRotateFollowEmitterCallBack::~JPRotateFollowEmitterCallBack() 	8022d480
JPRotateFollowEmitterCallBack::getKartIndex(JPABaseEmitter *) 	8022d4e8
ItemJuggle::DoEquipScaleUp(float) 	8022d4f4
ItemJuggle::ParamInit(const JGeometry::TVec3<short> &) 	8022d564
ItemJuggle::InitMoveDivested() 	8022d604
ItemJuggle::MoveDivested() 	8022d710
ItemJuggle::MoveEquip() 	8022d9c0
ItemJuggle::doHandJuggleEquip(const JGeometry::TVec3<float> &, float (*) [4]) 	8022db5c
ItemJuggle::doMoveJuggleEquip(const JGeometry::TVec3<float> &, float (*) [4], JGeometry::TVec3<float>, float) 	8022de80
ItemObjSuc::getRotAxisRatio() 	8022e1a8
ItemBuild::ParamInit(const JGeometry::TVec3<short> &) 	8022e1b0
ItemBuild::DoEquipScaleUp(float) 	8022e3a8
ItemBuild::MoveEquip() 	8022e3f8
ItemBuild::setFirstPos(JGeometry::TVec3<float> *, float) 	8022e540
ItemBuild::setVel(float) 	8022e678
ItemBuild::setPos(JGeometry::TVec3<float> *, float) 	8022e84c
ItemBuild::setHeight(float) 	8022e8e8
ItemBuild::setRotate(float (*) [4]) 	8022e9bc
ItemBuild::setFirstRotate(float (*) [4]) 	8022ea9c
ItemBuild::InitMoveDivested() 	8022ebe4
ItemBuild::MoveDivested() 	8022eca4
ItemObjSuc::reset() 	8022f424
ItemObjSuc::initEquip() 	8022f484
ItemObjSuc::doEquip() 	8022f4ac
ItemObjSuc::initJuggleEquip() 	8022f4d4
ItemObjSuc::doJuggleEquip() 	8022f5c8
ItemObjSuc::setInitBuildAppend() 	8022f6ac
ItemObjSuc::initBuildEquip() 	8022f6e0
ItemObjSuc::doBuildEquip() 	8022f788
ItemObjSuc::selectSucChild() 	8022f858
ItemObjSuc::selectJuggleSucChild() 	8022f88c
ItemObjSuc::initDivested() 	8022f9a0
ItemObjSuc::doDivested() 	8022fb48
ItemObjSuc::setSucMultiType(ItemObj::cMultiType) 	8022fd60
ItemObjSuc::selectBuildSucChild() 	8022fe1c
ItemObjSuc::initForceDisappear() 	8022fe28
ItemObjSuc::doForceDisappear() 	8022fe2c
__sinit_ItemSuccession_cpp	8022fea0
J3DEfctBomb::J3DEfctBomb() 	8022ffac
J3DEffectObj::~J3DEffectObj() 	80230018
J3DEfctBomb::loadAnmData() 	80230088
J3DEfctBomb::getBmdFileName() 	802301a4
J3DEfctBomb::getBckFileName() 	802301d0
J3DEfctBomb::getBtkFileName() 	802301fc
J3DEfctBomb::getBrkFileName(unsigned char) 	80230228
J3DEfctBomb::onlyinit() 	802302c0
J3DEfctBomb::init() 	80230440
J3DEfctBomb::calc() 	802304a4
J3DEfctBomb::update() 	8023051c
J3DEfctBomb::changeColor(unsigned char) 	802305c8
J3DEfctBomb::~J3DEfctBomb() 	80230608
J3DEffectObj::setTrigger() 	802306a0
__sinit_J3DEfctBomb_cpp	802306a4
J3DAnmObjBase::loadJ3DModelData(void *, unsigned long) 	802307b0
J3DAnmObjBase::initFrameCtrl(J3DAnmBase *) 	802307d8
J3DAnmObjTrans::loadTransAnm(J3DAnmTransform **, void *) 	802307ec
J3DAnmObjTrans::setupTransAnmData(J3DAnmTransform **, J3DMtxCalc **, J3DModelData *, void *) 	80230824
J3DAnmObjTrans::attach(J3DAnmTransform *, J3DMtxCalc *) 	80230878
J3DAnmObjTrans::attachBlend(J3DAnmTransform *, J3DMtxCalc *) 	80230894
J3DAnmObjTrans::anmFrameProc() 	802308bc
J3DAnmObjMaterial::setupColorAnmData(J3DAnmColor **, J3DModelData *, void *) 	802308cc
J3DAnmObjMaterial::setupTexSRTAnmData(J3DAnmTextureSRTKey **, J3DModelData *, void *) 	80230a64
J3DAnmObjMaterial::setupTexPatternAnmData(J3DAnmTexPattern **, J3DModelData *, void *) 	80230c08
J3DAnmObjMaterial::setMaterialAnmTev<J3DAnmTevRegKey>(J3DAnmTevRegKey **, J3DModelData *) 	80230da0
J3DAnmObjCluster::loadClusterData(J3DDeformData **, void *) 	8023107c
J3DAnmObjCluster::loadClusterAnmData(J3DAnmCluster **, void *) 	802310b0
J3DAnmObjCluster::setDeformData(ExModel *, J3DDeformData *, bool) 	802310e8
J3DAnmObjCluster::attach(J3DAnmCluster *) 	80231120
__sinit_J3DAnmObject_cpp	8023113c
GeoObjPathMove::initPath(stRandom *, JGeometry::TVec3<float> *, const float &) 	80231248
GeoObjPathMove::movePath(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float, float) 	802312a4
GeoObjPathMove::nodeProc() 	802313f0
GeoObjPathMove::getPathData() 	8023147c
GeoObjPathMove::getMaxPathNodeNum() 	802314b0
GeoObjPathMove::getPathPos(JGeometry::TVec3<float> *, unsigned short) 	802314e8
GeoObjPathMoveWaveY::initPath(stRandom *, JGeometry::TVec3<float> *, const float &) 	80231538
GeoObjPathMoveWaveY::movePath(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float, float) 	80231614
__sinit_GeoObjPathMove_cpp	8023183c
EffectScreen::EffectScreen() 	80231948
EffectScreen::doDemo() 	8023195c
EffectScreen::doThunder() 	802319f4
EffectScreen::doBombExplosion() 	80231ae8
EffectScreen::doExplosion() 	80231bf4
EffectScreenMgr::EffectScreenMgr() 	80231cd8
EffectScreenMgr::reset() 	80231dc8
EffectScreenMgr::calc() 	80231ec4
EffectScreenMgr::flashThunder(int) 	80231f54
EffectScreenMgr::flashBombExplosion(unsigned char, const JGeometry::TVec3<float> &) 	80232048
EffectScreenMgr::startDemoScreen() 	802322ec
EffectScreenMgr::IsContinue(EffectScreen::ScreenKind) 	802323b4
EffectScreenMgr::draw_middle(unsigned long) 	802323c8
EffectScreenMgr::draw(unsigned long) 	80232570
EffectScreenMgr::draw_demoScreen(unsigned long) 	80232720
__sinit_EffectScreen_cpp	802328c8
stEfctRoadBase::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80232a40
stEfctRoad::stEfctRoad() 	80232b14
stEfctRoad::calc() 	80232bcc
stEfctRoadDrift::stEfctRoadDrift(short, short) 	80232c10
stEfctRoadDrift::calc() 	80232d18
stEfctRoadDrift::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80232e68
stEfctTireSpin::stEfctTireSpin() 	80232ea8
stEfctTireSpin::calc() 	80232f60
stEfctTireSpin::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80232fbc
stEfctSpinTurn::stEfctSpinTurn() 	80232fe8
stEfctSpinTurn::calc() 	802330a0
stEfctSpinTurn::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	802330e4
stEfctRoadDriftSmoke::stEfctRoadDriftSmoke() 	80233110
stEfctRoadDriftSmoke::init() 	802331ec
stEfctRoadDriftSmoke::calc() 	802331f0
stEfctRoadDriftSmoke::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80233234
stEfctRoadDriftChip::stEfctRoadDriftChip() 	80233260
stEfctRoadDriftChip::calc() 	8023333c
stEfctRoadDriftChip::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80233444
stEfctDirtCenter::stEfctDirtCenter() 	80233470
stEfctDirtCenter::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80233554
stEfctDirtCenter::calc() 	802336b0
stEfctCharBase::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	80233708
stEfctCharCenter::stEfctCharCenter() 	80233790
stEfctCharCenter::calc() 	8023383c
stEfctCharWeedCenter::stEfctCharWeedCenter() 	80233880
stEfctCharWeedCenter::calc() 	8023392c
stEfctCharBase::init() 	80233970
stEfctDirtCenter::init() 	80233974
stEfctRoadBase::init() 	80233978
stEfctRoadDrift::init() 	8023397c
__sinit_stEfctRoad_cpp	80233988
AnmControlTrans::registration(unsigned char, J3DAnmTransform *, J3DMtxCalc *) 	80233b70
AnmControlTrans::registrationBlend(unsigned char, J3DAnmTransform *, J3DMtxCalc *) 	80233ba8
AnmControlTrans::changeBlendAnm(unsigned char, unsigned char, unsigned char) 	80233be0
AnmControlTrans::frameProc() 	80233c5c
AnmController::AnmController() 	80233ec0
AnmController::InitRegistrationMat(const MatAnmInfo &, ExModel *) 	80233ee0
TAnmControlBase<J3DAnmObjMatTevReg>::~TAnmControlBase() 	8023424c
TAnmControlBase<J3DAnmObjMatTexPattern>::~TAnmControlBase() 	802342c0
TAnmControlBase<J3DAnmObjMatTexSRT>::~TAnmControlBase() 	80234334
TAnmControlBase<J3DAnmObjMatColor>::~TAnmControlBase() 	802343a8
AnmControlTrans::setAnmProc() 	8023441c
AnmController::FrameProc() 	802344bc
AnmController::SetAnimation() 	80234538
AnmController::Reset() 	802345b4
AnmController::ResetMat() 	80234600
AnmControlMatTevReg::~AnmControlMatTevReg() 	8023465c
AnmControlMatTevReg::changeMatAnm(unsigned char, bool) 	802346e0
AnmControlMatTexPattern::~AnmControlMatTexPattern() 	802347a8
AnmControlMatTexPattern::changeMatAnm(unsigned char, bool) 	8023482c
AnmControlMatTexSRT::~AnmControlMatTexSRT() 	802348f4
AnmControlMatTexSRT::changeMatAnm(unsigned char, bool) 	80234978
AnmControlMatColor::~AnmControlMatColor() 	80234a40
AnmControlMatColor::changeMatAnm(unsigned char, bool) 	80234ac4
AnmControlTrans::~AnmControlTrans() 	80234b8c
TAnmControlBase<J3DAnmObjMatTevReg>::initAnm(unsigned char, ExModel *) 	80234c10
TAnmControlBase<J3DAnmObjMatTevReg>::resetAnm() 	80234ce0
TAnmControlBase<J3DAnmObjMatTevReg>::resetMatAnm() 	80234d5c
TAnmControlBase<J3DAnmObjMatTexPattern>::initAnm(unsigned char, ExModel *) 	80234da4
TAnmControlBase<J3DAnmObjMatTexPattern>::resetAnm() 	80234e74
TAnmControlBase<J3DAnmObjMatTexPattern>::resetMatAnm() 	80234ef0
TAnmControlBase<J3DAnmObjMatTexSRT>::initAnm(unsigned char, ExModel *) 	80234f38
TAnmControlBase<J3DAnmObjMatTexSRT>::resetAnm() 	80235008
TAnmControlBase<J3DAnmObjMatTexSRT>::resetMatAnm() 	80235084
TAnmControlBase<J3DAnmObjMatColor>::initAnm(unsigned char, ExModel *) 	802350cc
TAnmControlBase<J3DAnmObjMatColor>::resetAnm() 	8023519c
TAnmControlBase<J3DAnmObjMatColor>::resetMatAnm() 	80235218
TAnmControlBase<J3DAnmObjMatColor>::setAnmProc() 	80235260
TAnmControlBase<J3DAnmObjMatColor>::frameProc() 	8023529c
J3DAnmObjMatColor::J3DAnmObjMatColor() 	802352dc
TAnmControlBase<J3DAnmObjMatTexSRT>::setAnmProc() 	8023534c
J3DAnmObjMaterialBase<J3DAnmTextureSRTKey>::anmFrameProc() 	80235388
J3DAnmObjMatTexSRT::~J3DAnmObjMatTexSRT() 	80235398
J3DAnmObjMatTexSRT::J3DAnmObjMatTexSRT() 	80235418
J3DAnmObjMaterialBase<J3DAnmTextureSRTKey>::~J3DAnmObjMaterialBase() 	80235488
TAnmControlBase<J3DAnmObjMatTexPattern>::setAnmProc() 	802354f8
TAnmControlBase<J3DAnmObjMatTexPattern>::frameProc() 	80235534
TAnmControlBase<J3DAnmObjMatTevReg>::setAnmProc() 	80235574
J3DAnmObjMaterialBase<J3DAnmTevRegKey>::anmFrameProc() 	802355b0
TAnmControlBase<J3DAnmObjMatTevReg>::frameProc() 	802355c0
J3DAnmObjMatTevReg::~J3DAnmObjMatTevReg() 	80235600
J3DAnmObjMatTevReg::J3DAnmObjMatTevReg() 	80235680
J3DAnmObjMaterialBase<J3DAnmTevRegKey>::~J3DAnmObjMaterialBase() 	802356f0
__sinit_AnmController_cpp	80235760
RivalKart::RivalKart(KartBody *) 	8023586c
RivalKart::~RivalKart() 	80235a4c
RivalKart::Init() 	80235ab0
RivalKart::StartInit() 	80235af8
RivalKart::Reset() 	80235b20
RivalKart::ResetInit() 	80235b44
RivalKart::setRankAry() 	80235b8c
RivalKart::getMaxSpeed() const 	80235bb0
RivalKart::getOffsetMaxSpeed() const 	80235bbc
RivalKart::setMaxSpeed(const float &) 	80235bc8
RivalKart::ContempLate() 	80235bd8
RivalKart::ActiveCtrl() 	80235c68
__sinit_RivalKart_cpp	80235c6c
RivalKart::@4@~RivaKart	80235d78
StateObserver::StateObserver() 	80235d80
StateObserver::~StateObserver() 	80235da0
StateObserver::ExecuteState() 	80235de8
StateObserver::ResetState() 	80235e40
StateObserver::setState(unsigned short) 	80235e54
StateObserver::changeState() 	80235e5c
IKCtrl::IKCtrl(int, unsigned char) 	80235ea4
IKCtrl::calcJointScaleMtx(JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> *, float (*) [4]) 	80235f3c
NeckCtrl::NeckCtrl(int, unsigned char, bool) 	8023607c
IKCtrl::~IKCtrl() 	8023638c
NeckCtrl::reset() 	802363d4
NeckCtrl::calcFrontDirQt() 	8023648c
NeckCtrl::initFunc_Search() 	80236a8c
NeckCtrl::doFunc_Search() 	80236b00
NeckCtrl::initFunc_Follow() 	80236c94
NeckCtrl::doFunc_Follow() 	80236c98
NeckCtrl::initFunc_Look() 	80236da8
NeckCtrl::doFunc_Look() 	80236dac
NeckCtrl::initFunc_Return() 	80236ebc
NeckCtrl::doFunc_Return() 	80236ec0
NeckCtrl::initFunc_LookShine() 	80236f18
NeckCtrl::doFunc_LookShine() 	80236f1c
NeckCtrl::searchRivalKart() 	8023705c
NeckCtrl::checkMaxAngle(float (*) [4]) 	802370b0
NeckCtrl::update(float (*) [4], float (*) [4], LumbarCtrl *, unsigned long) 	80237a9c
HairCtrl::reset() 	8023808c
HairCtrl::makeFaceNormalizeMtx(float (*) [4], JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &) 	80238098
HairCtrl::lockString(float (*) [4], const JGeometry::TVec3<float> &, float) 	80238264
DonkeyTieCtrl::lockStringTieMin(float (*) [4], const JGeometry::TVec3<float> &, float, bool) 	802383dc
HairCtrl::lockStringMin(float (*) [4], const JGeometry::TVec3<float> &, float, float) 	80238540
HairCtrl::update_hair1_common(float (*) [4], DriverModel *) 	802386ac
HairCtrl::update_hair1(float (*) [4], float (*) [4], DriverModel *) 	802387f4
HairCtrl::update_hair2(float (*) [4], DriverModel *) 	802387f8
HairCtrl::calcHairMtx(unsigned long, DriverModel *) 	802387fc
PeachHairCtrl::PeachHairCtrl(int, unsigned char) 	80238800
HairCtrl::~HairCtrl() 	802389cc
PeachHairCtrl::update_hair1(float (*) [4], float (*) [4], DriverModel *) 	80238a28
PeachHairCtrl::update_hair2(float (*) [4], DriverModel *) 	80238c7c
PeachHairCtrl::calcHairMtx(unsigned long, DriverModel *) 	80238cac
PeachHairCtrl::calcHairString(float (*) [4], const JGeometry::TVec3<float> &) 	80238e70
DaisyHairCtrl::DaisyHairCtrl(int, unsigned char) 	80238ec4
DaisyHairCtrl::update_hair1(float (*) [4], float (*) [4], DriverModel *) 	80239004
DaisyHairCtrl::update_hair2(float (*) [4], DriverModel *) 	80239234
DaisyHairCtrl::calcHairString(float (*) [4], const JGeometry::TVec3<float> &) 	80239414
KinopicoHairCtrl::KinopicoHairCtrl(int, unsigned char, KinopicoHairCtrl::KHairLR) 	80239480
KinopicoHairCtrl::reset() 	80239690
KinopicoHairCtrl::update_hair1(float (*) [4], float (*) [4], DriverModel *) 	802396d8
KinopicoHairCtrl::calcJointMtx(unsigned long, JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &, DriverModel *) 	80239958
KinopicoHairCtrl::update_hair2(float (*) [4], DriverModel *) 	80239b34
KinopicoHairCtrl::offsetMtxPos(unsigned long) 	80239b7c
KinopicoHairCtrl::calcHairString(float (*) [4], const JGeometry::TVec3<float> &) 	80239c00
KinopicoHairCtrl::calcHairMtx(unsigned long, DriverModel *) 	80239df4
KinopicoHairCtrl::lockStringKp(float (*) [4], const JGeometry::TVec3<float> &) 	80239e1c
DonkeyTieCtrl::DonkeyTieCtrl(int, unsigned char) 	80239fbc
DonkeyTieCtrl::update_hair1(float (*) [4], float (*) [4], DriverModel *) 	8023a188
DonkeyTieCtrl::calcHairString(float (*) [4], const JGeometry::TVec3<float> &) 	8023a34c
CharIKParamMgr::CharIKParamMgr() 	8023a3a0
CharIKParamMgr::load() 	8023a40c
CharIKParamMgr::getFileName(unsigned long) 	8023a4e8
DonkeyTieCtrl::~DonkeyTieCtrl() 	8023a4fc
KinopicoHairCtrl::~KinopicoHairCtrl() 	8023a568
DaisyHairCtrl::~DaisyHairCtrl() 	8023a5d4
PeachHairCtrl::~PeachHairCtrl() 	8023a640
NeckCtrl::~NeckCtrl() 	8023a6ac
__sinit_NeckCtrl_cpp	8023a708
LumbarCtrl::LumbarCtrl(int, unsigned char) 	8023a830
LumbarCtrl::reset() 	8023a9a4
LumbarCtrl::update(float (*) [4], DriverModel *) 	8023aa34
LumbarCtrl::calcKartInertialForce(JGeometry::TVec3<float> *, float, float, float) 	8023b008
LumbarCtrl::update_damage(float (*) [4], DriverModel *) 	8023b110
LumbarCtrl::calcString(const JGeometry::TVec3<float> &) 	8023b4c4
FootCtrl::FootCtrl(int, unsigned char) 	8023b70c
FootCtrl::reset() 	8023b750
FootCtrl::update_damage(float (*) [4], const LumbarCtrl &, FootCtrl::EFootCtrlKind) 	8023b788
LumbarCtrl::calcScaleMtx(float (*) [4]) 	8023bb60
FootCtrl::~FootCtrl() 	8023bcc0
LumbarCtrl::~LumbarCtrl() 	8023bd1c
__sinit_LumbarCtrl_cpp	8023bd78
ArmCtrl::ArmCtrl(int, unsigned char) 	8023be84
ArmCtrl::reset() 	8023bed0
ArmCtrl::update_HandR(const LumbarCtrl &, float (*) [4]) 	8023bed4
ArmCtrl::~ArmCtrl() 	8023bfac
__sinit_ArmCtrl_cpp	8023c008
ItemThunder::ItemThunder(unsigned long) 	8023c114
ItemThunder::~ItemThunder() 	8023c1b4
ItemThunder::entrySuperVisor(GeoObjSupervisor *) 	8023c2d0
ItemThunder::reset() 	8023c300
ItemThunder::getBmdFileName() 	8023c3cc
ItemThunder::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8023c3f4
ItemThunder::doUniv() 	8023c428
ItemThunder::initEquip() 	8023c4f8
ItemThunder::doEquip() 	8023c54c
ItemThunder::initRelease() 	8023c574
ItemThunder::doRelease() 	8023c5a8
ItemThunder::initDisappear() 	8023c5ac
ItemThunder::doDisappear() 	8023c698
ItemThunder::initFall() 	8023c6e8
ItemThunder::doFall() 	8023c710
ItemThunder::initForceDisappear() 	8023c794
ItemThunder::checkKartColDisappear(int) 	8023c7c8
ItemThunder::setEffectThunder(int) 	8023c7dc
ItemThunder::deleteEffectThunder() 	8023c8a0
ItemThunder::doEffectThunder() 	8023c930
__sinit_ItemThunder_cpp	8023ca84
ItemThunder::@688@~ItemThunder	8023cbd8
ItemFlyTurtle::ItemFlyTurtle(unsigned long) 	8023cbe0
ItemFlyTurtle::reset() 	8023cc94
ItemFlyTurtle::getBmdFileName() 	8023cdf0
ItemFlyTurtle::loadAnmData(J3DModelData *) 	8023ce18
ItemFlyTurtle::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	8023ceb4
ItemFlyTurtle::createColModel(J3DModelData *) 	8023cfc8
ItemFlyTurtle::update() 	8023cff0
ItemFlyTurtle::setCurrentViewNo(unsigned long) 	8023d038
ItemFlyTurtle::doUniv() 	8023d09c
ItemFlyTurtle::initEquip() 	8023d11c
ItemFlyTurtle::doEquip() 	8023d170
ItemFlyTurtle::initRelease() 	8023d198
ItemFlyTurtle::setInitReleaseParam() 	8023d390
ItemFlyTurtle::doRelease() 	8023d3f4
ItemFlyTurtle::initForceDisappear() 	8023d4d8
ItemFlyTurtle::deleteEffect() 	8023d518
ItemFlyTurtle::moveWait() 	8023d55c
ItemFlyTurtle::moveFlying() 	8023d638
ItemFlyTurtle::moveSearchBack() 	8023d784
ItemFlyTurtle::moveSearch() 	8023d998
ItemFlyTurtle::moveAttack() 	8023dbf0
ItemFlyTurtle::moveCommon() 	8023dd7c
ItemFlyTurtle::moveRescue(CrsGround &) 	8023de98
ItemFlyTurtle::find1StKartNo() 	8023df1c
ItemFlyTurtle::chkSearchTargetKartRadius() 	8023e068
ItemFlyTurtle::chkIsBackTargetKartOffsetPos() 	8023e14c
ItemFlyTurtle::moveNormal(CrsGround &) 	8023e270
ItemFlyTurtle::moveColWall(CrsGround &) 	8023e4ac
ItemFlyTurtle::moveCannon(CrsGround &) 	8023e65c
ItemFlyTurtle::initDisappear() 	8023e688
ItemFlyTurtle::doDisappear() 	8023e768
ItemFlyTurtle::initFall() 	8023e83c
ItemFlyTurtle::calcNowHeight() 	8023e85c
CLPointControllerFlyTurtle::CLPointControllerFlyTurtle() 	8023e9e4
CLPointControllerFlyTurtle::findNextPointNo(CLPoint *) 	8023ea2c
CLPointControllerFlyTurtle::recursiveTargetCalcBack(CLPoint *, int, int *, unsigned char *, bool *) 	8023ebc0
ItemFlyTurtle::~ItemFlyTurtle() 	8023ee30
ItemFlyTurtle::getLockOnKartNo() const 	8023ef40
ItemFlyTurtle::initSpRelease() 	8023ef48
ItemFlyTurtle::doSpRelease() 	8023ef74
__sinit_ItemFlyTurtle_cpp	8023efa0
stEfctWaterBase::getWaterHeight(int) 	8023f0c8
stEfctWaterTrack::stEfctWaterTrack() 	8023f0f0
stEfctWaterTrack::calc() 	8023f1b4
stEfctWaterTrack::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8023f1f8
stEfctWaterSpray::stEfctWaterSpray() 	8023f35c
stEfctWaterSpray::calc() 	8023f42c
stEfctWaterSpray::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8023f4e4
stEfctWaterSprayCenter::stEfctWaterSprayCenter() 	8023f5e0
stEfctWaterSprayCenter::calc() 	8023f6a4
stEfctWaterSprayCenter::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8023f75c
stEfctWaterBubble::stEfctWaterBubble(bool) 	8023f8a8
stEfctWaterBubble::calc() 	8023f984
stEfctWaterBubble::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8023fa3c
stEfctCrsWaterSpray::stEfctCrsWaterSpray() 	8023fb48
stEfctCrsWaterSpray::getGeneratePos(JGeometry::TVec3<float> *, float (*) [4]) 	8023fc1c
stEfctCrsWaterSpray::getWaterHeight(int) 	8023fd28
stEfctCrsWaterBubble::stEfctCrsWaterBubble() 	8023fd58
stEfctCrsWaterBubble::getWaterHeight(int) 	8023fe20
stEfctWaterBubble::init() 	8023fe50
stEfctWaterSpray::init() 	8023fe54
stEfctWaterSprayCenter::init() 	8023fe58
stEfctWaterTrack::init() 	8023fe5c
stEfctWaterBase::init() 	8023fe68
__sinit_stEfctWater_cpp	8023fe6c
J3DEfctSplashDown::J3DEfctSplashDown() 	8023ffa4
J3DEfctSplashDown::loadAnmData() 	80240010
J3DEfctSplashDown::getBmdFileName() 	80240088
J3DEfctSplashDown::getBckFileName() 	80240094
J3DEfctSplashDown::getBtkFileName() 	802400a0
J3DEfctSplashDown::getBrkFileName() 	802400ac
J3DEfctSplashDown::onlyinit() 	802400b8
J3DEfctSplashDown::init() 	802401f4
J3DEfctSplashDown::calc() 	80240228
JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>>::makeRotate(const JGeometry::TVec3<float> &, float) 	80240374
J3DEfctSplashDown::getJPAfilename() 	802403a4
J3DEfctSplashDown::update() 	802403b0
J3DEfctMudSplashDown::J3DEfctMudSplashDown() 	802403f8
J3DEfctSplashDown::~J3DEfctSplashDown() 	8024046c
J3DEfctMudSplashDown::loadAnmData() 	80240504
J3DEfctMudSplashDown::getBmdFileName() 	8024057c
J3DEfctMudSplashDown::getBckFileName() 	80240588
J3DEfctMudSplashDown::getBtkFileName() 	80240594
J3DEfctMudSplashDown::getBrkFileName() 	802405a0
J3DEfctMudSplashDown::getJPAfilename() 	802405d0
J3DEfctMudSplashDown::onlyinit() 	80240600
J3DEfctMudSplashDown::~J3DEfctMudSplashDown() 	8024073c
__sinit_J3DEfctSplashDown_cpp	802407e4
ItemYoshiEgg::ItemYoshiEgg(unsigned long) 	802408f0
ItemYoshiEgg::reset() 	80240984
ItemYoshiEgg::getBmdFileName() 	80240a0c
ItemYoshiEgg::loadAnmData(J3DModelData *) 	80240a34
ItemYoshiEgg::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80240a78
ItemYoshiEgg::update() 	80240ad8
ItemYoshiEgg::doUniv() 	80240b2c
ItemYoshiEgg::initEquip() 	80240ccc
ItemYoshiEgg::initRelease() 	80240d84
ItemYoshiEgg::initSpRelease() 	80240db8
ItemYoshiEgg::initFall() 	80240de8
ItemYoshiEgg::initDisappear() 	80240e1c
ItemYoshiEgg::doDisappear() 	802411e4
ItemYoshiEgg::calcRotQuat(Quaternion *) 	802411e8
ItemYoshiEgg::calcCreateItem(unsigned long *) 	802412cc
ItemYoshiEgg::calcRndItemKind(unsigned long, unsigned long *, unsigned long *) 	80241438
ItemYoshiEgg::calcColReaction(ItemObj *) 	802414e4
ItemYoshiEgg::moveColWall(CrsGround &) 	80241540
ItemYoshiEgg::checkKartColDisappear(int) 	8024158c
ItemYoshiEgg::~ItemYoshiEgg() 	802415d8
ItemYoshiEgg::checkOver1stKart() 	80241730
ItemYoshiEgg::calcGndUpdateQuat() 	80241738
ItemYoshiEgg::calcFlyingUpdateQuat() 	8024173c
__sinit_ItemYoshiEgg_cpp	80241740
RivalItemCtrl::RivalItemCtrl(RivalKart *) 	80241868
RivalCtrlBase::~RivalCtrlBase() 	802418b4
RivalItemCtrl::~RivalItemCtrl() 	802418fc
RivalItemCtrl::init() 	80241974
RivalItemCtrl::reset() 	80241994
RivalItemCtrl::doItemCtrl() 	802419d0
RivalItemCtrl::startItem(ItemObj *) 	80241bb4
RivalItemCtrl::execute_endItemParam() 	80241c24
RivalItemCtrl::set_endItemParam() 	80241c5c
RivalItemCtrl::setThrowFlg(bool) 	80241c8c
RivalItemCtrl::initItem_GTurtle() 	80241dc8
RivalItemCtrl::useItem_GTurtle_Normal() 	80241e24
RivalItemCtrl::initItem_GTurtleSuc() 	80241eb8
RivalItemCtrl::useItem_GTurtleSuc_Normal() 	80241f68
RivalItemCtrl::initItem_RTurtle() 	802421c0
RivalItemCtrl::useItem_RTurtle_Normal() 	8024221c
RivalItemCtrl::initItem_Bomb() 	802422b0
RivalItemCtrl::initItem_YoshiEgg() 	8024230c
RivalItemCtrl::useItem_YoshiEgg_Normal() 	80242368
RivalItemCtrl::useItem_Bomb_Normal() 	80242448
RivalItemCtrl::initItem_Banana() 	80242528
RivalItemCtrl::useItem_Banana_Normal() 	8024257c
RivalItemCtrl::initItem_Kinoko() 	80242658
RivalItemCtrl::useItem_Kinoko_Normal() 	802426b4
RivalItemCtrl::initItem_KinokoSuc() 	802427d4
RivalItemCtrl::useItem_KinokoSuc_Normal() 	80242884
RivalItemCtrl::initItem_GoldenKinoko() 	8024293c
RivalItemCtrl::useItem_GoldenKinoko() 	80242998
RivalItemCtrl::initItem_Star() 	80242aec
RivalItemCtrl::useItem_Star_Normal() 	80242b48
RivalItemCtrl::initItem_Thunder() 	80242c00
RivalItemCtrl::useItem_Thunder_Normal() 	80242c5c
RivalItemCtrl::initItem_WanWan() 	80242c8c
RivalItemCtrl::useItem_WanWan_Normal() 	80242ce8
RivalItemCtrl::triggerButton() 	80242d18
RivalItemCtrl::triggerButtonStickFront(float) 	80242e0c
RivalItemCtrl::triggerButtonStickBack(float) 	80242f10
__sinit_RivalItemCtrl_cpp	80243018
RivalItemCtrl::@12@~RivalItemCtrl	80243124
RivalCtrlBase::RankParam::RankParam(int) 	8024312c
RivalCtrlBase::RankParam::reset() 	80243160
RivalCtrlBase::RivalCtrlBase(RivalKart *) 	8024317c
RivalCtrlBase::getMyID() 	80243190
RivalCtrlBase::getBodyCtrl() 	8024319c
RivalCtrlBase::getBody() 	802431a8
RivalCtrlBase::getRandom() 	802431b4
RivalCtrlBase::getRankParamID() 	802431d8
RivalCtrlBase::tstEndRace() 	802431ec
RivalCtrlBase::isRival() const 	80243248
RivalCtrlBase::getMyRank() 	80243268
RivalBodyCtrl::RivalBodyCtrl(RivalKart *) 	80243288
RivalBodyCtrl::~RivalBodyCtrl() 	80243300
RivalBodyCtrl::init() 	80243378
RivalBodyCtrl::reset() 	80243454
RivalBodyCtrl::setRankArray() 	80243530
RivalBodyCtrl::chkPlayerKartCondition() 	80243710
RivalBodyCtrl::chkBodyCondition() 	8024378c
RivalBodyCtrl::getKartIndexByRank(int) 	80243840
RivalBodyCtrl::doNextPoint(bool) 	80243858
RivalBodyCtrl::calcTargetPosDrift() 	802439a0
RivalBodyCtrl::calcTargetPosNormal(float) 	802439a4
RivalBodyCtrl::getFwPointPos(JGeometry::TVec3<float> *) 	80243b64
RivalBodyCtrl::getPointRSideDir(JGeometry::TVec3<float> *) 	80243ba8
RivalBodyCtrl::getLengthFCenter() 	80243cb0
RivalBodyCtrl::isNeighborhoodCenter(float) 	80243e58
RivalBodyCtrl::getDriftTargetDir(JGeometry::TVec3<float> *) 	80243ecc
RivalBodyCtrl::getTargetCurveLR(float *, short) 	80243f98
RivalBodyCtrl::chkDriftPoint() 	802441b0
RivalBodyCtrl::chkArrivePoint(CLPoint *) 	8024435c
RivalBodyCtrl::initDrift(bool, CLPoint *) 	8024442c
RivalBodyCtrl::doDriftCtrl() 	80244978
RivalBodyCtrl::reviseAfterDriftVtTargetPos() 	80244c6c
RivalBodyCtrl::doSterrCtrl() 	80244e24
RivalBodyCtrl::doRotPosSterr(const JGeometry::TVec3<float> &) 	80244f58
RivalBodyCtrl::doColWallCtrl() 	80245190
RivalBodyCtrl::doChangeDriverCtrl() 	802453b0
RivalBodyCtrl::calcMaxChangeWaitCnt() 	80245504
RivalBodyCtrl::doStateFlgCtrl() 	80245544
RivalBodyCtrl::comebackRescure(CLPoint *, bool) 	80245548
RivalBodyCtrl::resetPointData() 	802455c8
RivalBodyCtrl::resetBodyData() 	80245848
RivalBodyCtrl::isOneUpperLowerPlayer(bool) 	802458d8
RivalBodyCtrl::getLowestPlayerDist(float *) 	8024595c
RivalBodyCtrl::findMyRankOnlyCom() 	802459a8
RivalBodyCtrl::getTopComKartIndex(RivalBodyCtrl *) 	80245a00
RivalBodyCtrl::getMyFowardComKartIndex() 	80245a78
RivalBodyCtrl::getMyBackwardComKartIndex(unsigned char) 	80245b14
RivalBodyCtrl::setDriftInfo() 	80245bc4
RivalBodyCtrl::doRotPose(JGeometry::TVec3<float>, float) 	80245db0
CLPointControllerRivalKart::CLPointControllerRivalKart(RivalBodyCtrl *) 	80246264
CLPointControllerRivalKart::findNextPointNo(CLPoint *) 	802462b4
RivalAwardBodyCtrl::RivalAwardBodyCtrl(RivalKart *) 	8024630c
RivalAwardBodyCtrl::doNextPoint(bool) 	802463ac
RivalAwardBodyCtrl::doRotPosSterr(const JGeometry::TVec3<float> &) 	80246510
RivalAward2ndBodyCtrl::RivalAward2ndBodyCtrl(RivalKart *) 	80246560
RivalAwardBodyCtrl::~RivalAwardBodyCtrl() 	80246614
RivalAward2ndBodyCtrl::doSterrCtrl() 	802466a4
RivalAward2ndBodyCtrl::calcVtTargetPos() 	802467dc
RivalAward2ndBodyCtrl::doNextPoint(bool) 	802468d8
RivalAwardBodyCtrl::doDriftCtrl() 	802468e0
RivalAwardBodyCtrl::doChangeDriverCtrl() 	802468e4
RivalAward2ndBodyCtrl::~RivalAward2ndBodyCtrl() 	802468e8
__sinit_RivalBodyCtrl_cpp	80246990
RivalBodyCtrl::@12@~RivalBodyCtrl	80246a9c
RivalAwardBodyCtrl::@12@~RivalAwardBodyCtrl	80246aa4
RivalAward2ndBodyCtrl::@12@~RivalAward2ndBodyCtrl	80246aac
RivalSpeedCtrl::RivalSpeedCtrl(RivalKart *) 	80246ab4
RivalSpeedCtrl::~RivalSpeedCtrl() 	80246d3c
RivalSpeedCtrl::StartInit() 	80246dbc
RivalSpeedCtrl::ResetInit() 	80246ef8
RivalSpeedCtrl::LoadCrsLevelParam() 	80246f54
RivalSpeedCtrl::InitRndStartRank() 	8024704c
RivalSpeedCtrl::getNowCrsIndex() 	802471a0
RivalSpeedCtrl::reset() 	80247274
RivalSpeedCtrl::init() 	802472e0
RivalSpeedCtrl::initStartDash() 	80247348
RivalSpeedCtrl::doSpeedCtrl() 	802474a8
RivalSpeedCtrl::doPlayerDistSpeedCtrl() 	80247758
RivalSpeedCtrl::doAccelCtrl() 	80247834
RivalSpeedCtrl::doCurveDegSpdCtrl() 	80247864
RivalSpeedCtrl::doRankSpdCtrl() 	802479dc
RivalBodyCtrl::getKartTotalDist(int) 	80247d6c
RivalSpeedCtrl::resetRaceStrengthening() 	80247d80
RivalSpeedCtrl::clampMaxSpeed() 	80247df8
RivalAwardDemoSpeedCtrl::RivalAwardDemoSpeedCtrl(RivalKart *) 	80247e4c
RivalAwardDemoSpeedCtrl::reset() 	80247e9c
RivalAwardDemoSpeedCtrl::initStartDash() 	80247f14
RivalAwardDemoSpeedCtrl::doAccelCtrl() 	80247f4c
RivalAwardDemoSpeedCtrl::doAccelMaxSpdCtrl() 	80247f60
RivalAwardDemoSpeedCtrl::doSpeedCtrl() 	80247fd8
RivalAwardDemo2ndSpeedCtrl::RivalAwardDemo2ndSpeedCtrl(RivalKart *) 	8024808c
RivalAwardDemoSpeedCtrl::~RivalAwardDemoSpeedCtrl() 	802480fc
RivalAwardDemo2ndSpeedCtrl::reset() 	80248194
RivalAwardDemo2ndSpeedCtrl::doAccelMaxSpdCtrl() 	80248210
RivalAwardDemo2ndSpeedCtrl::doAccelCtrl() 	8024838c
RivalStaffRollDemoSpeedCtrl::RivalStaffRollDemoSpeedCtrl(RivalKart *) 	80248390
RivalStaffRollDemoSpeedCtrl::reset() 	80248400
RivalStaffRollDemoSpeedCtrl::doSpeedCtrl() 	80248484
RivalStaffRollDemoSpeedCtrl::stop_immediately() 	802484e0
RivalAwardDemoSpeedCtrl::stop() 	802484ec
RivalStaffRollDemoSpeedCtrl::~RivalStaffRollDemoSpeedCtrl() 	802484f8
RivalAwardDemo2ndSpeedCtrl::set_speeddown() 	802485a8
RivalAwardDemoSpeedCtrl::stop_immediately() 	802485b4
RivalAwardDemo2ndSpeedCtrl::~RivalAwardDemo2ndSpeedCtrl() 	802485c0
RivalSpeedCtrl::stop() 	80248670
__sinit_RivalSpeedCtrl_cpp	80248674
JSUList<RivalStartRankParam>::~JSUList() 	802487a4
RivalSpeedCtrl::@12@~RivalSpeedCtrl	802487f0
RivalAwardDemoSpeedCtrl::@12@~RivalAwardDemoSpeedCtrl	802487f8
RivalAwardDemo2ndSpeedCtrl::@12@~RivalAwardDemo2ndSpeedCtrl	80248800
RivalStaffRollDemoSpeedCtrl::@12@~RivalStaffRollDemoSpeedCtrl	80248808
J3DEfctIceRock::J3DEfctIceRock() 	80248810
J3DEfctIceRock::loadAnmData() 	8024887c
J3DEfctIceRock::getBmdFileName() 	80248904
J3DEfctIceRock::getBckFileName(unsigned char) 	80248910
J3DEfctIceRock::getBtkFileName() 	8024892c
J3DEfctIceRock::onlyinit() 	80248938
J3DEfctIceRock::init() 	80248a68
J3DEfctIceRock::calc() 	80248aac
J3DEfctIceRock::setTrigger() 	80248ae4
J3DEfctIceRock::update() 	80248b64
J3DEfctIceRock::setModelMtx() 	80248bac
J3DEfctIceRock::~J3DEfctIceRock() 	80248c68
__sinit_J3DEfctIceRock_cpp	80248d00
ItemHeart::ItemHeart(unsigned long) 	80248e0c
ItemHeart::reset() 	80248e5c
ItemHeart::getBmdFileName() 	80248f18
ItemHeart::createModel(JKRSolidHeap *, unsigned long, unsigned long) 	80248f24
ItemHeart::doUniv() 	80248f28
ItemHeart::setHitItem(const ItemObj &) 	80248fd4
ItemHeart::initMoveEffect(ItemObj *) 	80249118
ItemHeart::initEquip() 	80249188
ItemHeart::doEquip() 	8024920c
ItemHeart::initRelease() 	802492d8
ItemHeart::initSpRelease() 	80249390
ItemHeart::doRelease() 	802493b4
ItemHeart::initDisappear() 	802493e4
ItemHeart::doDisappear() 	8024947c
ItemHeart::initFall() 	80249480
ItemHeart::~ItemHeart() 	802494a0
__sinit_ItemHeart_cpp	80249598
JPTraceHParticleCallBack::execute(JPABaseEmitter *, JPABaseParticle *) 	802496a4
JPTraceHParticleCallBack::draw(JPABaseEmitter *, JPABaseParticle *) 	8024973c
J3DEfctHeart::J3DEfctHeart() 	80249740
J3DEfctHeart::getBmdFileName() 	802497b4
J3DEfctHeart::onlyinit() 	802497c0
J3DEfctHeart::init() 	80249974
J3DEfctHeart::calc() 	80249a10
J3DEfctHeart::initFunc_Rolling() 	80249b24
J3DEfctHeart::doFunc_Rolling() 	80249bc0
J3DEfctHeart::initFunc_MoveToHand() 	80249e60
J3DEfctHeart::doFunc_MoveToHand() 	80249e64
J3DEfctHeart::initFunc_ColItemDisappear() 	80249fa0
J3DEfctHeart::doFunc_ColItemDisappear() 	80249fa4
J3DEfctHeart::initFunc_Disappear() 	8024a13c
J3DEfctHeart::doFunc_Disappear() 	8024a1a8
J3DEfctHeart::update() 	8024a1ac
J3DEfctHeart::setHitStartPos(const ItemObj &) 	8024a1dc
J3DEfctHeart::initItemHit(const ItemObj &) 	8024a2e0
J3DEfctHeart::setMoveEfct(ItemObj *, ItemHeart *) 	8024a414
J3DEfctHeart::doPosLerp(JGeometry::TVec3<float> *, const JGeometry::TVec3<float> &) 	8024a4b8
J3DEfctHeart::~J3DEfctHeart() 	8024a5a0
JPTraceHParticleCallBack::~JPTraceHParticleCallBack() 	8024a620
__sinit_J3DEfctHeart_cpp	8024a678
FUN_8024a7b0	8024a7b0
FUN_8024a7d0	8024a7d0
FUN_8024a804	8024a804
FUN_8024a824	8024a824
FUN_8024a850	8024a850
FUN_8024a888	8024a888
FUN_8024a934	8024a934
FUN_8024a9dc	8024a9dc
FUN_8024aa44	8024aa44
FUN_8024aca0	8024aca0
FUN_8024accc	8024accc
FUN_8024ad38	8024ad38
FUN_8024ad60	8024ad60
FUN_8024ad7c	8024ad7c
FUN_8024adbc	8024adbc
FUN_8024add4	8024add4
FUN_8024ae2c	8024ae2c
FUN_8024aedc	8024aedc
FUN_8024b158	8024b158
FUN_8024b210	8024b210
FUN_8024b230	8024b230
FUN_8024b290	8024b290
FUN_8024b544	8024b544
FUN_8024b6d4	8024b6d4
FUN_8024b818	8024b818
FUN_8024b914	8024b914
FUN_8024b974	8024b974
FUN_8024bb58	8024bb58
FUN_8024bb9c	8024bb9c
FUN_8024be6c	8024be6c
FUN_8024bea0	8024bea0
FUN_8024beb8	8024beb8
FUN_8024bed0	8024bed0
FUN_8024bf24	8024bf24
FUN_8024bf6c	8024bf6c
FUN_8024bfb4	8024bfb4
__sinit_Coord3D_cpp	8024bffc
FUN_8024c108	8024c108
FUN_8024c224	8024c224
FUN_8024c34c	8024c34c
FUN_8024c5e8	8024c5e8
FUN_8024c650	8024c650
FUN_8024c678	8024c678
FUN_8024c6e0	8024c6e0
FUN_8024c7e8	8024c7e8
FUN_8024c810	8024c810
FUN_8024c878	8024c878
FUN_8024c8ec	8024c8ec
FUN_8024c8f0	8024c8f0
FUN_8024c928	8024c928
FUN_8024c9ac	8024c9ac
FUN_8024c9e0	8024c9e0
FUN_8024ca54	8024ca54
FUN_8024cbb8	8024cbb8
FUN_8024cc48	8024cc48
FUN_8024ccb0	8024ccb0
FUN_8024cd10	8024cd10
FUN_8024cd38	8024cd38
FUN_8024cdb0	8024cdb0
FUN_8024ce14	8024ce14
FUN_8024ceac	8024ceac
FUN_8024cedc	8024cedc
FUN_8024cfd0	8024cfd0
FUN_8024cfd8	8024cfd8
FUN_8024d030	8024d030
FUN_8024d09c	8024d09c
__sinit_MapObjDossun_cpp	8024d108
FUN_8024d3cc	8024d3cc
FUN_8024d3d4	8024d3d4
FUN_8024d3dc	8024d3dc
TJugem::TJugem() 	8024d3e4
TJugem::~TJugem() 	8024d5cc
TJugem::resetStaticData() 	8024d750
TJugem::loadAnimation() 	8024d7e4
TJugem::reset() 	8024d8c8
TJugem::hold(unsigned long, unsigned long) 	8024d9b8
TJugemItem::hold(unsigned long) 	8024da34
TJugemItem::hide() 	8024da38
TJugem::setJugemItem(TJugemItem *, unsigned long) 	8024da48
TJugem::setJugemHeadItem(TJugemHeadItem *, unsigned long) 	8024da5c
TJugem::getShadowBmdFileName() 	8024da70
TJugem::getBmdFileName() 	8024da98
TJugem::createModel(JKRSolidHeap *, unsigned long) 	8024daec
TJugem::setCurrentViewNo(unsigned long) 	8024dc08
TJugem::createColModel(J3DModelData *) 	8024dcb8
TJugem::createShadowModel(JKRSolidHeap *, unsigned long) 	8024dcbc
TJugem::viewCalc(unsigned long) 	8024dd38
TJugemHeadItem::hideModel(unsigned long) 	8024ddd8
TJugemItem::hideModel(unsigned long) 	8024de00
TJugem::checkVisible(unsigned long) 	8024de28
TJugem::initFunc_Erase() 	8024de78
TJugem::doFunc_Erase() 	8024de7c
TJugem::initFunc_Wait() 	8024df24
TJugem::doFunc_Wait() 	8024df9c
TJugem::calc() 	8024e02c
TJugem::update() 	8024e0b8
TJugem::resetJugemOriginCourse() 	8024e120
TJugem::resetJugemOriginNumber() 	8024e194
TJugem::getZDir(int, JGeometry::TVec3<float> *) 	8024e1e8
TJugem::resetJugemOrigin(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8024e384
JGeometry::TRotation3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>>::setRotate(const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &) 	8024e518
TJugem::getJugemOrigin(const JGeometry::TVec3<float> &, JGeometry::TVec3<float> *) 	8024e6d0
TJugem::move(int) 	8024e7b4
TJugemItem::setRMtx(const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &) 	8024ef74
TJugem::checkKartCrash() 	8024efa8
TJugem::setPosition(const JGeometry::TVec3<float> &) 	8024eff4
TJugemItem::setPosition(const JGeometry::TVec3<float> &) 	8024f070
TJugem::setRMtx(const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &) 	8024f08c
TJugem::resetAllPosAndMtx() 	8024f124
TJugem::localMove(JGeometry::TVec3<float> *) 	8024f19c
TJugem::globalMove(JGeometry::TVec3<float> *) 	8024f340
TJugem::getGlobalState() 	8024f364
TJugem::fixPosition(JGeometry::TVec3<float> *, float) 	8024f3cc
TJugem::fixGround(CrsGround &, const JGeometry::TVec3<float> &) 	8024f590
TJugem::fixWall(CrsGround &, JGeometry::TVec3<float> *) 	8024f728
TJugem::fixNear(JGeometry::TVec3<float> *) 	8024fb28
TJugem::setLimitation(JGeometry::TVec3<float> *, float, float) 	8024fbd4
TJugem::chase(int, const JGeometry::TVec3<float> &, const JGeometry::TVec3<float> &, JGeometry::TVec3<float> &) 	8024fdd4
TJugemHeadItem::hide() 	802501a8
TJugem::hideAll() 	802501b8
TJugemHeadItem::hideAll() 	80250280
TJugemItem::hideAll() 	802502ac
TJugem::show(unsigned char) 	802502d8
TJugemHeadItem::show(unsigned char) 	8025037c
TJugemItem::show(unsigned char) 	8025038c
TJugem::wearCap(unsigned long) 	8025039c
TJugem::InitExec() 	80250404
TJugem::MoveExec() 	80250470
TJugem::changeAnimation(unsigned long) 	802504dc
TJugemItem::changeAnimation(unsigned long) 	802505bc
TJugem::isAbleStart() 	802505e4
TJugem::cutFishLine() 	802505ec
TJugem::nodeCallBack(J3DJoint *, int) 	8025062c
TJugemHeadItem::setRMtx(const JGeometry::TPosition3<JGeometry::TMatrix34<JGeometry::SMatrix34C<float>>> &) 	80250704
TJugemHeadItem::setPosition(const JGeometry::TVec3<float> &) 	80250738
TJugem::setCameraNum(unsigned char) 	80250754
TJugem::setKartNum(unsigned char) 	80250770
TJugem::getScreenType() 	80250778
TJugem::getJ3DModelDataTevStageNum() const 	802507c4
__sinit_JugemMain_cpp	802507d0
TJugem::@360@InitExec() 	80250efc
TJugem::@360@MoveExec() 	80250f04
TJugem::@360@__dt() 	80250f0c
TJugem::initFunc_Lap() 	80250f14
TJugem::doFunc_Lap() 	80251050
TJugem::initFunc_LapStay() 	802510c4
TJugem::doFunc_LapStay() 	802510c8
TJugem::initFunc_LapEnd() 	80251114
TJugem::doFunc_LapEnd() 	8025113c
TJugem::checkLapProc	802511ac
__sinit_JugemLap_cpp	802511e4
FUN_8025130c	8025130c
FUN_8025133c	8025133c
FUN_80251384	80251384
FUN_8025138c	8025138c
FUN_802513a8	802513a8
FUN_80251400	80251400
FUN_80251488	80251488
FUN_80251574	80251574
FUN_802515c4	802515c4
FUN_80251848	80251848
FUN_802518c8	802518c8
FUN_80251a24	80251a24
FUN_80251a58	80251a58
FUN_80251ae8	80251ae8
FUN_80251b08	80251b08
__sinit_Interp_cpp	80251b40
FUN_80251c4c	80251c4c
FUN_80251d10	80251d10
FUN_80251db0	80251db0
FUN_80251de8	80251de8
FUN_80251e30	80251e30
FUN_80251eac	80251eac
__sinit_JugemReverse_cpp	80251f28
FUN_8025205c	8025205c
FUN_80252060	80252060
FUN_802520c4	802520c4
FUN_80252128	80252128
FUN_802521a0	802521a0
FUN_80252238	80252238
__sinit_JugemRescue_cpp	802522b4
FUN_802523c0	802523c0
FUN_8025255c	8025255c
FUN_802525ec	802525ec
FUN_80252718	80252718
FUN_80252790	80252790
FUN_802527a0	802527a0
FUN_8025284c	8025284c
FUN_80252854	80252854
FUN_8025287c	8025287c
FUN_80252998	80252998
FUN_802529c8	802529c8
FUN_802529cc	802529cc
FUN_802529e8	802529e8
FUN_80252a1c	80252a1c
FUN_80252a70	80252a70
FUN_80252ab4	80252ab4
FUN_80252ac4	80252ac4
FUN_80252b14	80252b14
FUN_80252b58	80252b58
FUN_80252bc4	80252bc4
FUN_80252bf0	80252bf0
FUN_80252c00	80252c00
FUN_80252c7c	80252c7c
FUN_80252d3c	80252d3c
FUN_80252e14	80252e14
FUN_80252e48	80252e48
FUN_80252e64	80252e64
__sinit_JugemVoidRod_cpp	80252e68
FUN_80252f74	80252f74
FUN_8025304c	8025304c
FUN_80253070	80253070
FUN_802530bc	802530bc
FUN_80253124	80253124
FUN_80253170	80253170
FUN_80253174	80253174
FUN_8025320c	8025320c
FUN_80253210	80253210
FUN_8025325c	8025325c
FUN_80253290	80253290
FUN_8025330c	8025330c
FUN_8025332c	8025332c
FUN_802533a8	802533a8
FUN_802533ec	802533ec
FUN_80253434	80253434
FUN_80253468	80253468
__sinit_JugemStart_cpp	802534a8
FUN_802535d0	802535d0
FUN_802536bc	802536bc
FUN_8025374c	8025374c
FUN_8025382c	8025382c
FUN_802538e0	802538e0
FUN_80253928	80253928
FUN_80253934	80253934
FUN_80253994	80253994
FUN_802539cc	802539cc
FUN_80253a34	80253a34
FUN_80253af8	80253af8
FUN_80253bd8	80253bd8
FUN_80253c8c	80253c8c
FUN_80253cd4	80253cd4
FUN_80253ce0	80253ce0
FUN_80253d40	80253d40
FUN_80253d50	80253d50
FUN_80253db8	80253db8
FUN_80253e7c	80253e7c
FUN_80253f5c	80253f5c
FUN_80254010	80254010
FUN_80254058	80254058
FUN_80254064	80254064
FUN_802540c4	802540c4
FUN_802540fc	802540fc
FUN_80254164	80254164
FUN_80254188	80254188
FUN_8025418c	8025418c
FUN_802541b0	802541b0
__sinit_JugemRodBoard_cpp	802541b4
FUN_802542c0	802542c0
FUN_80254398	80254398
FUN_80254478	80254478
FUN_8025454c	8025454c
FUN_802545cc	802545cc
FUN_802545d4	802545d4
FUN_802545fc	802545fc
FUN_802546a4	802546a4
FUN_802546a8	802546a8
FUN_80254874	80254874
FUN_80254918	80254918
FUN_8025492c	8025492c
FUN_80254964	80254964
FUN_80254b2c	80254b2c
FUN_80254b60	80254b60
FUN_80254c28	80254c28
FUN_80254d08	80254d08
FUN_80254d6c	80254d6c
FUN_80254e10	80254e10
FUN_80254edc	80254edc
FUN_80254f54	80254f54
FUN_80254fa4	80254fa4
FUN_8025505c	8025505c
FUN_802550b0	802550b0
FUN_80255134	80255134
FUN_802551a0	802551a0
FUN_80255234	80255234
FUN_80255240	80255240
__sinit_JugemRodSignal_cpp	8025524c
FUN_80255358	80255358
FUN_802553f4	802553f4
FUN_80255418	80255418
__sinit_JugemGoal_cpp	80255420
FUN_8025553c	8025553c
FUN_802555e8	802555e8
FUN_80255688	80255688
FUN_802556e4	802556e4
FUN_80255730	80255730
FUN_80255738	80255738
FUN_80255760	80255760
FUN_80255848	80255848
FUN_8025584c	8025584c
__sinit_JugemFlag_cpp	80255870
FUN_8025597c	8025597c
FUN_80255af8	80255af8
FUN_80255c18	80255c18
FUN_80255cdc	80255cdc
FUN_80255df4	80255df4
FUN_80255ea4	80255ea4
FUN_80255f10	80255f10
FUN_80255f90	80255f90
FUN_80255fb8	80255fb8
FUN_80256008	80256008
FUN_80256150	80256150
FUN_80256178	80256178
FUN_802561dc	802561dc
FUN_8025623c	8025623c
FUN_80256240	80256240
FUN_802562ac	802562ac
FUN_80256354	80256354
FUN_80256424	80256424
FUN_8025663c	8025663c
FUN_80256640	80256640
FUN_802566d4	802566d4
FUN_802566d8	802566d8
FUN_80256790	80256790
FUN_802568d4	802568d4
FUN_80256978	80256978
FUN_802569c0	802569c0
FUN_80256a38	80256a38
FUN_80256ac8	80256ac8
FUN_80256b2c	80256b2c
FUN_80256bc8	80256bc8
FUN_80256cc0	80256cc0
FUN_80256eac	80256eac
FUN_80256f7c	80256f7c
FUN_80256fd0	80256fd0
FUN_80257008	80257008
FUN_80257134	80257134
FUN_802571cc	802571cc
FUN_80257234	80257234
FUN_80257294	80257294
FUN_80257300	80257300
FUN_80257330	80257330
FUN_802575a0	802575a0
FUN_8025765c	8025765c
FUN_80257a2c	80257a2c
FUN_80257a70	80257a70
FUN_80257d14	80257d14
FUN_80257fc4	80257fc4
FUN_80258030	80258030
FUN_802580f0	802580f0
__sinit_MapObjWanwan_cpp	802580f8
FUN_802583e0	802583e0
FUN_802583e8	802583e8
FUN_802583f0	802583f0
FUN_802583f8	802583f8
FUN_8025846c	8025846c
FUN_802584ec	802584ec
FUN_8025853c	8025853c
FUN_80258540	80258540
FUN_80258568	80258568
FUN_802585c8	802585c8
FUN_8025863c	8025863c
FUN_802586bc	802586bc
FUN_802586c0	802586c0
FUN_80258710	80258710
FUN_80258714	80258714
FUN_8025873c	8025873c
FUN_80258740	80258740
__sinit_MapObjWanwanChain_cpp	80258744
FUN_80258850	80258850
FUN_80258874	80258874
FUN_802588bc	802588bc
FUN_802588f4	802588f4
FUN_802589f4	802589f4
FUN_80258b18	80258b18
FUN_80258b44	80258b44
FUN_80258c3c	80258c3c
FUN_80258e84	80258e84
FUN_80258ec4	80258ec4
FUN_80258f38	80258f38
FUN_80259014	80259014
FUN_802590ac	802590ac
FUN_802590d0	802590d0
FUN_8025916c	8025916c
FUN_80259240	80259240
FUN_8025944c	8025944c
FUN_80259474	80259474
FUN_8025949c	8025949c
FUN_802595f8	802595f8
FUN_802596ac	802596ac
FUN_80259708	80259708
FUN_80259794	80259794
FUN_8025979c	8025979c
FUN_802597a4	802597a4
FUN_802599ec	802599ec
FUN_80259b88	80259b88
FUN_80259ebc	80259ebc
FUN_80259f00	80259f00
FUN_80259f48	80259f48
FUN_80259f84	80259f84
FUN_8025a0f4	8025a0f4
FUN_8025a18c	8025a18c
FUN_8025a254	8025a254
FUN_8025a29c	8025a29c
FUN_8025a380	8025a380
FUN_8025a3ec	8025a3ec
FUN_8025a458	8025a458
FUN_8025a4b4	8025a4b4
FUN_8025a618	8025a618
FUN_8025a714	8025a714
FUN_8025a774	8025a774
FUN_8025a7ac	8025a7ac
FUN_8025a7b0	8025a7b0
FUN_8025a7bc	8025a7bc
FUN_8025a8a0	8025a8a0
FUN_8025a8ac	8025a8ac
FUN_8025a8b8	8025a8b8
FUN_8025a8c0	8025a8c0
FUN_8025a8c8	8025a8c8
FUN_8025a8cc	8025a8cc
FUN_8025a8d4	8025a8d4
FUN_8025a9f8	8025a9f8
FUN_8025aa04	8025aa04
FUN_8025aa0c	8025aa0c
FUN_8025aa14	8025aa14
__sinit_MapObjSkyShip_cpp	8025aa1c
FUN_8025ab94	8025ab94
FUN_8025ab9c	8025ab9c
FUN_8025aba4	8025aba4
FUN_8025abac	8025abac
FUN_8025ac14	8025ac14
FUN_8025aca0	8025aca0
FUN_8025ad14	8025ad14
FUN_8025ad6c	8025ad6c
FUN_8025add8	8025add8
FUN_8025ae58	8025ae58
__sinit_MapObjDonkyRockGen_cpp	8025ae5c
FUN_8025af68	8025af68
FUN_8025b064	8025b064
FUN_8025b06c	8025b06c
FUN_8025b14c	8025b14c
FUN_8025b200	8025b200
FUN_8025b22c	8025b22c
FUN_8025b254	8025b254
FUN_8025b27c	8025b27c
FUN_8025b31c	8025b31c
FUN_8025b320	8025b320
FUN_8025b350	8025b350
FUN_8025b3e4	8025b3e4
FUN_8025b450	8025b450
FUN_8025b4bc	8025b4bc
FUN_8025b4f4	8025b4f4
FUN_8025b51c	8025b51c
FUN_8025b520	8025b520
FUN_8025b584	8025b584
FUN_8025b8e0	8025b8e0
FUN_8025b9f0	8025b9f0
FUN_8025bff4	8025bff4
FUN_8025c1f8	8025c1f8
FUN_8025c264	8025c264
FUN_8025c344	8025c344
FUN_8025c36c	8025c36c
FUN_8025c454	8025c454
FUN_8025c4d0	8025c4d0
FUN_8025c4f8	8025c4f8
FUN_8025c540	8025c540
FUN_8025c5e0	8025c5e0
FUN_8025c5e4	8025c5e4
__sinit_MapObjDonkyRock_cpp	8025c5e8
FUN_8025c790	8025c790
FUN_8025c798	8025c798
FUN_8025c7a0	8025c7a0
FUN_8025c7a8	8025c7a8
FUN_8025c7b0	8025c7b0
FUN_8025c7f8	8025c7f8
FUN_8025c878	8025c878
FUN_8025c8c4	8025c8c4
FUN_8025c910	8025c910
__sinit_MapObjNoMove_cpp	8025c914
FUN_8025ca20	8025ca20
FUN_8025ca5c	8025ca5c
FUN_8025cafc	8025cafc
FUN_8025cb24	8025cb24
FUN_8025cb54	8025cb54
FUN_8025cb7c	8025cb7c
FUN_8025cb84	8025cb84
FUN_8025cbc0	8025cbc0
FUN_8025cc60	8025cc60
FUN_8025cc88	8025cc88
FUN_8025ccb8	8025ccb8
FUN_8025ccc0	8025ccc0
__sinit_MapObjPeachTree_cpp	8025cce8
FUN_8025cdf4	8025cdf4
FUN_8025ce8c	8025ce8c
FUN_8025ceec	8025ceec
FUN_8025cfec	8025cfec
FUN_8025d2a8	8025d2a8
FUN_8025d2dc	8025d2dc
FUN_8025d308	8025d308
FUN_8025d330	8025d330
FUN_8025d338	8025d338
FUN_8025d358	8025d358
FUN_8025d438	8025d438
FUN_8025d5e4	8025d5e4
FUN_8025d64c	8025d64c
FUN_8025d72c	8025d72c
FUN_8025d730	8025d730
FUN_8025d788	8025d788
FUN_8025d7e8	8025d7e8
FUN_8025d93c	8025d93c
FUN_8025db84	8025db84
FUN_8025dd78	8025dd78
FUN_8025dd7c	8025dd7c
FUN_8025dd88	8025dd88
__sinit_MapObjFireBar_cpp	8025de00
FUN_8025df0c	8025df0c
FUN_8025df14	8025df14
FUN_8025df1c	8025df1c
FUN_8025df24	8025df24
FUN_8025df2c	8025df2c
FUN_8025df34	8025df34
FUN_8025df98	8025df98
__sinit_MapObjHioNode_cpp	8025e024
FUN_8025e130	8025e130
FUN_8025e1b4	8025e1b4
FUN_8025e274	8025e274
FUN_8025e2f0	8025e2f0
FUN_8025e318	8025e318
FUN_8025e378	8025e378
FUN_8025e434	8025e434
FUN_8025e47c	8025e47c
FUN_8025e590	8025e590
FUN_8025e5b8	8025e5b8
FUN_8025e638	8025e638
FUN_8025e69c	8025e69c
FUN_8025e6e0	8025e6e0
FUN_8025e8d4	8025e8d4
FUN_8025e934	8025e934
FUN_8025eaf4	8025eaf4
FUN_8025eb44	8025eb44
FUN_8025eb88	8025eb88
FUN_8025ec34	8025ec34
FUN_8025ed28	8025ed28
FUN_8025ed70	8025ed70
FUN_8025ee64	8025ee64
FUN_8025eeb0	8025eeb0
FUN_8025ef10	8025ef10
FUN_8025ef5c	8025ef5c
FUN_8025ef60	8025ef60
FUN_8025ef64	8025ef64
FUN_8025f0dc	8025f0dc
FUN_8025f128	8025f128
FUN_8025f160	8025f160
FUN_8025f164	8025f164
FUN_8025f2dc	8025f2dc
FUN_8025f350	8025f350
FUN_8025f3bc	8025f3bc
FUN_8025f428	8025f428
FUN_8025f538	8025f538
FUN_8025f544	8025f544
FUN_8025f578	8025f578
FUN_8025f648	8025f648
__sinit_MapObjFireObj_cpp	8025f654
FUN_8025f82c	8025f82c
FUN_8025f834	8025f834
FUN_8025fa04	8025fa04
FUN_8025fa0c	8025fa0c
FUN_8025fa9c	8025fa9c
FUN_8025fbec	8025fbec
FUN_8025fc14	8025fc14
FUN_8025fc3c	8025fc3c
FUN_8025fc9c	8025fc9c
FUN_8025fd14	8025fd14
FUN_8025fda0	8025fda0
FUN_8025fe0c	8025fe0c
FUN_8025fe78	8025fe78
FUN_8025fee0	8025fee0
FUN_8026017c	8026017c
FUN_802601c4	802601c4
FUN_8026042c	8026042c
FUN_80260440	80260440
FUN_80260450	80260450
FUN_80260474	80260474
FUN_802604dc	802604dc
FUN_802606a8	802606a8
FUN_8026079c	8026079c
FUN_8026088c	8026088c
FUN_802609b4	802609b4
FUN_80260a30	80260a30
FUN_80260d64	80260d64
FUN_80260e88	80260e88
FUN_80260fa8	80260fa8
FUN_80261078	80261078
FUN_802610f4	802610f4
FUN_8026110c	8026110c
FUN_802612f4	802612f4
FUN_80261304	80261304
FUN_80261378	80261378
FUN_80261450	80261450
FUN_8026190c	8026190c
FUN_80261a10	80261a10
FUN_80261b8c	80261b8c
FUN_80261e6c	80261e6c
FUN_80261ef0	80261ef0
FUN_80261ef8	80261ef8
FUN_80262034	80262034
FUN_802620b0	802620b0
FUN_802620d8	802620d8
FUN_80262258	80262258
FUN_802622f8	802622f8
FUN_802622fc	802622fc
__sinit_MapObjPoihana_cpp	80262300
FUN_802625e8	802625e8
FUN_802625f0	802625f0
FUN_802625f8	802625f8
FUN_80262600	80262600
FUN_80262608	80262608
FUN_8026262c	8026262c
FUN_8026264c	8026264c
FUN_80262714	80262714
FUN_8026291c	8026291c
FUN_80262a90	80262a90
FUN_80262ab4	80262ab4
FUN_80262bb8	80262bb8
FUN_80262c70	80262c70
FUN_80262ccc	80262ccc
FUN_80262d30	80262d30
FUN_80262e40	80262e40
FUN_80262e78	80262e78
FUN_80262eb8	80262eb8
FUN_80262fdc	80262fdc
FUN_80263268	80263268
FUN_802633b4	802633b4
FUN_802634a8	802634a8
FUN_802634f0	802634f0
FUN_80263558	80263558
FUN_802635c0	802635c0
FUN_80263630	80263630
FUN_80263678	80263678
FUN_80263684	80263684
FUN_80263694	80263694
FUN_802636f4	802636f4
FUN_80263828	80263828
FUN_80263a60	80263a60
FUN_80263ad8	80263ad8
FUN_80263b14	80263b14
FUN_80263b5c	80263b5c
FUN_80263b6c	80263b6c
FUN_80263ba4	80263ba4
FUN_80263bec	80263bec
FUN_80263cd0	80263cd0
FUN_80263f60	80263f60
FUN_802641fc	802641fc
FUN_80264464	80264464
FUN_8026455c	8026455c
FUN_80264590	80264590
FUN_8026466c	8026466c
FUN_802646bc	802646bc
FUN_80264958	80264958
FUN_80264e84	80264e84
FUN_802650f8	802650f8
__sinit_Coord3DUtil_cpp	80265154
FUN_80265260	80265260
FUN_80265328	80265328
FUN_802653d0	802653d0
FUN_802654e4	802654e4
FUN_8026550c	8026550c
FUN_80265574	80265574
FUN_80265668	80265668
FUN_802656e4	802656e4
FUN_80265750	80265750
FUN_802657bc	802657bc
FUN_80265848	80265848
FUN_80265894	80265894
FUN_80265898	80265898
FUN_802658f0	802658f0
__sinit_MapObjWall_cpp	80265910
FUN_80265a88	80265a88
FUN_80265a90	80265a90
FUN_80265a98	80265a98
FUN_80265aa0	80265aa0
FUN_80265b00	80265b00
FUN_80265b90	80265b90
FUN_80265bb0	80265bb0
FUN_80265c34	80265c34
FUN_80265d14	80265d14
FUN_80265d18	80265d18
FUN_80265da4	80265da4
FUN_80265dc8	80265dc8
FUN_80265dcc	80265dcc
__sinit_SmallAnimalGen_cpp	80265dd4
FUN_80265ee0	80265ee0
FUN_80265f84	80265f84
FUN_80265fac	80265fac
FUN_802660c4	802660c4
FUN_802660cc	802660cc
FUN_80266134	80266134
FUN_8026623c	8026623c
FUN_80266864	80266864
FUN_802668cc	802668cc
FUN_80266920	80266920
FUN_80266990	80266990
FUN_80266a34	80266a34
FUN_80266ac4	80266ac4
FUN_80266b34	80266b34
FUN_80266b7c	80266b7c
FUN_80266be8	80266be8
FUN_80266c54	80266c54
FUN_80266c78	80266c78
FUN_80266cb0	80266cb0
FUN_80266cb4	80266cb4
FUN_80266cec	80266cec
__sinit_SMAButterfly_cpp	80266d84
FUN_80266efc	80266efc
FUN_80266f04	80266f04
FUN_80266f0c	80266f0c
FUN_80266f14	80266f14
FUN_80266f78	80266f78
FUN_80267088	80267088
FUN_8026712c	8026712c
FUN_80267168	80267168
FUN_802672a8	802672a8
FUN_80267438	80267438
FUN_802674c0	802674c0
FUN_802674ec	802674ec
FUN_80267500	80267500
FUN_80267528	80267528
FUN_80267574	80267574
FUN_80267650	80267650
FUN_80267730	80267730
__sinit_SiUtil_cpp	8026778c
FUN_80267898	80267898
FUN_80267908	80267908
FUN_80267958	80267958
FUN_80267a24	80267a24
FUN_80267a90	80267a90
FUN_80267c88	80267c88
FUN_80267ce8	80267ce8
FUN_80267db0	80267db0
FUN_80267db4	80267db4
FUN_80267e5c	80267e5c
FUN_80267fe0	80267fe0
FUN_80268068	80268068
FUN_80268290	80268290
__sinit_SMABirdGroup_cpp	80268348
FUN_80268454	80268454
FUN_802684d0	802684d0
FUN_8026853c	8026853c
FUN_80268694	80268694
FUN_802686f0	802686f0
FUN_802687b0	802687b0
FUN_802687d8	802687d8
FUN_80268824	80268824
FUN_80268968	80268968
FUN_80268a3c	80268a3c
__sinit_SMABird2_cpp	80268ac8
FUN_80268bd4	80268bd4
FUN_80268cd4	80268cd4
FUN_80268dd4	80268dd4
FUN_80268e40	80268e40
FUN_80268eac	80268eac
FUN_80268ed4	80268ed4
FUN_80268f3c	80268f3c
FUN_80268fcc	80268fcc
FUN_8026902c	8026902c
FUN_8026914c	8026914c
FUN_80269264	80269264
FUN_802692a8	802692a8
FUN_80269420	80269420
FUN_802694d0	802694d0
FUN_802694fc	802694fc
FUN_80269708	80269708
FUN_80269714	80269714
FUN_80269798	80269798
FUN_802698e0	802698e0
FUN_80269950	80269950
FUN_802699d8	802699d8
FUN_80269a48	80269a48
FUN_80269ad4	80269ad4
FUN_80269ba0	80269ba0
FUN_80269be4	80269be4
FUN_80269ce8	80269ce8
FUN_80269db4	80269db4
FUN_80269ee4	80269ee4
FUN_80269ee8	80269ee8
FUN_8026a018	8026a018
FUN_8026a02c	8026a02c
FUN_8026a24c	8026a24c
FUN_8026a3d8	8026a3d8
FUN_8026a460	8026a460
__sinit_MapObjGeyser_cpp	8026a578
FUN_8026a814	8026a814
FUN_8026a81c	8026a81c
FUN_8026a824	8026a824
FUN_8026a82c	8026a82c
FUN_8026a834	8026a834
FUN_8026a888	8026a888
FUN_8026ab14	8026ab14
FUN_8026abc8	8026abc8
FUN_8026ad58	8026ad58
FUN_8026ad80	8026ad80
FUN_8026b06c	8026b06c
FUN_8026b078	8026b078
FUN_8026b114	8026b114
FUN_8026b188	8026b188
FUN_8026b3d4	8026b3d4
FUN_8026b430	8026b430
FUN_8026b458	8026b458
FUN_8026b504	8026b504
FUN_8026b6b0	8026b6b0
FUN_8026b75c	8026b75c
FUN_8026b7b8	8026b7b8
FUN_8026b9a0	8026b9a0
FUN_8026ba74	8026ba74
FUN_8026bc3c	8026bc3c
FUN_8026bc40	8026bc40
FUN_8026bd00	8026bd00
FUN_8026bd40	8026bd40
FUN_8026bdb8	8026bdb8
FUN_8026beb0	8026beb0
FUN_8026c578	8026c578
FUN_8026c71c	8026c71c
FUN_8026c9ac	8026c9ac
FUN_8026c9d0	8026c9d0
FUN_8026ca00	8026ca00
FUN_8026cb18	8026cb18
FUN_8026cb40	8026cb40
FUN_8026cb44	8026cb44
FUN_8026cb4c	8026cb4c
FUN_8026cb50	8026cb50
FUN_8026cb54	8026cb54
FUN_8026cbd4	8026cbd4
FUN_8026cbf4	8026cbf4
FUN_8026cc14	8026cc14
FUN_8026cc94	8026cc94
FUN_8026cca0	8026cca0
__sinit_TestString_cpp	8026ccac
FUN_8026cdb8	8026cdb8
FUN_8026cdc0	8026cdc0
FUN_8026cdfc	8026cdfc
FUN_8026ce9c	8026ce9c
FUN_8026cec4	8026cec4
FUN_8026cef4	8026cef4
FUN_8026cefc	8026cefc
FUN_8026cf38	8026cf38
FUN_8026cfd8	8026cfd8
FUN_8026d08c	8026d08c
FUN_8026d0b4	8026d0b4
FUN_8026d0e4	8026d0e4
FUN_8026d0ec	8026d0ec
FUN_8026d134	8026d134
FUN_8026d1d4	8026d1d4
FUN_8026d21c	8026d21c
FUN_8026d244	8026d244
FUN_8026d24c	8026d24c
FUN_8026d254	8026d254
__sinit_MapObjDonkyTree_cpp	8026d27c
FUN_8026d388	8026d388
FUN_8026d3e8	8026d3e8
FUN_8026d520	8026d520
FUN_8026d528	8026d528
FUN_8026d608	8026d608
FUN_8026d674	8026d674
FUN_8026d6e0	8026d6e0
FUN_8026d708	8026d708
FUN_8026d770	8026d770
FUN_8026db28	8026db28
FUN_8026dc58	8026dc58
FUN_8026dd10	8026dd10
FUN_8026dd34	8026dd34
FUN_8026dd48	8026dd48
FUN_8026de90	8026de90
FUN_8026e154	8026e154
FUN_8026e1b8	8026e1b8
FUN_8026e290	8026e290
FUN_8026e2b8	8026e2b8
FUN_8026e2c8	8026e2c8
FUN_8026e2cc	8026e2cc
FUN_8026e470	8026e470
FUN_8026e510	8026e510
__sinit_MapObjSnowRock_cpp	8026e514
FUN_8026e6bc	8026e6bc
FUN_8026e6c4	8026e6c4
FUN_8026e6cc	8026e6cc
FUN_8026e6d4	8026e6d4
FUN_8026e6dc	8026e6dc
FUN_8026e858	8026e858
FUN_8026e87c	8026e87c
FUN_8026e888	8026e888
FUN_8026e930	8026e930
FUN_8026ea34	8026ea34
FUN_8026eba4	8026eba4
FUN_8026ebfc	8026ebfc
FUN_8026ec48	8026ec48
FUN_8026ed54	8026ed54
FUN_8026eef4	8026eef4
FUN_8026f3c0	8026f3c0
FUN_8026f408	8026f408
FUN_8026f550	8026f550
FUN_8026f8a0	8026f8a0
FUN_8026fa6c	8026fa6c
FUN_8026fb8c	8026fb8c
FUN_8026fc6c	8026fc6c
FUN_8026fd80	8026fd80
FUN_8026fddc	8026fddc
FUN_8026fe08	8026fe08
FUN_8026fe10	8026fe10
FUN_8026fed4	8026fed4
FUN_8026fed8	8026fed8
__sinit_LensFlare_cpp	8026fedc
FUN_8026ffe8	8026ffe8
TTestRollObj::TTestRollObj(const CrsData::SObject &) 	8026fff0
TTestRollObj::~TTestRollObj() 	80270078
TTestRollObj::getBmdFileName() 	8027012c
TTestRollObj::reset() 	80270154
TTestRollObj::calc() 	802701e0
TTestRollObj::createColModel(J3DModelData *) 	80270210
TTestRollObj::doKartColCallBack(int) 	8027023c
__sinit_TestRollObj_cpp	8027037c
FUN_80270488	80270488
FUN_80270528	80270528
FUN_802705f8	802705f8
FUN_80270620	80270620
FUN_8027069c	8027069c
FUN_802706d8	802706d8
FUN_80270720	80270720
FUN_8027076c	8027076c
FUN_802707b0	802707b0
FUN_80270860	80270860
FUN_80270940	80270940
FUN_8027097c	8027097c
FUN_802709c4	802709c4
FUN_80270a48	80270a48
FUN_80270abc	80270abc
__sinit_MapObjFountain_cpp	80270ac8
FUN_80270bd4	80270bd4
FUN_80270c34	80270c34
FUN_80270e44	80270e44
FUN_80270e4c	80270e4c
FUN_80270f8c	80270f8c
FUN_80271168	80271168
FUN_802711e8	802711e8
FUN_80271294	80271294
FUN_80271388	80271388
FUN_802713e4	802713e4
FUN_8027140c	8027140c
FUN_80271434	80271434
FUN_80271494	80271494
FUN_8027150c	8027150c
FUN_80271574	80271574
FUN_802715e0	802715e0
FUN_8027164c	8027164c
FUN_802716b4	802716b4
FUN_80271728	80271728
FUN_802717d8	802717d8
FUN_80271804	80271804
FUN_80271850	80271850
FUN_8027197c	8027197c
FUN_80271ac4	80271ac4
FUN_80271d14	80271d14
FUN_80271f4c	80271f4c
FUN_80271f58	80271f58
FUN_802721b0	802721b0
FUN_802721f0	802721f0
FUN_80272320	80272320
FUN_8027234c	8027234c
FUN_80272448	80272448
FUN_80272494	80272494
FUN_80272498	80272498
FUN_80272640	80272640
FUN_80272704	80272704
FUN_802727a0	802727a0
FUN_802727e8	802727e8
FUN_80272854	80272854
FUN_802728c0	802728c0
FUN_8027292c	8027292c
FUN_80272944	80272944
FUN_802729a8	802729a8
FUN_80272bfc	80272bfc
FUN_80272c48	80272c48
FUN_80272ca4	80272ca4
FUN_80272cbc	80272cbc
FUN_80273018	80273018
FUN_80273040	80273040
FUN_80273068	80273068
FUN_802730d0	802730d0
FUN_80273130	80273130
FUN_802731a8	802731a8
FUN_80273210	80273210
FUN_802732e4	802732e4
FUN_80273384	80273384
__sinit_MapObjHeyho_cpp	80273388
FUN_8027370c	8027370c
FUN_80273714	80273714
FUN_8027371c	8027371c
FUN_80273724	80273724
FUN_8027372c	8027372c
FUN_80273734	80273734
FUN_8027373c	8027373c
FUN_80273744	80273744
FUN_80273888	80273888
FUN_80273890	80273890
FUN_80273974	80273974
FUN_80273a88	80273a88
FUN_80273ad8	80273ad8
FUN_80273b10	80273b10
FUN_80273ba4	80273ba4
FUN_80273c78	80273c78
FUN_80273ce4	80273ce4
FUN_80273d50	80273d50
FUN_80273db8	80273db8
FUN_80273e28	80273e28
FUN_80273e4c	80273e4c
FUN_80273ecc	80273ecc
FUN_80273ee4	80273ee4
FUN_80273f64	80273f64
FUN_8027417c	8027417c
FUN_80274180	80274180
FUN_802742a4	802742a4
FUN_802742c4	802742c4
FUN_80274314	80274314
FUN_80274334	80274334
FUN_8027436c	8027436c
FUN_8027438c	8027438c
FUN_80274420	80274420
FUN_8027446c	8027446c
FUN_80274504	80274504
FUN_80274508	80274508
FUN_80274588	80274588
FUN_802745b4	802745b4
FUN_802746d0	802746d0
FUN_80274a90	80274a90
FUN_80274bac	80274bac
FUN_80274c28	80274c28
FUN_80274c50	80274c50
FUN_80274ce8	80274ce8
FUN_80274d54	80274d54
FUN_80274d78	80274d78
FUN_80274d88	80274d88
FUN_80274d8c	80274d8c
FUN_80274da8	80274da8
FUN_80274e54	80274e54
FUN_80275110	80275110
FUN_8027517c	8027517c
FUN_802751e8	802751e8
FUN_80275230	80275230
FUN_80275278	80275278
FUN_80275284	80275284
FUN_80275344	80275344
FUN_80275350	80275350
FUN_80275410	80275410
FUN_802754b0	802754b0
FUN_802754b4	802754b4
FUN_802754b8	802754b8
__sinit_MapObjSanbo_cpp	802754c4
FUN_802758d4	802758d4
FUN_802758dc	802758dc
FUN_802758e4	802758e4
FUN_802758ec	802758ec
FUN_802758f4	802758f4
FUN_802758fc	802758fc
FUN_80275904	80275904
FUN_8027590c	8027590c
FUN_80275914	80275914
FUN_8027591c	8027591c
FUN_802759d0	802759d0
FUN_80275aa0	80275aa0
FUN_80275ac8	80275ac8
FUN_80275b4c	80275b4c
FUN_80275c54	80275c54
FUN_80275cbc	80275cbc
FUN_80275ce0	80275ce0
FUN_80275d24	80275d24
FUN_80275d9c	80275d9c
FUN_80275e2c	80275e2c
FUN_80275e54	80275e54
FUN_80275ea8	80275ea8
FUN_80275f90	80275f90
FUN_80275fdc	80275fdc
__sinit_MapObjWluArrow_cpp	80275fe0
FUN_802760ec	802760ec
FUN_80276178	80276178
FUN_80276248	80276248
FUN_80276270	80276270
FUN_802762ec	802762ec
FUN_80276360	80276360
FUN_802763b4	802763b4
FUN_802763b8	802763b8
__sinit_MapObjSnowMan_cpp	80276410
FUN_8027651c	8027651c
FUN_80276540	80276540
FUN_80276544	80276544
FUN_80276580	80276580
FUN_80276694	80276694
FUN_80276744	80276744
FUN_80276858	80276858
FUN_802769ec	802769ec
FUN_80276a34	80276a34
FUN_80276a3c	80276a3c
FUN_80276ac4	80276ac4
FUN_80276ac8	80276ac8
__sinit_DistSnow_cpp	80276acc
FUN_80276bd8	80276bd8
FUN_80276be0	80276be0
FUN_80276c58	80276c58
FUN_80276ce8	80276ce8
FUN_80276d10	80276d10
FUN_80276d64	80276d64
FUN_80276db0	80276db0
FUN_80276e98	80276e98
__sinit_MapObjIceBlock_cpp	80276e9c
FUN_80276fa8	80276fa8
FUN_80276ff8	80276ff8
FUN_80277050	80277050
FUN_80277088	80277088
FUN_802771b8	802771b8
FUN_8027759c	8027759c
FUN_802775c8	802775c8
FUN_802776cc	802776cc
FUN_8027789c	8027789c
__sinit_WipeSlide_cpp	802778a0
FUN_802779ac	802779ac
FUN_80277dec	80277dec
FUN_80277e00	80277e00
FUN_80277e9c	80277e9c
FUN_80277f60	80277f60
FUN_80277f8c	80277f8c
FUN_80277fb0	80277fb0
FUN_80278080	80278080
FUN_80278084	80278084
FUN_80278168	80278168
__sinit_WipeBase_cpp	80278270
FUN_8027837c	8027837c
FUN_802783e8	802783e8
FUN_80278440	80278440
FUN_802784c0	802784c0
FUN_8027866c	8027866c
FUN_802787e8	802787e8
FUN_80278918	80278918
__sinit_WipeCircle_cpp	80278a84
FUN_80278b90	80278b90
FUN_80278c1c	80278c1c
FUN_80278cec	80278cec
FUN_80278d14	80278d14
FUN_80278d90	80278d90
FUN_80278df0	80278df0
FUN_80278e38	80278e38
FUN_80278e5c	80278e5c
__sinit_MapObjSun_cpp	80278ea0
FUN_80278fac	80278fac
FUN_80279050	80279050
FUN_80279134	80279134
FUN_80279160	80279160
FUN_80279188	80279188
FUN_802791e8	802791e8
FUN_80279230	80279230
FUN_8027929c	8027929c
FUN_80279308	80279308
FUN_8027934c	8027934c
FUN_80279588	80279588
FUN_802795c0	802795c0
FUN_802795e0	802795e0
FUN_802795fc	802795fc
FUN_80279634	80279634
FUN_80279650	80279650
FUN_80279688	80279688
FUN_8027968c	8027968c
FUN_802796c4	802796c4
FUN_8027973c	8027973c
__sinit_MapObjBubble_cpp	80279d7c
FUN_80279f54	80279f54
FUN_80279f5c	80279f5c
FUN_80279f64	80279f64
FUN_80279f6c	80279f6c
FUN_8027a038	8027a038
FUN_8027a0b8	8027a0b8
FUN_8027a188	8027a188
FUN_8027a220	8027a220
FUN_8027a288	8027a288
FUN_8027a390	8027a390
FUN_8027a3b8	8027a3b8
FUN_8027a3dc	8027a3dc
FUN_8027a444	8027a444
FUN_8027a4c0	8027a4c0
FUN_8027a550	8027a550
FUN_8027a5ac	8027a5ac
FUN_8027a600	8027a600
__sinit_JugemHeadLamp_cpp	8027a628
FUN_8027a734	8027a734
FUN_8027a7b8	8027a7b8
FUN_8027a848	8027a848
FUN_8027a870	8027a870
FUN_8027a8c4	8027a8c4
FUN_8027a910	8027a910
FUN_8027a9e0	8027a9e0
FUN_8027a9e4	8027a9e4
FUN_8027aa70	8027aa70
FUN_8027ab40	8027ab40
FUN_8027aba0	8027aba0
FUN_8027abe8	8027abe8
FUN_8027ac50	8027ac50
FUN_8027ad04	8027ad04
FUN_8027ad68	8027ad68
__sinit_MapObjDesun_cpp	8027ad74
FUN_8027ae8c	8027ae8c
FUN_8027af80	8027af80
FUN_8027b094	8027b094
FUN_8027b100	8027b100
FUN_8027b16c	8027b16c
FUN_8027b2ec	8027b2ec
FUN_8027b390	8027b390
FUN_8027b3a8	8027b3a8
FUN_8027b3d0	8027b3d0
FUN_8027b438	8027b438
FUN_8027b5a4	8027b5a4
FUN_8027b60c	8027b60c
FUN_8027b784	8027b784
FUN_8027b8e0	8027b8e0
FUN_8027b924	8027b924
FUN_8027ba9c	8027ba9c
FUN_8027baac	8027baac
__sinit_MapObjSandPillar_cpp	8027bab0
FUN_8027bbf8	8027bbf8
FUN_8027bc00	8027bc00
FUN_8027bc08	8027bc08
FUN_8027bc10	8027bc10
FUN_8027bc78	8027bc78
FUN_8027bd08	8027bd08
FUN_8027bd30	8027bd30
FUN_8027bdbc	8027bdbc
FUN_8027be14	8027be14
FUN_8027c1f8	8027c1f8
FUN_8027c1fc	8027c1fc
FUN_8027c2b0	8027c2b0
__sinit_MapObjFerriswheel_cpp	8027c36c
FUN_8027c478	8027c478
FUN_8027c4fc	8027c4fc
FUN_8027c5c4	8027c5c4
FUN_8027c76c	8027c76c
FUN_8027c7d8	8027c7d8
FUN_8027c844	8027c844
FUN_8027c878	8027c878
FUN_8027c980	8027c980
FUN_8027ca0c	8027ca0c
FUN_8027ca2c	8027ca2c
FUN_8027caf8	8027caf8
FUN_8027cafc	8027cafc
FUN_8027cb54	8027cb54
FUN_8027cb98	8027cb98
FUN_8027cbe4	8027cbe4
FUN_8027cca8	8027cca8
FUN_8027ccd0	8027ccd0
FUN_8027cd2c	8027cd2c
FUN_8027cd4c	8027cd4c
FUN_8027ce10	8027ce10
FUN_8027d0ec	8027d0ec
FUN_8027d138	8027d138
FUN_8027d1ac	8027d1ac
FUN_8027d200	8027d200
FUN_8027d224	8027d224
FUN_8027d228	8027d228
__sinit_MapObjMoveItemBox_cpp	8027d308
FUN_8027d530	8027d530
FUN_8027d538	8027d538
FUN_8027d540	8027d540
FUN_8027d548	8027d548
FUN_8027d550	8027d550
FUN_8027d59c	8027d59c
FUN_8027d6b0	8027d6b0
FUN_8027dba4	8027dba4
FUN_8027e044	8027e044
FUN_8027e0b4	8027e0b4
FUN_8027e158	8027e158
FUN_8027e19c	8027e19c
FUN_8027e1e8	8027e1e8
FUN_8027e320	8027e320
FUN_8027e358	8027e358
FUN_8027e3f4	8027e3f4
FUN_8027e420	8027e420
FUN_8027e488	8027e488
FUN_8027e4d0	8027e4d0
FUN_8027e854	8027e854
FUN_8027e880	8027e880
FUN_8027e8bc	8027e8bc
FUN_8027e8e8	8027e8e8
FUN_8027e988	8027e988
FUN_8027e98c	8027e98c
FUN_8027ea44	8027ea44
FUN_8027ead8	8027ead8
FUN_8027ec0c	8027ec0c
FUN_8027ecf0	8027ecf0
FUN_8027ed3c	8027ed3c
FUN_8027ed74	8027ed74
FUN_8027ed7c	8027ed7c
FUN_8027eedc	8027eedc
FUN_8027ef58	8027ef58
FUN_8027eff8	8027eff8
FUN_8027f080	8027f080
FUN_8027f1bc	8027f1bc
FUN_8027f31c	8027f31c
FUN_8027f3e8	8027f3e8
FUN_8027f4fc	8027f4fc
FUN_8027f520	8027f520
FUN_8027f550	8027f550
FUN_8027f668	8027f668
FUN_8027f690	8027f690
FUN_8027f698	8027f698
FUN_8027f6a4	8027f6a4
FUN_8027f6a8	8027f6a8
FUN_8027f768	8027f768
FUN_8027f774	8027f774
FUN_8027f804	8027f804
__sinit_Balloon_cpp	8027f808
FUN_8027f914	8027f914
FUN_8027f91c	8027f91c
FUN_8027f994	8027f994
FUN_8027fa24	8027fa24
FUN_8027fac4	8027fac4
FUN_8027fb10	8027fb10
FUN_8027fc0c	8027fc0c
FUN_8027fc10	8027fc10
FUN_8027fc38	8027fc38
FUN_8027fe24	8027fe24
FUN_8027fe2c	8027fe2c
FUN_8027ff30	8027ff30
FUN_8027ffb0	8027ffb0
FUN_8028016c	8028016c
FUN_802803fc	802803fc
FUN_802804a8	802804a8
FUN_802804e0	802804e0
FUN_80280518	80280518
FUN_802805b8	802805b8
FUN_802805c4	802805c4
FUN_802805cc	802805cc
FUN_802805d8	802805d8
__sinit_MapObjJetCoaster_cpp	802805e0
FUN_802806ec	802806ec
FUN_802807d4	802807d4
FUN_802808d4	802808d4
FUN_80280938	80280938
FUN_80280980	80280980
FUN_802809d0	802809d0
FUN_80280ab8	80280ab8
FUN_80280f60	80280f60
FUN_80280fcc	80280fcc
FUN_8028106c	8028106c
FUN_80281070	80281070
FUN_80281098	80281098
FUN_8028119c	8028119c
FUN_802811a0	802811a0
FUN_802811ac	802811ac
__sinit_MapObjPool_cpp	802811b4
FUN_802812c0	802812c0
FUN_802812c8	802812c8
FUN_802813a8	802813a8
FUN_80281470	80281470
FUN_802814bc	802814bc
FUN_802815ec	802815ec
FUN_80281778	80281778
FUN_8028179c	8028179c
FUN_802817a0	802817a0
FUN_802817dc	802817dc
FUN_80281818	80281818
FUN_80281aa8	80281aa8
FUN_80281ae0	80281ae0
FUN_80281d80	80281d80
FUN_80281dc4	80281dc4
FUN_80281de4	80281de4
FUN_80281e28	80281e28
FUN_80281e2c	80281e2c
FUN_80281f0c	80281f0c
FUN_80282004	80282004
FUN_8028203c	8028203c
FUN_80282040	80282040
FUN_80282080	80282080
FUN_802820ec	802820ec
FUN_80282158	80282158
FUN_8028223c	8028223c
FUN_8028235c	8028235c
FUN_802823dc	802823dc
FUN_80282440	80282440
FUN_802824ac	802824ac
FUN_80282518	80282518
FUN_802826f4	802826f4
FUN_802827a8	802827a8
FUN_80282854	80282854
FUN_802828c0	802828c0
FUN_80282918	80282918
FUN_80282978	80282978
FUN_802829a0	802829a0
FUN_80282a14	80282a14
FUN_80282a38	80282a38
FUN_80282a3c	80282a3c
FUN_80282b44	80282b44
FUN_80282c34	80282c34
FUN_80282c38	80282c38
FUN_80282e00	80282e00
FUN_80282e58	80282e58
FUN_80282f48	80282f48
FUN_80282f98	80282f98
FUN_80282fa4	80282fa4
__sinit_MapObjKpFire_cpp	80282fb0
FUN_8028333c	8028333c
FUN_80283344	80283344
FUN_8028334c	8028334c
FUN_80283354	80283354
FUN_8028335c	8028335c
FUN_80283364	80283364
FUN_8028336c	8028336c
FUN_802833e8	802833e8
FUN_8028349c	8028349c
FUN_80283504	80283504
FUN_802836fc	802836fc
FUN_80283a48	80283a48
FUN_80283a84	80283a84
FUN_80283aac	80283aac
__sinit_MapObjRollTable_cpp	80283ab8
FUN_80283bc4	80283bc4
FUN_80283cf0	80283cf0
FUN_80283d90	80283d90
FUN_80283db8	80283db8
FUN_80283e8c	80283e8c
FUN_80283ef8	80283ef8
FUN_802840c4	802840c4
FUN_802840e0	802840e0
FUN_8028432c	8028432c
FUN_80284440	80284440
FUN_80284494	80284494
FUN_802844c8	802844c8
FUN_80284520	80284520
FUN_80284528	80284528
FUN_8028452c	8028452c
FUN_80284554	80284554
FUN_8028458c	8028458c
FUN_802845b8	802845b8
FUN_802845c0	802845c0
FUN_80284658	80284658
FUN_80284684	80284684
FUN_802846dc	802846dc
FUN_80284938	80284938
FUN_8028497c	8028497c
FUN_80284a30	80284a30
FUN_80284b10	80284b10
FUN_80284c00	80284c00
FUN_80284d08	80284d08
FUN_80284d70	80284d70
FUN_80284dd8	80284dd8
FUN_8028509c	8028509c
FUN_80285108	80285108
FUN_8028558c	8028558c
FUN_80285684	80285684
FUN_80285780	80285780
FUN_80285a10	80285a10
FUN_80285b74	80285b74
FUN_802860d0	802860d0
FUN_80286108	80286108
FUN_80286158	80286158
FUN_802861b0	802861b0
FUN_802861bc	802861bc
FUN_802861c8	802861c8
FUN_80286278	80286278
FUN_80286280	80286280
__sinit_MapObjNossie_cpp	80286330
FUN_80286470	80286470
FUN_802864fc	802864fc
FUN_80286578	80286578
FUN_80286630	80286630
FUN_802866ac	802866ac
FUN_8028670c	8028670c
FUN_80286778	80286778
FUN_802867e4	802867e4
FUN_80286820	80286820
FUN_80286824	80286824
FUN_8028689c	8028689c
FUN_802868a0	802868a0
FUN_8028691c	8028691c
FUN_80286980	80286980
FUN_802869d8	802869d8
FUN_80286a30	80286a30
FUN_80286ab4	80286ab4
FUN_80286ba4	80286ba4
FUN_80286bc4	80286bc4
FUN_80286c28	80286c28
FUN_80286c80	80286c80
FUN_80286cd8	80286cd8
FUN_80286d5c	80286d5c
FUN_80286e4c	80286e4c
FUN_80286e6c	80286e6c
FUN_80286e78	80286e78
__sinit_MapObjMare_cpp	80286e84
FUN_80286ffc	80286ffc
FUN_80287004	80287004
FUN_80287090	80287090
FUN_8028710c	8028710c
FUN_802871c4	802871c4
FUN_80287240	80287240
FUN_802872a0	802872a0
FUN_8028730c	8028730c
FUN_80287378	80287378
FUN_802873b4	802873b4
FUN_802873b8	802873b8
FUN_80287430	80287430
FUN_80287434	80287434
FUN_802874b0	802874b0
FUN_80287514	80287514
FUN_8028756c	8028756c
FUN_802875c4	802875c4
FUN_80287648	80287648
FUN_80287738	80287738
FUN_80287758	80287758
FUN_802877d4	802877d4
FUN_8028783c	8028783c
FUN_802878ec	802878ec
FUN_80287968	80287968
FUN_802879c8	802879c8
FUN_802879fc	802879fc
FUN_80287a08	80287a08
__sinit_MapObjMonte_cpp	80287a14
FUN_80287b8c	80287b8c
FUN_80287b94	80287b94
FUN_80287bfc	80287bfc
FUN_80287ca4	80287ca4
FUN_80287ccc	80287ccc
FUN_80288228	80288228
FUN_8028824c	8028824c
FUN_8028825c	8028825c
FUN_80288298	80288298
FUN_802883e0	802883e0
FUN_80288480	80288480
FUN_80288530	80288530
FUN_802885f0	802885f0
FUN_80288738	80288738
FUN_80288798	80288798
FUN_80288850	80288850
FUN_802888f8	802888f8
FUN_802889c8	802889c8
FUN_80288a34	80288a34
FUN_80288aa0	80288aa0
__sinit_MapObjMeteor_cpp	80288aac
FUN_80288c9c	80288c9c
FUN_80288ca4	80288ca4
FUN_80288cac	80288cac
FUN_80288cb4	80288cb4
FUN_80288d0c	80288d0c
FUN_80288d64	80288d64
FUN_80288df4	80288df4
FUN_80288e0c	80288e0c
FUN_80288ed8	80288ed8
FUN_80288f10	80288f10
FUN_80289000	80289000
FUN_8028908c	8028908c
FUN_80289100	80289100
FUN_80289190	80289190
__sinit_MapObjDemoObj_cpp	802895d0
FUN_802896dc	802896dc
FUN_8028987c	8028987c
FUN_80289884	80289884
FUN_8028995c	8028995c
FUN_80289984	80289984
FUN_80289b18	80289b18
FUN_80289c1c	80289c1c
FUN_80289c88	80289c88
FUN_80289cf4	80289cf4
FUN_80289d18	80289d18
FUN_80289d58	80289d58
FUN_80289e04	80289e04
FUN_80289ea8	80289ea8
FUN_80289ec8	80289ec8
FUN_8028a108	8028a108
FUN_8028a124	8028a124
FUN_8028a1dc	8028a1dc
FUN_8028a204	8028a204
FUN_8028a208	8028a208
FUN_8028a358	8028a358
FUN_8028a3c4	8028a3c4
FUN_8028a430	8028a430
FUN_8028a46c	8028a46c
FUN_8028a4d4	8028a4d4
FUN_8028a568	8028a568
FUN_8028a5d4	8028a5d4
FUN_8028a740	8028a740
FUN_8028a780	8028a780
FUN_8028a7d0	8028a7d0
FUN_8028a7f0	8028a7f0
FUN_8028a7f4	8028a7f4
FUN_8028a90c	8028a90c
FUN_8028a9f8	8028a9f8
FUN_8028a9fc	8028a9fc
FUN_8028aa20	8028aa20
FUN_8028afa8	8028afa8
FUN_8028afcc	8028afcc
FUN_8028aff4	8028aff4
FUN_8028b0e8	8028b0e8
FUN_8028b15c	8028b15c
FUN_8028b184	8028b184
FUN_8028b304	8028b304
FUN_8028b350	8028b350
FUN_8028b3f0	8028b3f0
FUN_8028b3f4	8028b3f4
FUN_8028b3f8	8028b3f8
FUN_8028b498	8028b498
FUN_8028b49c	8028b49c
FUN_8028b4a0	8028b4a0
FUN_8028b4c0	8028b4c0
__sinit_MapObjAwardItemBox_cpp	8028b4e0
FUN_8028b7f8	8028b7f8
FUN_8028b800	8028b800
FUN_8028b808	8028b808
FUN_8028b810	8028b810
FUN_8028b818	8028b818
FUN_8028b820	8028b820
FUN_8028b828	8028b828
FUN_8028b8d0	8028b8d0
FUN_8028b920	8028b920
FUN_8028b9cc	8028b9cc
FUN_8028ba38	8028ba38
FUN_8028bad8	8028bad8
FUN_8028bb00	8028bb00
FUN_8028bb38	8028bb38
FUN_8028bb74	8028bb74
FUN_8028bb78	8028bb78
FUN_8028bb7c	8028bb7c
FUN_8028bb84	8028bb84
__sinit_MapObjHanabi_cpp	8028bc48
FUN_8028bd54	8028bd54
FUN_8028bd5c	8028bd5c
FUN_8028bdec	8028bdec
FUN_8028beb4	8028beb4
FUN_8028bedc	8028bedc
FUN_8028bf60	8028bf60
FUN_8028bfac	8028bfac
FUN_8028c0e0	8028c0e0
FUN_8028c14c	8028c14c
FUN_8028c1b8	8028c1b8
FUN_8028c21c	8028c21c
FUN_8028c270	8028c270
FUN_8028c2b0	8028c2b0
FUN_8028c2d8	8028c2d8
FUN_8028c30c	8028c30c
FUN_8028c310	8028c310
FUN_8028c460	8028c460
FUN_8028c4a0	8028c4a0
FUN_8028c540	8028c540
__sinit_MapObjAntLion_cpp	8028c544
FUN_8028c6ec	8028c6ec
FUN_8028c6f4	8028c6f4
FUN_8028c6fc	8028c6fc
FUN_8028c704	8028c704
FUN_8028c784	8028c784
FUN_8028c7ac	8028c7ac
FUN_8028c7f0	8028c7f0
FUN_8028c824	8028c824
FUN_8028c978	8028c978
FUN_8028c9cc	8028c9cc
FUN_8028cb1c	8028cb1c
FUN_8028cb24	8028cb24
FUN_8028cc08	8028cc08
FUN_8028ce28	8028ce28
FUN_8028ce60	8028ce60
FUN_8028ce98	8028ce98
FUN_8028cf2c	8028cf2c
FUN_8028cf58	8028cf58
FUN_8028cfc4	8028cfc4
FUN_8028d030	8028d030
FUN_8028d08c	8028d08c
FUN_8028d0e0	8028d0e0
FUN_8028d0f8	8028d0f8
FUN_8028d1e4	8028d1e4
FUN_8028d21c	8028d21c
FUN_8028d318	8028d318
FUN_8028d31c	8028d31c
FUN_8028d3b8	8028d3b8
FUN_8028d3c4	8028d3c4
FUN_8028d584	8028d584
FUN_8028d97c	8028d97c
FUN_8028d9d4	8028d9d4
FUN_8028dad4	8028dad4
FUN_8028dbf4	8028dbf4
FUN_8028dc98	8028dc98
FUN_8028dce4	8028dce4
FUN_8028dd5c	8028dd5c
FUN_8028ddd8	8028ddd8
FUN_8028de00	8028de00
FUN_8028dee8	8028dee8
FUN_8028df88	8028df88
FUN_8028df8c	8028df8c
FUN_8028df90	8028df90
FUN_8028df9c	8028df9c
FUN_8028dfa8	8028dfa8
FUN_8028e038	8028e038
__sinit_MapObjPakkun_cpp	8028e044
FUN_8028e290	8028e290
FUN_8028e298	8028e298
FUN_8028e2a0	8028e2a0
FUN_8028e2a8	8028e2a8
FUN_8028e2b0	8028e2b0
FUN_8028e328	8028e328
FUN_8028e3b8	8028e3b8
FUN_8028e3e0	8028e3e0
FUN_8028e434	8028e434
FUN_8028e480	8028e480
FUN_8028e568	8028e568
__sinit_MapObjKpGear_cpp	8028e56c
FUN_8028e678	8028e678
FUN_8028e798	8028e798
FUN_8028e84c	8028e84c
FUN_8028e9f4	8028e9f4
FUN_8028ea2c	8028ea2c
FUN_8028eabc	8028eabc
FUN_8028eb00	8028eb00
FUN_8028eb5c	8028eb5c
FUN_8028f0a4	8028f0a4
FUN_8028f130	8028f130
FUN_8028f1b0	8028f1b0
FUN_8028f1fc	8028f1fc
FUN_8028f2a0	8028f2a0
FUN_8028f374	8028f374
FUN_8028f404	8028f404
__sinit_SMABoidBird_cpp	8028f410
FUN_8028f51c	8028f51c
FUN_8028f5e8	8028f5e8
FUN_8028f640	8028f640
FUN_8028f680	8028f680
FUN_8028f724	8028f724
FUN_8028f7f4	8028f7f4
FUN_8028fa04	8028fa04
FUN_8028fef4	8028fef4
FUN_802902d8	802902d8
FUN_80290320	80290320
FUN_80290380	80290380
FUN_802903d8	802903d8
FUN_802903fc	802903fc
FUN_80290494	80290494
FUN_80290594	80290594
FUN_802907e0	802907e0
__sinit_WipeCheck_cpp	8029080c
FUN_80290918	80290918
FUN_80290968	80290968
FUN_802909c0	802909c0
FUN_802909e4	802909e4
FUN_80290b6c	80290b6c
TWipeShut::initGX() 	80290e44
FUN_80290f98	80290f98
FUN_802910a8	802910a8
__sinit_WipeShut_cpp	80291164
FUN_80291270	80291270
FUN_802912c0	802912c0
FUN_80291318	80291318
FUN_8029133c	8029133c
FUN_80291434	80291434
FUN_80291638	80291638
FUN_80291670	80291670
FUN_802916c0	802916c0
FUN_80291718	80291718
FUN_8029173c	8029173c
FUN_80291834	80291834
FUN_80291a38	80291a38
__sinit_WipeLine_cpp	80291a70
FUN_80291b7c	80291b7c
FUN_80291bcc	80291bcc
FUN_80291c24	80291c24
FUN_80291c48	80291c48
TWipeWaveA::drawMain(int, float, JUtility::TColor) 	80291d60
FUN_80291f30	80291f30
TWipeWaveA::initGX(const JUtility::TColor &) 	80291f5c
FUN_8029215c	8029215c
__sinit_WipeWave_cpp	80292258
FUN_80292364	80292364
FUN_802923d8	802923d8
FUN_80292480	80292480
FUN_802924a8	802924a8
FUN_80292514	80292514
FUN_80292580	80292580
FUN_80292734	80292734
FUN_802927d4	802927d4
FUN_80292938	80292938
FUN_8029293c	8029293c
FUN_80292984	80292984
FUN_80292990	80292990
FUN_80292acc	80292acc
FUN_80292ad0	80292ad0
FUN_80292b18	80292b18
FUN_80292b24	80292b24
__sinit_MapObjVentilator_cpp	80292c60
FUN_80292e38	80292e38
FUN_80292e40	80292e40
FUN_80292e48	80292e48
FUN_80292e50	80292e50
FUN_80292f18	80292f18
FUN_8029301c	8029301c
FUN_80293170	80293170
FUN_80293210	80293210
FUN_80293254	80293254
FUN_8029329c	8029329c
FUN_802932fc	802932fc
FUN_80293368	80293368
FUN_802933d4	802933d4
FUN_802933f0	802933f0
FUN_802934a8	802934a8
FUN_80293574	80293574
FUN_8029358c	8029358c
FUN_80293714	80293714
FUN_80293718	80293718
FUN_80293878	80293878
FUN_80293928	80293928
FUN_80293c64	80293c64
FUN_802940cc	802940cc
__sinit_MapObjYoshiHeli_cpp	802940d8
FUN_80294280	80294280
FUN_80294288	80294288
FUN_80294290	80294290
FUN_80294298	80294298
FUN_802942c8	802942c8
FUN_80294350	80294350
FUN_80294438	80294438
FUN_80294558	80294558
FUN_80294564	80294564
FUN_802945d0	802945d0
FUN_8029463c	8029463c
FUN_80294678	80294678
FUN_802946c0	802946c0
FUN_80294888	80294888
FUN_802948f0	802948f0
FUN_80294924	80294924
FUN_80294980	80294980
FUN_802949b4	802949b4
FUN_802949c4	802949c4
FUN_80294a34	80294a34
FUN_80294a38	80294a38
FUN_80294a80	80294a80
FUN_80294abc	80294abc
FUN_80294e04	80294e04
FUN_80294e50	80294e50
FUN_80294e54	80294e54
FUN_80294ec4	80294ec4
FUN_80294ed4	80294ed4
FUN_80294fb4	80294fb4
FUN_80294fc0	80294fc0
__sinit_ShineArrow_cpp	80295008
FUN_802951e0	802951e0
FUN_802951e8	802951e8
FUN_802951f0	802951f0
ZCaptureMgr::ZCaptureMgr(unsigned long) 	802951f8
ZCaptureMgr::~ZCaptureMgr() 	80295284
ZCaptureMgr::reset() 	80295320
ZCaptureMgr::capture(unsigned long) 	80295374
ZCaptureMgr::captureDone() 	802953bc
ZCaptureMgr::setPosition(unsigned long, unsigned long, short, short) 	802953dc
ZCaptureMgr::getZValue(unsigned long, unsigned long) 	80295410
ZCaptureScreen::ZCaptureScreen() 	8029543c
ZCaptureScreen::~ZCaptureScreen() 	802954c0
ZCaptureScreen::reset() 	8029554c
ZCaptureScreen::captureAll() 	80295598
ZCaptureScreen::capture(unsigned long) 	802955ec
ZCaptureScreen::setPosition(unsigned long, short, short) 	80295618
ZCaptureScreen::getZValue(unsigned long) const 	8029564c
ZCaptureScreen::ZCaptureNode::ZCaptureNode() 	80295678
ZCaptureScreen::ZCaptureNode::~ZCaptureNode() 	802956c0
ZCaptureScreen::ZCaptureNode::reset() 	80295718
ZCaptureScreen::ZCaptureNode::setPosition(short, short) 	80295774
ZCaptureScreen::ZCaptureNode::capture() 	80295794
ZCaptureScreen::ZCaptureNode::getZValue() 	8029580c
TWipeCurtain::TWipeCurtain(JKRHeap *) 	8029582c
TWipeCurtain::~TWipeCurtain() 	8029587c
TWipeCurtain::init() 	802958d4
TWipeCurtain::calcMain(int, float, JUtility::TColor) 	802958f8
TWipeCurtain::drawPreIn(int, JUtility::TColor) 	802959cc
TWipeCurtain::drawMain(int, float, JUtility::TColor) 	80295adc
TWipeCurtain::drawQuad(float, float, float, float, const JUtility::TColor &) 	80295e00
TWipeCurtain::drawImage(JUTTexture *, float, float, float, float) 	80295e2c
TWipeCurtain::initGXForTex(JUtility::TColor) 	80295f08
__sinit_WipeCurtain_cpp	802960a8
TJugem::isDemoMode() 	802961b4
TJugem::initFunc_DemoHide() 	802961c4
TJugem::doFunc_DemoHide() 	802961e4
TJugem::initFunc_DemoIn() 	802961e8
TJugem::doFunc_DemoIn() 	802962ac
TJugem::initFunc_DemoWait() 	802962f8
TJugem::doFunc_DemoWait() 	802962fc
TJugem::initFunc_WaitDemoOut() 	80296328
TJugem::doFunc_WaitDemoOut() 	8029632c
TJugem::initFunc_DemoOut() 	80296384
TJugem::doFunc_DemoOut() 	802963b8
TJugem::initFunc_Ending() 	8029642c
TJugem::doFunc_Ending() 	8029644c
__sinit_JugemDemo_cpp	80296450
TAutoPWindow::~TAutoPWindow() 	8029655c
TAutoPWindow::InitExec() 	802965c8
TAutoPWindow::MoveExec() 	80296634
TAutoPWindow::initFunc_BeforeOpen() 	802966a0
TAutoPWindow::initFunc_Hide() 	802966a4
TAutoPWindow::doFunc_Hide() 	802966b4
TAutoPWindow::initFunc_Open() 	802966b8
TAutoPWindow::doFunc_Open() 	80296724
TAutoPWindow::initFunc_Display() 	802967bc
TAutoPWindow::doFunc_Display() 	802967cc
TAutoPWindow::initFunc_Close() 	8029680c
TAutoPWindow::doFunc_Close() 	80296880
SecretScene::SecretScene(JKRArchive *, JKRHeap *) 	80296920
SecretScene::~SecretScene() 	80296a64
SecretScene::init() 	80296afc
SecretScene::reset() 	80296b34
SecretScene::checkFlag() 	80296c78
SecretScene::load(JKRHeap *) 	80296f14
SecretScene::draw() 	80297144
SecretScene::calc() 	802972bc
SecretScene::InitExec() 	80297520
SecretScene::MoveExec() 	8029758c
SecretScene::initFunc_FadeIn() 	802975f8
SecretScene::setMessageID(unsigned long, const SecretScene::TMesgList &) 	80297690
SecretScene::doFunc_FadeIn() 	802978ac
SecretScene::initFunc_Screen1() 	802978e8
SecretScene::doFunc_Screen1() 	80297984
SecretScene::initFunc_Screen2() 	802979d0
SecretScene::doFunc_Screen2() 	80297ac4
SecretScene::initFunc_FadeOut() 	80297e3c
SecretScene::doFunc_FadeOut() 	80297ea0
__sinit_SecretScene_cpp	80297ef4
SecretScene::@12@InitExec() 	80298630
SecretScene::@12@MoveExec() 	80298638
SecretScene::@12@__dt() 	80298640
KartBody::DegubBody(unsigned long)	80298648
KartBody::SetUpRigidBodyPose(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	8029864c
KartBody::SetUpRigidBodyStartGridPose()	802987ec
KartBody::DoForce(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	80298b1c
KartBody::DoTq(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	80298bc8
KartBody::DoForceOnly(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	80298c54
KartBody::DoGForce()	80298ce0
KartBody::DoCalcWgVel()	80298f0c
KartBody::DoPose()	8029918c
KartBody::WallFriction(JGeometry::TVec3<float> *, float, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float)	8029938c
KartBody::GroundReflection(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float, float, float)	80299570
KartBody::RigidReflectionPower(KartBody *, KartBody *, float *, float *)	8029991c
KartBody::RigidReflectionPower(KartBody *, KartBody *, float *, float *)	80299e18
KartBody::ObjectReflection(JGeometry::TVec3<float> *)	8029a908
KartBody::ObjectWallReflection(GeographyObj *)	8029ab44
KartBody::StarReact(GeographyObj *)	8029b100
KartBody::CheckObjectReflection()	8029b1dc
KartBody::CheckRoofReflection()	8029bbf0
KartBody::WallReflection(JGeometry::TVec3<float> *, float, float, float)	8029bcbc
KartBody::CheckVertexReflection()	8029be8c
KartBody::CheckBodyHit(KartBody *, KartBody *)	8029c528
KartBody::GetMiniGameCamData(int)	8029ca34
KartBody::GetPakkunMiniGameCamData(int)	8029cbec
KartBody::InitCamSetting()	8029ccf8
KartBody::InitBodyParam()	8029cfb4
KartBody::InitCamSetting()	8029d6b0
__sinit_kartBody_cpp	8029def0
KartCam::KartCam(KartBody *, KartCtrl *, unsigned char, unsigned char)	8029dffc
KartCam::DegubCamera(char *, unsigned long)	8029e080
KartCam::DoPort(int)	8029e084
KartCam::Init(bool)	8029eb08
KartCam::DoInit()	8029ef4c
KartCam::DoResetInit()	8029efb8
KartCam::DoRaceCtrl()	8029efdc
KartCam::DoCameraMode()	8029f190
KartCam::DoCameraMode()	8029f254
__sinit_kartCamera_cpp	8029f3ac
KartCtrl::Init(KartBody *, KartSus **, KartAppendix **, KartSound *, KartTarget *, KartDisp *, int)	8029f4b8
KartCtrl::makeKartCtrl()	8029f614
KartCtrl::DynamicsInit(bool)	8029f63c
KartCtrl::DynamicsReset()	8029fb60
KartCtrl::DynamicsStage1()	8029fd1c
KartCtrl::DynamicsStage2()	802a01b4
KartCtrl::DrawKartInit(int)	802a02b4
GrafPort::~GrafPort()	802a03cc
KartCtrl::SetGrafPort()	802a0438
KartCtrl::DrwaBody(int, unsigned long, float (*) [4])	802a05dc
KartCtrl::DrwaParts(int, unsigned long, float (*) [4])	802a0668
__sinit_kartCtrl_cpp	802a0954
KartSus::InitTirePose(int)	802a0a60
KartSus::InitParam(int)	802a0cf4
KartSus::InitTirePose(int)	802a10f0
KartSus::NormalInit(int)	802a1270
KartSus::ResetInit(int)	802a12d4
KartSus::DoSusAction(int)	802a12f4
KartSus::DoTireAction()	802a197c
__sinit_kartSus_cpp	802a1fc0
KartVec::SetVector(Vec *, float, float, float)	802a20cc
KartVec::AddVector(Vec *, float, float, float)	802a20dc
KartVec::MulVector(Vec *, float, float, float)	802a2104
KartVec::VectorLength(Vec *)	802a212c
KartVec::VectorLengthSqrtf(Vec *)	802a2150
KartVec::OuterCalc(Vec *, Vec *, Vec *)	802a2190
KartVec::VectorElement(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	802a21d0
KartMath::SpeedySqrtf(float)	802a2270
KartMath::CrossToPolar(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float *, float *, float *)	802a229c
KartMath::PolarToCross(Vec *, Vec *, float, float, float)	802a2384
KartMath::lu(float (*) [3], int *)	802a2424
KartMath::Gauss(float (*) [3], float *, float *)	802a25cc
KartMath::LimmtNumber(float, float)	802a26d8
KartMath::fcnvge(float, float, float, float)	802a26fc
KartMath::ChaseFnumber(float *, float, float)	802a272c
KartMath::ChaseFcnvge(float *, unsigned short *, float, unsigned short)	802a2764
KartMath::ChaseFcnvge4(float *, unsigned short *, float, unsigned short)	802a27d0
KartMat::ClearRotMatrix(float (*) [4])	802a2844
KartMat::SetPosePosMatrix(float (*) [4], float (*) [4], Vec *)	802a2880
KartMat::SetPosMatrix(float (*) [4], Vec *)	802a28e4
KartMat::MulMatrixByVector(Vec *, Vec *, float (*) [4])	802a2900
KartMat::DevMatrixByVector(Vec *, Vec *, float (*) [4])	802a2964
KartMat::DevMatrixByVector2(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *, float (*) [4])	802a29c8
KartMat::DevCrdMatrixByVector(Vec *, Vec *, float (*) [4])	802a2a2c
KartMat::MulMatrixByVector(Vec *, Vec *, float (*) [4])	802a2aa8
KartMat::RotYMatrix(float (*) [4], float)	802a2c14
KartMat::RotYMatrix33(float (*) [4], float)	802a2ca0
KartMat::RotXMatrix(float (*) [4], float)	802a2d20
KartMat::RotZMatrix(float (*) [4], float)	802a2dac
KartMat::AddMatrix(float (*) [4], float (*) [4])	802a2e38
KartMat::NormalizeMatrix(float (*) [4])	802a2ecc
KartMat::OmegaMatrix(float (*) [4], Vec *, float)	802a30a4
__sinit_kartvec_cpp	802a3100
__sinit_kartParams_cpp	802a320c
KartStrat::Init(int)	802a3318
KartStrat::GetBodySpeed()	802a3330
KartStrat::GetBodyRoll()	802a3368
KartStrat::GetRoadBodyRoll()	802a3538
KartStrat::GetBodyNorm()	802a38ec
KartStrat::DoVelCrl(float)	802a3af4
KartStrat::DoWgCrl(float)	802a3b78
KartStrat::DoRotPose(JGeometry::TVec3<float>, float)	802a3bfc
KartStrat::DoPoseCrl()	802a40ac
KartStrat::MovingSpinClear()	802a4c58
KartStrat::MovingHalfSpinClear()	802a4ccc
KartStrat::MovingTornadeClear()	802a4d40
KartStrat::FreezeClear()	802a4dac
KartStrat::RollCrashClear()	802a4e1c
KartStrat::AllGravyClear()	802a4ee0
KartStrat::GravyClear()	802a4f10
KartStrat::LiftClear()	802a4f38
KartStrat::PitchClear()	802a4f64
KartStrat::DashClear()	802a4f8c
KartStrat::OtherClear()	802a5000
KartStrat::ShakeGround()	802a5118
KartStrat::DoAdjustment()	802a5430
KartStrat::DoWheelSpinCrl()	802a5978
KartStrat::DoYawLimit()	802a5b0c
KartStrat::DoLiftYawCrl()	802a5ca8
KartStrat::DoRollLim(float, float)	802a6388
KartStrat::DoPitchLim()	802a675c
KartStrat::DoRollCrash()	802a6e00
KartStrat::DoDashCrl(float)	802a6fa0
KartStrat::DoAirCrl()	802a7154
KartStrat::DoSpeedCrl()	802a77d0
KartStrat::DoComSpeedCrl()	802a81d8
KartStrat::DoMotor(MotorManager::MotorType)	802a8aac
KartStrat::DoPowerMotor(float, unsigned char, unsigned char)	802a8b14
KartStrat::DashSpeedCtrl(float)	802a8b9c
KartStrat::DashSpSpeedCtrl(float)	802a8bbc
KartStrat::CompulsionDash(JGeometry::TVec3<float> *)	802a8e30
KartStrat::DoDashCrl(float)	802a9330
KartStrat::DoStatusCrl()	802a9d68
__sinit_kartBodyStrat_cpp	802aac7c
KartGame::Init(int)	802aad88
KartGame::DoItmCancel()	802aae28
KartGame::DoStopItm()	802aae68
KartGame::DoChange()	802aaf34
KartGame::DoSlide()	802ab200
KartGame::CheckDriftTurbo()	802ab514
KartGame::DoWarmUpRoll()	802ab880
KartGame::DoRollAnim()	802abd98
KartGame::DoDriftClear()	802abf9c
KartGame::DoRollAnim()	802abff8
KartGame::DoLiftTurbo()	802ac338
KartGame::DoTurbo()	802ac63c
KartGame::DoRollThrow()	802acad4
KartGame::DoWanWan()	802acbf4
KartGame::DoPushStart()	802ad21c
KartGame::MakeClear()	802ad274
KartGame::MakeMashDash()	802ad2cc
KartGame::MakeGoldenMashDash()	802ad454
KartGame::MakeStartDash()	802ad5ec
KartGame::MakeCrashDash()	802ad790
KartGame::MakeWheelSpin()	802ad8d4
KartGame::MakeJump()	802ad9ac
KartGame::DoAirCheck()	802adb80
KartGame::DoRearSlideBody()	802adec0
KartGame::DoCorner()	802ae45c
KartGame::DoBodyAction()	802ae678
KartGame::DoElementForce()	802ae8f0
KartGame::CheckBalloon()	802ae984
KartGame::SetRank()	802aea20
KartGame::RankWatchMan()	802aea4c
KartGame::ItemWatchMan(ItemObj *)	802aebf0
KartGame::KeepWatch()	802aec7c
KartGame::DoActionMgr()	802af090
KartGame::DoStatus()	802afcb0
__sinit_kartCtrlStrat_cpp	802b0650
Spline::getBezierPoint(JGeometry::TVec3<float> *, float)	802b075c
__sinit_kartLine_cpp	802b0838
KartCtrl::SetPadClear(KartGamePad *)	802b0944
KartCtrl::SetGhostPadClear(KartGamePad *)	802b096c
KartCtrl::PadAllClear(int)	802b09ac
KartCtrl::DoContCtl(int)	802b0a18
KartCtrl::DoContCopy(int)	802b0c20
KartCtrl::DoContPaste(int)	802b0cdc
KartCtrl::GetItemStickY(int)	802b0d98
KartCtrl::GetItemStickX(int)	802b0dac
KartCtrl::GetItemButton(int)	802b0dd4
KartCtrl::DoLod()	802b0e04
KartCtrl::GetPortPtr(int)	802b1154
KartCtrl::GetCamFovy(int)	802b1218
KartCtrl::GetCamAspect(int)	802b122c
KartCtrl::GetBodyGround(int)	802b1240
KartCtrl::GetRRTireGround(int)	802b1254
KartCtrl::GetRLTireGround(int)	802b126c
KartCtrl::GetBodyPos(int, JGeometry::TVec3<float> *)	802b1284
KartCtrl::GetBodyVel(int, JGeometry::TVec3<float> *)	802b12ac
KartCtrl::GetLeftFTirePos(int, Vec *)	802b12ec
KartCtrl::GetRightFTirePos(int, Vec *)	802b1314
KartCtrl::GetLeftTirePos(int, Vec *)	802b133c
KartCtrl::GetRightTirePos(int, Vec *)	802b1364
KartCtrl::GetTirePos(int, int, Vec *)	802b138c
KartCtrl::GeTireG(int)	802b141c
KartCtrl::GetCarSpeed(int)	802b1430
KartCtrl::GetCarRpm(int)	802b1460
KartCtrl::GetKartRpm(int)	802b148c
KartCtrl::GetDriveCont(int)	802b14a0
KartCtrl::GetCoDriveCont(int)	802b1520
KartCtrl::GetCarStatus(int)	802b15a0
KartCtrl::GetGameStatus(int)	802b15b8
KartCtrl::SetTireDispRound(KartBody *, KartSus *, float)	802b15cc
KartCtrl::WhichDriver(int)	802b1680
KartCtrl::WhichNowDriver(int)	802b169c
KartCtrl::CheckCamera(int)	802b16b0
KartCtrl::GetCameraNum(int)	802b16d0
KartCtrl::CheckItem(int)	802b16e4
KartCtrl::GetMaxSpeed(int)	802b1724
KartCtrl::GetDownSlopeAcc(int)	802b191c
KartCtrl::GetDownSlopeSpeed(int)	802b1990
KartCtrl::GetTireAngle(int)	802b1a00
KartCtrl::GetTandemDir(int)	802b1a14
KartCtrl::GetWaterHeight(int)	802b1a50
KartCtrl::CheckJugemuSignal()	802b1ac8
KartCtrl::GetKartSoundMgr(int)	802b1ad4
KartCtrl::GetKartBodyOffset(int)	802b1ae8
KartCtrl::MakeChangePossible(int)	802b1af0
KartCtrl::CheckTandemItmGet(int)	802b1cd8
KartCtrl::CheckTandemItmRollingGet(int)	802b1d58
KartCtrl::SetObjectPos(int, JGeometry::TVec3<float>)	802b1dd8
KartCtrl::CheckThunderBolt(int)	802b1e04
KartCtrl::GetTireRadius(int)	802b1e20
KartCtrl::IsBurn(int)	802b1e38
KartCtrl::IsWallReact(int)	802b1e60
KartCtrl::HaveBalloon(int)	802b1eb8
KartCtrl::GetDriftCnt(int)	802b1ed8
KartCtrl::IsMiniGame()	802b1f24
KartCtrl::IsMiniGameEnd()	802b1f60
KartCtrl::CheckWinner()	802b1fc0
KartCtrl::GetKartEffctVel(int, JGeometry::TVec3<float> *)	802b2010
KartCtrl::CheckChange(int)	802b2058
KartCtrl::CheckMatchless(int)	802b20b4
KartCtrl::CheckReverse(int)	802b20e4
KartCtrl::GetKartScale(int)	802b20fc
KartCtrl::getKartEnemy(int)	802b2128
KartCtrl::GetKartCenterPtr(int)	802b2138
KartCtrl::EnemyInit(int)	802b214c
KartCtrl::EnemyResetInit(int)	802b2178
KartCtrl::CheckZoomWinConsole()	802b21a4
KartCtrl::SetUpMiniTurbo(int, unsigned char)	802b21b0
KartStrat::DoStepAccel()	802b21c4
KartStrat::DoStepSterr()	802b23c8
KartStrat::DoSterr()	802b2534
KartStrat::DoAccel()	802b2a2c
KartCtrl::HaveRabbit()	802b2f3c
__sinit_kartCtrlInfo_cpp	802b3028
KartCam::SetTargetNum(unsigned char)	802b3134
KartCam::SetClipper()	802b3154
KartCam::CheckClipper()	802b31c4
GrafPort::GrafPort(int, int, int, int, float, float, float)	802b3260
GrafPort::setPort()	802b3314
GrafPort::SetParam(float, float, float)	802b3370
KartCam::MakeShaker(float)	802b3380
KartCam::SetPtr()	802b33c8
KartCam::GetCameraPos()	802b34f8
KartCam::GetCameraLookPos()	802b3500
KartCam::SetFovyData()	802b3508
KartCam::First4ScreenPort(unsigned char)	802b36f0
KartCam::Second4ScreenPort(unsigned char)	802b3cb0
KartCam::Third4ScreenPort(unsigned char)	802b4270
KartCam::Fourth4ScreenPort(unsigned char)	802b4830
KartCam::SetVictoryScreenPort(unsigned char)	802b4df0
KartCam::DoMoveCamera(JGeometry::TVec3<float> *, JGeometry::TVec3<float> *)	802b5348
KartCam::DoSea(JGeometry::TVec3<float> *, CrsGround *)	802b5628
KartCam::DoGround(JGeometry::TVec3<float> *, CrsGround *)	802b5b68
KartCam::InitOutView()	802b60a0
KartCam::DoLookChase()	802b6240
KartCam::DoXRotation()	802b6324
KartCam::DoCamPos(float, JGeometry::TVec3<float> *)	802b6874
KartCam::OutView()	802b6b98
KartCam::InitRaceBackView()	802b7490
KartCam::ParallelView()	802b7580
KartCam::InitBackView()	802b7714
KartCam::BackView()	802b789c
KartCam::HangRescueView()	802b78c4
KartCam::InitDropRescueView()	802b7a90
KartCam::DropRescueView()	802b7bf8
KartCam::LaunchView()	802b7e94
KartCam::LandView()	802b8064
KartCam::InitPipeView()	802b8234
KartCam::PipeView()	802b83c4
__sinit_kartCamStrat_cpp	802b8520
KartAnime::IsAppeal(int)	802b862c
KartAnime::IsThrow(int)	802b866c
KartAnime::IsMove(int)	802b86ac
KartAnime::IsDamage(int)	802b86ec
KartAnime::IsDamageL(int)	802b872c
KartAnime::IsDamageS(int)	802b876c
KartAnime::IsRide(int)	802b87ac
KartAnime::IsNormalStart(int)	802b87ec
KartAnime::IsBackStart(int)	802b882c
KartAnime::IsRun(int)	802b886c
KartAnime::IsDrift(int)	802b88ac
KartAnime::IsDriftStart(int)	802b88ec
KartAnime::IsDriftLeft(int)	802b892c
KartAnime::IsDriftRight(int)	802b896c
KartAnime::IsRocket(int)	802b89ac
KartAnime::IsJump(int)	802b89ec
KartAnime::IsSit(int)	802b8a2c
KartAnime::IsBackAnime(int)	802b8a6c
KartAnime::IsFloatAnime(int)	802b8aac
KartAnime::IsDangerAnime(int)	802b8aec
KartAnime::IsDangerPlusAnime(int)	802b8b2c
KartAnime::IsGetItemAnime(int)	802b8b6c
KartAnime::IsBurnAnime(int)	802b8ba8
KartAnime::IsDrive(int)	802b8be8
KartAnime::IsBackStart(int)	802b8c28
KartAnime::IsGaol(int)	802b8c88
KartAnime::IsAttack(int)	802b8cc8
KartAnime::IsProhibition(int)	802b8d08
KartAnime::MakeThrowAnime(int, int, int)	802b8d80
KartAnime::MakeBackAnime(int)	802b8d9c
KartAnime::MakeFrontAnime(int)	802b8df4
KartAnime::Init()	802b8e4c
KartAnime::DoGetAnime(int)	802b8ea8
KartAnime::DoDriveAnime(int)	802b90dc
KartAnime::DoStartRunStartAnime(int)	802b915c
KartAnime::DoStartRunEndAnime(int)	802b9190
KartAnime::DoSurpriseEndAnime(int)	802b91c8
KartAnime::DoStopAnime(int)	802b9278
KartAnime::DoReStopAnime(int)	802b92a0
KartAnime::DoCheck(int)	802b92c8
KartAnime::DoAnime(int)	802b98e0
__sinit_KartAnime_cpp	802bacb8
KartItem::Init(int)	802badc4
KartItem::DoRabbit()	802badf0
KartItem::SetSucMashItem()	802bae94
KartItem::CheckHitItem()	802baf94
KartItem::FallStealItem(int, int)	802bb010
KartItem::FallItem()	802bb368
KartItem::FallAllItem()	802bb6d4
KartItem::ReleseWanWan()	802bb880
KartItem::CompulsionReleseWanWan()	802bb960
KartItem::KillWanWan()	802bba0c
KartItem::IsMyItem()	802bbaa0
KartItem::CheckOtherAnime()	802bbaf4
KartItem::DoOtherAnime()	802bbc6c
KartItem::DoTandemItemAnime()	802bc378
KartItem::DoTandemItemRelease()	802bc998
KartItem::DoItem()	802bcd2c
__sinit_KartItemStrat_cpp	802bce80
KartSound::Init(int)	802bcf8c
KartSound::DoInfo(int)	802bd088
KartSound::DoFinishSound(int)	802bd2cc
KartSound::DoSlipSound(int)	802bd31c
KartSound::DoWallHitSound(float, CrsGround::EMat)	802bd454
KartSound::DoHorn()	802bd478
KartSound::DoKartHitSound(float)	802bd5bc
KartSound::DoMashDashSound()	802bd5e8
KartSound::DoDashSound()	802bd614
KartSound::DoRollCrashStartSound()	802bd640
KartSound::DoRollCrashSound()	802bd678
KartSound::DoRollCrashEndSound()	802bd6b0
KartSound::DoBrakeSound()	802bd6e8
KartSound::DoStrikeSound()	802bd714
KartSound::DoStarStartSound()	802bd74c
KartSound::DoStarStopSound()	802bd774
KartSound::DoWanWanStartSound()	802bd79c
KartSound::DoWanWanStopSound()	802bd7c4
KartSound::DoChangeStarSound()	802bd804
KartSound::DoChibiSound(bool)	802bd82c
KartSound::DoGoalSound()	802bd854
KartSound::DoLapSound()	802bd88c
KartSound::DoThunderSound()	802bd8c4
KartSound::DoShootSound()	802bd8f0
KartSound::DoFireBall()	802bd91c
KartSound::DoHitFireBall()	802bd954
KartSound::DoKartDiveSound()	802bd98c
KartSound::DoKartMiniTuroboSound()	802bd9c4
KartSound::DoKartsetSeSound(unsigned long)	802bd9f0
KartSound::DoLandingSound(float)	802bda20
KartSound::DoWheelSpin()	802bda44
KartSound::DoShineStartBGM()	802bda68
KartSound::DoShineStopBGM()	802bda94
KartSound::DoWallObjectSound(unsigned long)	802bdacc
KartSound::DoItemAlarm()	802bdb40
KartSound::DoSpinSound()	802bdbbc
KartSound::DoSpinTurnSound()	802bdbe0
KartSound::DoStrikeVoice()	802bdc04
KartSound::DoStaggerVoice()	802bdc34
KartSound::DoCannonVoice()	802bdc64
KartSound::DoDragVoice()	802bdc94
KartSound::DoGoalVoice()	802bdcc4
KartSound::DoDriverGoalVoice()	802bde78
KartSound::DoSpinVoice()	802be02c
KartSound::DoFallVoice()	802be05c
KartSound::DoDashVoice()	802be0a4
KartSound::DoGoldenDashVoice()	802be0d4
KartSound::DoThrowVoice()	802be104
KartSound::DoPutVoice()	802be134
KartSound::DoChangeVoice()	802be164
KartSound::DoWanwanVoice()	802be194
KartSound::DoItmHitVoice()	802be1c4
KartSound::DoPathVoice()	802be1f4
KartSound::DoShootVoice()	802be224
KartSound::DoRollCrashVoice()	802be26c
KartSound::DoHeartVoice()	802be2b4
KartSound::DoTandemVoice(unsigned char)	802be2e4
KartSound::DoDriverVoice(unsigned char)	802be310
KartSound::DoAllVoice(unsigned char)	802be33c
__sinit_KartSound_cpp	802be384
KartTarget::Init()	802be490
KartTarget::DoSearchTarget(int)	802be4dc
KartTarget::DoSearchRescueTarget(CLPoint *)	802be898
__sinit_KartTaeget_cpp	802be8d8
KartRescue::Init(int)	802be9e4
KartRescue::SetPose(unsigned char)	802bea6c
KartRescue::DoTop()	802bf0c0
KartRescue::DoDrop()	802bf2ac
KartRescue::DoCheckEnd()	802bf550
KartRescue::MakeRescue(GeographyObj *, unsigned char)	802bf754
KartRescue::DoRescueCrl()	802bfb60
KartRescue::DoAfterRescueCrl()	802c071c
__sinit_KartRescue_cpp	802c0b04
KartCannon::Init(int)	802c0c10
KartCannon::MakeCannon()	802c0c38
KartCannon::DoKeep()	802c0f88
KartCannon::SetPose()	802c0ff0
KartCannon::DoCannonCrl()	802c1690
KartCannon::DoDonkyCannonCrl()	802c16c4
KartCannon::DoRainbowCannonCrl()	802c2154
KartCannon::DoAfterCannonCrl()	802c2aa8
__sinit_KartCannon_cpp	802c2b58
KartDossin::Init(int)	802c2c64
KartDossin::DoDossinTimer()	802c2cac
KartDossin::DoDossinTimer()	802c2cc4
KartDossin::DoKeep()	802c3078
KartDossin::DoDossinCrl()	802c3128
KartDossin::DoAfterDossinCrl()	802c3624
__sinit_KartDossin_cpp	802c37a8
KartTumble::Init(int)	802c38b4
KartTumble::MakeWanWanTumble(ItemObj *)	802c38ec
KartTumble::MakeKameTumble(ItemObj *)	802c3cfc
KartTumble::MakeStarTumble()	802c4104
KartTumble::MakeDashTumble()	802c44b0
KartTumble::DoTumble()	802c46a0
KartTumble::DoPakunTumble()	802c4aac
KartTumble::DoHanaTumble()	802c4e08
KartTumble::MakePoiHanaTumble()	802c5228
KartTumble::DoShootCrashCrl()	802c55c4
KartTumble::DoTumbleCrl()	802c5750
KartTumble::DoAfterTumbleCrl()	802c5778
__sinit_KartTumble_cpp	802c58e8
KartCheck::Init(int)	802c59f4
KartCheck::CheckCrash()	802c5a14
KartCheck::CheckCheange(int)	802c5a68
KartCheck::CheckSpecialDyn()	802c5ce8
KartCheck::CheckSpecialDyn2()	802c5d80
KartCheck::CheckBodyHit(int, int)	802c5e14
KartCheck::CheckAllClearKey()	802c60a4
KartCheck::CheckAllClearKeyT()	802c60cc
KartCheck::CheckPartsClearKey(int)	802c61a4
KartCheck::CheckOnlyTandemPartsClearKey(int)	802c6368
KartCheck::CheckPlayer()	802c6504
KartCheck::CheckDraw(unsigned long, int)	802c6564
KartCheck::CheckIndication()	802c65b0
__sinit_KartChecker_cpp	802c65c0
KartDamage::Init(int)	802c66cc
KartDamage::ClrAllDamage()	802c66f8
KartDamage::TstSetDamage()	802c6708
KartDamage::SetDamager()	802c6720
KartDamage::SetDriverEndDamageAnime()	802c6798
KartDamage::SetDamageAnime()	802c6804
KartDamage::SetBurnAnime()	802c6aa4
KartDamage::SetBigDamageAnime()	802c6db8
KartDamage::MakeHalfDamage()	802c71a4
KartDamage::MakeDamage()	802c734c
KartDamage::MakeBigDamage()	802c739c
KartDamage::MakeBurnDamage()	802c7404
KartDamage::DoDamageCrl()	802c7454
__sinit_KartDamage_cpp	802c7860
KartStar::Init(int)	802c796c
KartStar::MakeStar()	802c7994
KartStar::StopStar()	802c7a44
KartStar::DoStarCrl()	802c7ac4
__sinit_KartStar_cpp	802c7b5c
KartTire::Init(int)	802c7c68
__sinit_KartTire_cpp	802c7c94
KartThunder::Init(int)	802c7da0
KartThunder::ClearThunder()	802c7de0
KartThunder::MakeThunder()	802c7e6c
KartThunder::DoThunderCrl()	802c7fc4
__sinit_KartThunder_cpp	802c81c4
KartCrash::Init(int)	802c82d0
KartCrash::DoRabbitMark()	802c82fc
KartCrash::DoMatchlessTimer()	802c8360
KartCrash::CheckMatchlessTimer()	802c8514
KartCrash::SetMatchlessTimer()	802c8528
KartCrash::ClearMatchlessTimer()	802c8550
KartCrash::DoDecBalloon()	802c857c
KartCrash::DoDecPointBomb()	802c861c
KartCrash::SaveDir()	802c866c
KartCrash::NonRescue()	802c8920
KartCrash::DoRollCrashCrl()	802c897c
KartCrash::DoPitchCrashCrl()	802c8af0
KartCrash::MakeBombCrash(ItemObj *)	802c8c04
KartCrash::DoBombCrashCrl()	802c8e00
KartCrash::MakeKameCrash(ItemObj *)	802c8ebc
KartCrash::MakeTornado()	802c9040
KartCrash::DotornadeCrashCrl()	802c9200
KartCrash::MakeSpin(ItemObj *)	802c96d4
KartCrash::DoSpinCrashCrl()	802c98a0
KartCrash::MakeHalfSpin(ItemObj *)	802c99f8
KartCrash::DoHalfSpinCrashCrl()	802c9b84
KartCrash::MakeThunderSpin()	802c9ce4
KartCrash::MakeBurn(ItemObj *)	802c9d48
KartCrash::MakeFreezeCrash()	802c9e34
KartCrash::DoFreezeCrashCrl()	802c9f9c
__sinit_KartCrash_cpp	802ca0b8
KartDemoCam::Init(KartCam *)	802ca1c4
KartDemoCam::DoCol()	802ca204
KartDemoCam::InitFixChaseCam()	802ca338
KartDemoCam::DoFixChaseCam()	802ca5bc
KartDemoCam::InitChaseCam()	802ca870
KartDemoCam::DoChaseCam()	802caa94
KartDemoCam::DoFixPathCam()	802cae20
KartDemoCam::DoChasePathCam()	802cb0f4
KartDemoCam::DoFixSplCam()	802cb4c4
KartDemoCam::DoChaseSplCam()	802cb6f4
KartDemoCam::InitFixPalaCam()	802cba30
KartDemoCam::DoFixPalaCam()	802cbdac
KartDemoCam::DoDemoPathCam()	802cc218
KartDemoCam::InitDemoGoalView()	802cc5bc
KartDemoCam::DemoGoalView()	802cca14
KartDemoCam::MapView()	802cce7c
KartDemoCam::ObjectView()	802cd298
KartDemoCam::DemoInitID()	802cd55c
KartDemoCam::InitID()	802cde58
KartDemoCam::DoDemoView()	802ce140
KartDemoCam::DemoView()	802ce51c
KartDemoCam::DoStartFixPathCam()	802ce8e8
KartDemoCam::DoStartPathCam()	802cec2c
KartDemoCam::DoStartLookPathCam()	802cf098
KartDemoCam::DoStartOnlyPathCam()	802cf3c4
KartDemoCam::DoStartFixCam()	802cf758
KartDemoCam::DoStartChasePathCam()	802cf97c
KartDemoCam::VsLastCam()	802cfe58
KartDemoCam::InitLastCam()	802d0044
KartDemoCam::LastCam()	802d0404
KartDemoCam::InitStartDemoCam()	802d0aa4
KartDemoCam::StartDemoCam()	802d0ea4
KartDemoCam::SetLastDemo()	802d0f98
KartDemoCam::SetNextID()	802d0ff4
KartDemoCam::DoExecution()	802d1078
KartDemoCam::GetStartID()	802d110c
KartDemoCam::InitStartID(bool)	802d1170
KartDemoCam::StartDemoView()	802d11a8
KartDemoCam::InitStartMapCam()	802d11c8
KartDemoCam::StartMapCam()	802d15c8
KartDemoCam::SetMapNextID()	802d16a4
KartDemoCam::SetUpMapID()	802d170c
KartDemoCam::InitStaffView()	802d1768
KartDemoCam::StaffView()	802d1d74
KartDemoCam::SetStaffNextID()	802d1f00
KartDemoCam::SetUpStaffID()	802d1f60
__sinit_KartDemoCam_cpp	802d1fa8
__sinit_KartFitParam_cpp	802d20b4
KartDisp::Init(int)	802d21c0
KartDisp::DoShake()	802d21d8
KartDisp::MakeDispBodyPos()	802d2490
KartDisp::MakeSusMatrix(int)	802d2760
KartDisp::MatrixScale(float (*) [4], float)	802d3160
KartDisp::MakeTireDispMatrix()	802d31d0
KartDisp::MakeScaleMatrix()	802d3624
KartDisp::MakeKartDisp()	802d3c24
__sinit_KartDisp_cpp	802d3ea8
KartHandle::Init(int)	802d3fb4
KartHandle::DoMotor(MotorManager::MotorType)	802d3fdc
KartHandle::DoPowerMotor(float, unsigned char, unsigned char)	802d410c
KartHandle::StopMotor()	802d4250
KartHandle::WatchFrontalCollisionForce()	802d42bc
__sinit_KartHandle_cpp	802d44b0
KartAppendix::Init(int)	802d45bc
__sinit_KartApeendix_cpp	802d45e4
KartPipe::Init(int)	802d46f0
KartPipe::MakePipe()	802d4714
KartPipe::SetPose()	802d4894
KartPipe::DoPipeCrl()	802d4d44
KartPipe::DoAfterPipeCrl()	802d50c4
__sinit_KartPipe_cpp	802d513c
KartAnt::Init(int)	802d5248
KartAnt::SetPose()	802d526c
KartAnt::DoAntCrl()	802d5600
KartAnt::DoAfterAntCrl()	802d5828
__sinit_KartAnt_cpp	802d5938
KartGame::DoChapterOne()	802d5a44
KartGame::DoChapterTwo()	802d5c00
KartGame::DoChapterThree()	802d5da8
KartGame::DoChapterFive()	802d60ac
KartGame::DoChapterSix()	802d6668
KartGame::DoChapterBalloon()	802d6944
KartGame::DoChapterBomEsc()	802d6e70
KartGame::DoStaffRoll()	802d7144
KartGame::DoStartGoalCtl()	802d72fc
__sinit_kartChapter_cpp	802d7564
KartPerCam::Init(int)	802d7670
KartPerCam::InitFixPalaCam()	802d76e8
KartPerCam::InitID()	802d79c4
__sinit_KartPerCam_cpp	802d8380
